const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":484,\"nextId\":484,\"documentIds\":{\"0\":\"2\",\"1\":\"2#什么是代理\",\"2\":\"2#jdk-动态代理\",\"3\":\"2#实例\",\"4\":\"2#jdk动态代理步骤\",\"5\":\"2#cglib-代理\",\"6\":\"2#实例-1\",\"7\":\"2#对比\",\"8\":\"2#实现原理\",\"9\":\"2#面向\",\"10\":\"2#使用注意\",\"11\":\"2#各自局限\",\"12\":\"2#性能对比\",\"13\":\"3\",\"14\":\"3#collection\",\"15\":\"3#实现类比较\",\"16\":\"3#arraylist\",\"17\":\"3#构造方法\",\"18\":\"3#判断\",\"19\":\"3#新增\",\"20\":\"3#删除\",\"21\":\"3#扩展方法\",\"22\":\"3#linkedlist\",\"23\":\"3#构造方法-1\",\"24\":\"3#判断-1\",\"25\":\"3#新增-1\",\"26\":\"3#删除-1\",\"27\":\"3#扩展方法-1\",\"28\":\"3#vector\",\"29\":\"3#构造方法-2\",\"30\":\"3#判断-2\",\"31\":\"3#新增-2\",\"32\":\"3#删除-2\",\"33\":\"3#扩展方法-2\",\"34\":\"3#stack\",\"35\":\"3#hashset\",\"36\":\"3#treeset\",\"37\":\"3#copyonwritearraylist\",\"38\":\"3#copyonwritearrayset\",\"39\":\"3#concurrentskiplistset\",\"40\":\"3#map\",\"41\":\"3#hashmap\",\"42\":\"3#hashmap的扩缩容\",\"43\":\"3#treemap\",\"44\":\"3#weakhashmap\",\"45\":\"3#hashtable\",\"46\":\"3#concurrenthashmap\",\"47\":\"3#concurrentskiplistmap\",\"48\":\"3#queue\",\"49\":\"3#arrayblockingqueue\",\"50\":\"3#linkedblockingqueue\",\"51\":\"3#linkedblockingdeque\",\"52\":\"3#concurrentlinkedqueue\",\"53\":\"3#concurrentlinkeddeque\",\"54\":\"4\",\"55\":\"4#jvm-的编译\",\"56\":\"4#类加载子系统\",\"57\":\"4#加载\",\"58\":\"4#类加载器有哪些\",\"59\":\"4#tomcat-为什么要自定义类加载器\",\"60\":\"4#webappclassloader-加载流程\",\"61\":\"4#链接-linking\",\"62\":\"4#验证-verify\",\"63\":\"4#准备-prepare\",\"64\":\"4#解析-resolve\",\"65\":\"4#初始化-initialization\",\"66\":\"4#运行时数据区\",\"67\":\"4#虚拟机栈\",\"68\":\"4#本地方法栈\",\"69\":\"4#程序计数器\",\"70\":\"4#方法区\",\"71\":\"4#堆\",\"72\":\"4#执行引擎\",\"73\":\"4#解释器\",\"74\":\"4#jit\",\"75\":\"4#垃圾回收器\",\"76\":\"4#如何判断一个对象是否还存活\",\"77\":\"4#垃圾收集算法\",\"78\":\"4#垃圾收集器\",\"79\":\"4#优化\",\"80\":\"4#获取-jvm-数据\",\"81\":\"4#jvm-数据分析\",\"82\":\"4#调优\",\"83\":\"4#优化工具\",\"84\":\"5\",\"85\":\"5#_1-属性\",\"86\":\"5#_2-构造方法\",\"87\":\"5#public-string\",\"88\":\"5#public-string-string-original\",\"89\":\"5#public-string-char-value\",\"90\":\"5#public-string-byte-bytes\",\"91\":\"5#public-string-stringbuffer-buffer\",\"92\":\"5#public-string-stringbuilder-builder\",\"93\":\"5#_3-常用方法\",\"94\":\"5#字符串的长度-length\",\"95\":\"5#是否为空-isempty\",\"96\":\"5#获得字符串的第几个字符-charat-int-index\",\"97\":\"5#比较内容是否相等-equals-object-object\",\"98\":\"5#忽略大小写比较是否相等-equalsignorecase-string-anotherstring\",\"99\":\"5#比较字符串的大小-compareto-string-anotherstring\",\"100\":\"5#判断字符串是否从某个字符串开始的-startswith-string-prefix-int-toffset\",\"101\":\"5#_4-常见问题\",\"102\":\"6\",\"103\":\"7\",\"104\":\"7#为什么需要多线程\",\"105\":\"7#为什么会出现并发问题\",\"106\":\"7#可见性-cpu缓存引起\",\"107\":\"7#原子性-分时复用引起\",\"108\":\"7#有序性-重排序引起\",\"109\":\"7#java是怎么解决并发问题的\",\"110\":\"7#volatile\",\"111\":\"7#synchronized\",\"112\":\"7#final\",\"113\":\"7#happens-before\",\"114\":\"7#原子性\",\"115\":\"7#可见性\",\"116\":\"7#有序性\",\"117\":\"7#线程安全分类\",\"118\":\"7#不可变\",\"119\":\"7#绝对线程安全\",\"120\":\"7#相对线程安全\",\"121\":\"7#线程兼容\",\"122\":\"7#线程对立\",\"123\":\"7#线程安全的实现\",\"124\":\"7#互斥同步\",\"125\":\"7#非阻塞同步\",\"126\":\"7#cas\",\"127\":\"7#atomicinteger\",\"128\":\"7#aba\",\"129\":\"7#无同步方案\",\"130\":\"7#栈封闭\",\"131\":\"7#线程本地存储-thread-local-storage\",\"132\":\"7#可重入代码-reentrant-code\",\"133\":\"7#线程状态\",\"134\":\"7#新建-new\",\"135\":\"7#可运行-runnable\",\"136\":\"7#阻塞-blocking\",\"137\":\"7#无限期等待-waiting\",\"138\":\"7#限期等待-timed-waiting\",\"139\":\"7#死亡-terminated\",\"140\":\"7#线程使用方式\",\"141\":\"7#实现接口-vs-继承-thread\",\"142\":\"7#基础线程机制\",\"143\":\"7#executor\",\"144\":\"7#daemon\",\"145\":\"7#sleep\",\"146\":\"7#yield\",\"147\":\"7#线程中断\",\"148\":\"7#interruptedexception\",\"149\":\"7#interrupted\",\"150\":\"7#executor-的中断操作\",\"151\":\"7#线程互斥同步\",\"152\":\"7#线程间的协作\",\"153\":\"7#join\",\"154\":\"7#wait-notify-notifyall\",\"155\":\"7#wait-和-sleep-的区别\",\"156\":\"7#await-signal-signalall\",\"157\":\"7#java-锁\",\"158\":\"7#乐观锁-vs-悲观锁\",\"159\":\"7#自旋锁-vs-适应性自旋锁\",\"160\":\"7#无锁-vs-偏向锁-vs-轻量级锁-vs-重量级锁\",\"161\":\"7#公平锁-vs-非公平锁\",\"162\":\"7#可重入锁-vs-非可重入锁\",\"163\":\"7#独享锁-排他锁-vs-共享锁\",\"164\":\"7#final-详解\",\"165\":\"7#final基础使用\",\"166\":\"7#修饰类\",\"167\":\"7#修饰方法\",\"168\":\"7#修饰参数\",\"169\":\"7#修饰变量\",\"170\":\"7#final域重排序规则\",\"171\":\"7#final域为基本类型\",\"172\":\"7#写final域重排序规则\",\"173\":\"7#读final域重排序规则\",\"174\":\"7#final域为引用类型\",\"175\":\"7#对final修饰的对象的成员域写操作\",\"176\":\"7#对final修饰的对象的成员域读操作\",\"177\":\"7#关于final重排序的总结\",\"178\":\"7#final的实现原理\",\"179\":\"7#volatile-详解\",\"180\":\"7#volatile的作用详解\",\"181\":\"7#防重排序\",\"182\":\"7#实现可见性\",\"183\":\"7#保证原子性-单次读-写\",\"184\":\"7#问题1-i-为什么不能保证原子性\",\"185\":\"7#问题2-共享的long和double变量的为什么要用volatile\",\"186\":\"7#volatile-的实现原理\",\"187\":\"7#volatile-可见性实现\",\"188\":\"7#volatile-有序性实现\",\"189\":\"7#happens-before-规则中有一条是-volatile-变量规则-对一个-volatile-域的写-happens-before-于任意后续对这个-volatile-域的读。\",\"190\":\"7#volatile-禁止重排序\",\"191\":\"7#synchronized-详解\",\"192\":\"7#juc\",\"193\":\"7#juc-原子类\",\"194\":\"7#juc-锁\",\"195\":\"7#juc-集合\",\"196\":\"7#juc-线程池\",\"197\":\"7#juc-工具类\",\"198\":\"7#threadlocal\",\"199\":\"7#transmittable-thread-local\",\"200\":\"8\",\"201\":\"8#_1-java-语言有哪些特点\",\"202\":\"8#_2-面向对象和面向过程的区别\",\"203\":\"8#_3-八种基本数据类型的大小、以及他们的封装类\",\"204\":\"8#_4-instanceof\",\"205\":\"8#_5-自动装箱和拆箱\",\"206\":\"8#_6-重载和重写\",\"207\":\"8#_7-和-equals\",\"208\":\"8#_8-hashcode-作用\",\"209\":\"8#_9-string、stringbuffer、stringbuilder-区别\",\"210\":\"8#_10-arraylist-和-linkedlist-的区别\",\"211\":\"8#_11-hashmap-和-hashtable-的区别\",\"212\":\"8#_12-collection-包和-collections-包的区别\",\"213\":\"8#_13-java-的四种引用\",\"214\":\"8#_14-泛型常用特点\",\"215\":\"8#_15-java-创建对象的方式\",\"216\":\"8#_16-有没有可能两个对象不等-但是-hashcode-相等\",\"217\":\"8#_17-深拷贝和浅拷贝\",\"218\":\"8#_18-final-有哪些用法\",\"219\":\"8#_19-static-的用法\",\"220\":\"8#_20-3-0-1-0-3-返回值是什么\",\"221\":\"8#_21-a-a-b-和-a-b-有什么区别\",\"222\":\"8#_22-try-catch-finally-try-里面有-return-finally-还会执行吗\",\"223\":\"8#_23-exception-和-error-包结构\",\"224\":\"8#_24-oom-你遇到过哪些情况-sof-你遇到过那些情况\",\"225\":\"8#_25-简述线程、程序、进程的基本概念。以及他们之间的关系\",\"226\":\"8#_26-某些字段不行序列化怎么办\",\"227\":\"8#_27-java-中的-io-流\",\"228\":\"8#_28-io-和-nio-的区别\",\"229\":\"8#_29-java-反射的作用与原理\",\"230\":\"8#_30-list、set、map-什么区别\",\"231\":\"8#_31-object-有哪些方法\",\"232\":\"8#_32-arraylist-和-linkedlist\",\"233\":\"8#_33-存在数组了为什么还要-arraylist\",\"234\":\"8#_34-什么是-fail-fast\",\"235\":\"8#_35-hashtable-和-hashmap\",\"236\":\"8#_36-hashmap-中的-key-可以使用任何类作为-key-吗\",\"237\":\"8#_37-hashmap-的长度为什么是-2-的-n-次方\",\"238\":\"8#_38-hashmap-和-concurrenthashmap-的异同\",\"239\":\"8#_39-红黑树\",\"240\":\"8#_40-怎么处理异常\",\"241\":\"11\",\"242\":\"12\",\"243\":\"12#_1-大盘的弱转强\",\"244\":\"12#_2-概念板块弱转强\",\"245\":\"13\",\"246\":\"14\",\"247\":\"14#竞价阶段\",\"248\":\"14#早间\",\"249\":\"14#_9-15\",\"250\":\"14#_9-25\",\"251\":\"14#交易阶段\",\"252\":\"14#观察资金情况\",\"253\":\"14#旧热点\",\"254\":\"14#接力\",\"255\":\"14#热点\",\"256\":\"14#复盘\",\"257\":\"14#大盘分析\",\"258\":\"14#热点板块分析\",\"259\":\"14#个股分析\",\"260\":\"14#资金分析\",\"261\":\"15\",\"262\":\"15#环境准备\",\"263\":\"15#_1-关闭防火墙\",\"264\":\"15#_2-更新-yum\",\"265\":\"15#_3-安装工具\",\"266\":\"15#安装-docker\",\"267\":\"15#_1-设置开机启动\",\"268\":\"15#_2-使用阿里加速\",\"269\":\"15#安装-rancher\",\"270\":\"15#安装-kubernetes\",\"271\":\"15#_1-创建集群\",\"272\":\"15#_2-安装-master\",\"273\":\"15#_3-安装-node\",\"274\":\"15#_4-笔记本合盖\",\"275\":\"15#_5-主机名\",\"276\":\"15#rancher-cli-工具使用\",\"277\":\"15#通过-ui-添加-token\",\"278\":\"15#使用\",\"279\":\"15#安装-kubectl\",\"280\":\"15#安装-harbor\",\"281\":\"15#配置-harbor\",\"282\":\"15#启动-harbor\",\"283\":\"15#注意\",\"284\":\"15#安装-jenkins\",\"285\":\"15#提升权限\",\"286\":\"15#设置环境\",\"287\":\"15#配置-jenkins-插件工具\",\"288\":\"15#设置流水线\",\"289\":\"15#kubernetes-部署-nginx-测试\",\"290\":\"15#jenkins-打包-springboot-镜像测试\",\"291\":\"15#设置-jenkins-流水线\",\"292\":\"15#查看打包过程\",\"293\":\"15#查看-kubernetes-集群中是否部署成功\",\"294\":\"15#后记\",\"295\":\"15#_1-安装-cookiecutter\",\"296\":\"15#_2-编写配置文件\",\"297\":\"15#_3-创建模版文件\",\"298\":\"16\",\"299\":\"17\",\"300\":\"17#_1-架构基础\",\"301\":\"17#架构是什么\",\"302\":\"17#架构设计的目的\",\"303\":\"17#复杂度来源\",\"304\":\"17#_2-架构设计原则\",\"305\":\"17#合适原则-合适优于业界领先\",\"306\":\"17#简单原则-简单优于复杂\",\"307\":\"17#演化原则-演化优于一步到位\",\"308\":\"17#_3-架构设计流程\",\"309\":\"17#识别复杂度\",\"310\":\"17#设计备选方案\",\"311\":\"17#评估和选择备选方案\",\"312\":\"17#详细方案\",\"313\":\"17#_4-存储高性能\",\"314\":\"17#关系数据库\",\"315\":\"17#nosql\",\"316\":\"17#缓存\",\"317\":\"17#_5-计算高性能\",\"318\":\"17#单服务器高性能\",\"319\":\"17#集群高性能\",\"320\":\"17#_6-cap\",\"321\":\"17#cap-理论\",\"322\":\"17#cap-应用\",\"323\":\"17#cap-细节\",\"324\":\"17#acid、base\",\"325\":\"17#cap-和-base\",\"326\":\"17#_7-fmea\",\"327\":\"17#fmea-介绍\",\"328\":\"17#fmea-方法\",\"329\":\"17#fmea-实战\",\"330\":\"17#_8-存储高可用\",\"331\":\"17#问题-主要是副本冗余实现高可用\",\"332\":\"17#主备复制\",\"333\":\"17#主从复制\",\"334\":\"17#主备倒换和主从倒换\",\"335\":\"17#主主复制\",\"336\":\"17#数据集群\",\"337\":\"17#数据分区\",\"338\":\"17#_9-计算高可用\",\"339\":\"17#设计关键点\",\"340\":\"17#主备\",\"341\":\"17#主从\",\"342\":\"17#根据节点角色分类\",\"343\":\"17#_10-业务高可用\",\"344\":\"17#异地多活\",\"345\":\"17#接口级的故障应对方案\",\"346\":\"17#_11-可扩展模式\",\"347\":\"17#概述\",\"348\":\"17#基本思想\",\"349\":\"17#方式\",\"350\":\"17#_12-分层架构\",\"351\":\"17#类型\",\"352\":\"17#详解\",\"353\":\"17#_13-soa-架构\",\"354\":\"17#历史\",\"355\":\"17#详解-1\",\"356\":\"17#_14-微服务\",\"357\":\"17#微服务和soa的关系\",\"358\":\"17#微服务的陷阱\",\"359\":\"17#最佳实践\",\"360\":\"17#_15-微内核架构-插件化架构\",\"361\":\"17#设计的关键点\",\"362\":\"17#osgi架构\",\"363\":\"17#规则引擎架构\",\"364\":\"17#_16-消息队列设计实战\",\"365\":\"17#_17-互联网架构演进\",\"366\":\"17#产品类-技术创新推进业务发展-例如手机技术\",\"367\":\"17#服务类-业务发展推送技术的发展\",\"368\":\"17#_18-互联网架构模版\",\"369\":\"17#总体结构\",\"370\":\"17#存储层技术\",\"371\":\"17#开发层技术\",\"372\":\"17#服务层技术\",\"373\":\"17#网络层技术\",\"374\":\"17#用户层技术\",\"375\":\"17#业务层技术\",\"376\":\"17#平台技术\",\"377\":\"17#_19-架构重构\",\"378\":\"17#原因\",\"379\":\"17#目标\",\"380\":\"17#阶段\",\"381\":\"17#流程\",\"382\":\"17#_20-开源系统\",\"383\":\"18\",\"384\":\"18#_1-环境-股市\",\"385\":\"18#股市的由来\",\"386\":\"18#股市的本质\",\"387\":\"18#股市生存的重要思维\",\"388\":\"18#股市的主要规律\",\"389\":\"18#_2-对手-各阶层\",\"390\":\"18#_1-政府-监管层\",\"391\":\"18#_2-中央汇金公司、全国社保基金及保险基金\",\"392\":\"18#_3-产业资本\",\"393\":\"18#_4-公募基金、券商集合理财等专业机构\",\"394\":\"18#_5-私募及游资\",\"395\":\"18#_6-一切无组织、无纪律、无战斗力的资金\",\"396\":\"18#_7-精明的散户\",\"397\":\"18#_3-自我提升\",\"398\":\"18#_5-则股\",\"399\":\"18#_6-择时间\",\"400\":\"18#_1-关于-时机-的哲理探源\",\"401\":\"18#_7-综合篇\",\"402\":\"18#_1-情绪流的情报收集系统\",\"403\":\"18#_2-情绪流看盘的四大原则\",\"404\":\"18#_3-情绪流看盘的主要内容\",\"405\":\"18#_4-情绪流复盘的三大类型\",\"406\":\"18#_5-情绪流每日复盘的主要内容\",\"407\":\"18@1\",\"408\":\"20\",\"409\":\"20#_2018-09-19\",\"410\":\"20#买入\",\"411\":\"20#中天能源600856\",\"412\":\"20#k线\",\"413\":\"20#分时图\",\"414\":\"20#_2018-09-21\",\"415\":\"20#买入-1\",\"416\":\"20#北讯集团002359\",\"417\":\"20#k线-1\",\"418\":\"20#分时图-1\",\"419\":\"20#卖出\",\"420\":\"20#中天能源600856-1\",\"421\":\"20#_2018-09-25\",\"422\":\"20#买入-2\",\"423\":\"20#金财互联002530\",\"424\":\"20#k线-2\",\"425\":\"20#分时图-2\",\"426\":\"20#卖出-1\",\"427\":\"20#北讯集团0002359\",\"428\":\"20#_2018-08-26\",\"429\":\"20#买入-3\",\"430\":\"20#山东墨龙032490\",\"431\":\"20#k线-3\",\"432\":\"20#分时图-3\",\"433\":\"20#卖出-2\",\"434\":\"20#金财互联002530-1\",\"435\":\"20#_2018-09-27\",\"436\":\"20#买入-4\",\"437\":\"20#明星电力600101\",\"438\":\"20#k线-4\",\"439\":\"20#分时图-4\",\"440\":\"20#卖出-3\",\"441\":\"20#山东墨龙032490-1\",\"442\":\"20#_2018-09-28\",\"443\":\"20#买入-5\",\"444\":\"20#江泉实业600212\",\"445\":\"20#k线-5\",\"446\":\"20#分时图-5\",\"447\":\"20#银之杰300085\",\"448\":\"20#k线-6\",\"449\":\"20#分时图-6\",\"450\":\"20#卖出-4\",\"451\":\"20#明星电力600101-1\",\"452\":\"20#_2018-10-08\",\"453\":\"20#买入-6\",\"454\":\"20#中远海能600026\",\"455\":\"20#k线-7\",\"456\":\"20#分时图-7\",\"457\":\"20#卖出-5\",\"458\":\"20#江泉实业600212-1\",\"459\":\"20#银之杰300085-1\",\"460\":\"20#_2018-10-09\",\"461\":\"20#买入-7\",\"462\":\"20#龙头股份600630\",\"463\":\"20#k线-8\",\"464\":\"20#分时图-8\",\"465\":\"20#卖出-6\",\"466\":\"20#中远海能600026-1\",\"467\":\"20#_2019-10-10\",\"468\":\"20#买入-8\",\"469\":\"20#仁智股份002629\",\"470\":\"20#k线-9\",\"471\":\"20#分时图-9\",\"472\":\"20#卖出-7\",\"473\":\"20#龙头股份600630-1\",\"474\":\"21\",\"475\":\"22\",\"476\":\"23\",\"477\":\"24\",\"478\":\"25\",\"479\":\"26\",\"480\":\"27\",\"481\":\"28\",\"482\":\"29\",\"483\":\"30\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[4],\"1\":[1,9],\"2\":[2,20],\"3\":[1,52],\"4\":[1,18],\"5\":[2,9],\"6\":[1,56],\"7\":[1],\"8\":[1,7],\"9\":[1,5],\"10\":[2,6],\"11\":[2,8],\"12\":[1,14],\"13\":[1,8],\"14\":[1,62],\"15\":[1,24],\"16\":[1,12],\"17\":[1,25],\"18\":[1,4],\"19\":[1,62],\"20\":[1,11],\"21\":[1],\"22\":[1,6],\"23\":[1,5],\"24\":[1,3],\"25\":[1,14],\"26\":[1,4],\"27\":[1],\"28\":[1,8],\"29\":[1,6],\"30\":[1,4],\"31\":[1,3],\"32\":[1],\"33\":[1],\"34\":[1],\"35\":[1],\"36\":[1],\"37\":[1],\"38\":[1],\"39\":[1],\"40\":[1,82],\"41\":[1,74],\"42\":[1,37],\"43\":[1],\"44\":[1],\"45\":[1],\"46\":[1],\"47\":[1],\"48\":[1],\"49\":[1],\"50\":[1],\"51\":[1],\"52\":[1],\"53\":[1],\"54\":[1,31],\"55\":[2,10],\"56\":[1,16],\"57\":[1,2],\"58\":[1],\"59\":[2,44],\"60\":[2,200],\"61\":[2,4],\"62\":[3,26],\"63\":[3,5],\"64\":[3,4],\"65\":[2,8],\"66\":[1,54],\"67\":[1,10],\"68\":[1,15],\"69\":[1,16],\"70\":[1,23],\"71\":[1,38],\"72\":[1,2],\"73\":[1],\"74\":[1,6],\"75\":[1,1],\"76\":[1,23],\"77\":[1,63],\"78\":[1,104],\"79\":[1],\"80\":[3,8],\"81\":[2,11],\"82\":[1,2],\"83\":[1,24],\"84\":[1],\"85\":[2,37],\"86\":[2],\"87\":[3,35],\"88\":[4,47],\"89\":[5,44],\"90\":[5,65],\"91\":[5,49],\"92\":[5,65],\"93\":[2],\"94\":[3,32],\"95\":[3,25],\"96\":[5,65],\"97\":[5,68],\"98\":[5,89],\"99\":[5,135],\"100\":[7,79],\"101\":[2],\"102\":[1],\"103\":[1],\"104\":[1,26],\"105\":[1],\"106\":[2,21],\"107\":[2,24],\"108\":[2,48],\"109\":[1,14],\"110\":[1],\"111\":[1],\"112\":[1],\"113\":[2,43],\"114\":[1,7],\"115\":[1,16],\"116\":[1,13],\"117\":[1],\"118\":[1,7],\"119\":[1,3],\"120\":[1,5],\"121\":[1,16],\"122\":[1,9],\"123\":[1],\"124\":[1,12],\"125\":[1],\"126\":[1,34],\"127\":[1,15],\"128\":[1,24],\"129\":[1,5],\"130\":[1,5],\"131\":[5,29],\"132\":[1,13],\"133\":[1,2],\"134\":[3,2],\"135\":[3,9],\"136\":[3,3],\"137\":[3,20],\"138\":[4,37],\"139\":[3,3],\"140\":[1,15],\"141\":[4,12],\"142\":[1],\"143\":[1,15],\"144\":[1,11],\"145\":[2,13],\"146\":[2,8],\"147\":[1,3],\"148\":[1,15],\"149\":[2,21],\"150\":[2,11],\"151\":[1,10],\"152\":[1,4],\"153\":[2,7],\"154\":[4,27],\"155\":[4,11],\"156\":[4,21],\"157\":[2],\"158\":[3,22],\"159\":[3,34],\"160\":[5,7],\"161\":[3,19],\"162\":[3,8],\"163\":[4,13],\"164\":[2],\"165\":[1],\"166\":[1,9],\"167\":[1,16],\"168\":[1],\"169\":[1],\"170\":[1],\"171\":[1],\"172\":[1,8],\"173\":[1,13],\"174\":[1],\"175\":[1,9],\"176\":[1,12],\"177\":[1,13],\"178\":[1,17],\"179\":[2],\"180\":[1],\"181\":[1,13],\"182\":[1,6],\"183\":[3,3],\"184\":[3,14],\"185\":[3,8],\"186\":[2],\"187\":[2,22],\"188\":[2],\"189\":[10],\"190\":[2,43],\"191\":[2],\"192\":[1],\"193\":[2],\"194\":[2],\"195\":[2],\"196\":[2],\"197\":[2],\"198\":[1],\"199\":[3],\"200\":[2],\"201\":[3,13],\"202\":[2,21],\"203\":[3,45],\"204\":[2,17],\"205\":[2,11],\"206\":[2,10],\"207\":[4,5],\"208\":[3,7],\"209\":[5,14],\"210\":[5,12],\"211\":[5,21],\"212\":[5,4],\"213\":[3,21],\"214\":[2,1],\"215\":[3,7],\"216\":[6,27],\"217\":[2,6],\"218\":[3,74],\"219\":[3,6],\"220\":[7,2],\"221\":[5,13],\"222\":[8,8],\"223\":[5,7],\"224\":[5,2],\"225\":[5,29],\"226\":[3,8],\"227\":[5,9],\"228\":[5,11],\"229\":[3,59],\"230\":[5,10],\"231\":[3,21],\"232\":[4],\"233\":[3,1],\"234\":[4,10],\"235\":[4],\"236\":[7,11],\"237\":[7],\"238\":[6],\"239\":[2],\"240\":[2],\"241\":[2],\"242\":[1,39],\"243\":[2,56],\"244\":[2,366],\"245\":[1],\"246\":[1],\"247\":[1],\"248\":[1,3],\"249\":[2,6],\"250\":[2,10],\"251\":[1],\"252\":[1],\"253\":[1,2],\"254\":[1,3],\"255\":[1,2],\"256\":[1],\"257\":[1],\"258\":[1],\"259\":[1],\"260\":[1],\"261\":[1,17],\"262\":[1],\"263\":[2,8],\"264\":[3,3],\"265\":[2,10],\"266\":[2,23],\"267\":[2,4],\"268\":[2,25],\"269\":[2,20],\"270\":[2],\"271\":[2,5],\"272\":[3,6],\"273\":[3,3],\"274\":[2,2],\"275\":[2,8],\"276\":[3,19],\"277\":[4],\"278\":[1,17],\"279\":[2,34],\"280\":[2,20],\"281\":[2,115],\"282\":[2,5],\"283\":[1,62],\"284\":[2,28],\"285\":[1,16],\"286\":[1,44],\"287\":[3,6],\"288\":[1,25],\"289\":[4,58],\"290\":[4],\"291\":[3,146],\"292\":[1,6],\"293\":[3,1],\"294\":[1,5],\"295\":[3,4],\"296\":[2,28],\"297\":[2,55],\"298\":[2],\"299\":[4],\"300\":[2],\"301\":[1,20],\"302\":[1,1],\"303\":[1,30],\"304\":[2],\"305\":[2,4],\"306\":[2,4],\"307\":[2,3],\"308\":[2],\"309\":[1,4],\"310\":[1,8],\"311\":[1,11],\"312\":[1,3],\"313\":[2],\"314\":[1,76],\"315\":[1,45],\"316\":[1,19],\"317\":[2],\"318\":[1,133],\"319\":[1,61],\"320\":[2],\"321\":[2,14],\"322\":[2,24],\"323\":[2,20],\"324\":[2,48],\"325\":[3,12],\"326\":[2],\"327\":[2,11],\"328\":[2,40],\"329\":[2],\"330\":[2],\"331\":[2,4],\"332\":[1,50],\"333\":[1,37],\"334\":[1,52],\"335\":[1,35],\"336\":[1,83],\"337\":[1,20],\"338\":[2],\"339\":[1,2],\"340\":[1,23],\"341\":[1,21],\"342\":[1,38],\"343\":[2],\"344\":[1,91],\"345\":[1,23],\"346\":[2],\"347\":[1,1],\"348\":[1,15],\"349\":[1,13],\"350\":[2],\"351\":[1,9],\"352\":[1,4],\"353\":[3],\"354\":[1,7],\"355\":[1,4],\"356\":[2],\"357\":[1,11],\"358\":[1,11],\"359\":[1,34],\"360\":[4],\"361\":[1,3],\"362\":[1],\"363\":[1,29],\"364\":[2],\"365\":[2],\"366\":[3],\"367\":[2],\"368\":[2],\"369\":[1],\"370\":[1,4],\"371\":[1,3],\"372\":[1,3],\"373\":[1,4],\"374\":[1,3],\"375\":[1],\"376\":[1,4],\"377\":[2],\"378\":[1,5],\"379\":[1,5],\"380\":[1,15],\"381\":[1,6],\"382\":[2],\"383\":[2],\"384\":[4],\"385\":[1,7],\"386\":[1,16],\"387\":[1,15],\"388\":[1,11],\"389\":[4],\"390\":[4,12],\"391\":[3,25],\"392\":[2,11],\"393\":[3,20],\"394\":[2,24],\"395\":[4,102],\"396\":[2],\"397\":[2],\"398\":[2,1019],\"399\":[2],\"400\":[4,69],\"401\":[2],\"402\":[2,102],\"403\":[2,177],\"404\":[2,247],\"405\":[2,108],\"406\":[2,292],\"407\":[null,null,1],\"408\":[1],\"409\":[3],\"410\":[1],\"411\":[1],\"412\":[1,2],\"413\":[1,1],\"414\":[3],\"415\":[1],\"416\":[1],\"417\":[1,6],\"418\":[1,2],\"419\":[1],\"420\":[1,7],\"421\":[3],\"422\":[1],\"423\":[1],\"424\":[1,3],\"425\":[1,2],\"426\":[1],\"427\":[1,6],\"428\":[3],\"429\":[1],\"430\":[1],\"431\":[1,6],\"432\":[1,2],\"433\":[1],\"434\":[1,6],\"435\":[3],\"436\":[1],\"437\":[1],\"438\":[1,10],\"439\":[1,4],\"440\":[1],\"441\":[1,4],\"442\":[3],\"443\":[1],\"444\":[1],\"445\":[1,4],\"446\":[1,4],\"447\":[1],\"448\":[1,5],\"449\":[1,4],\"450\":[1],\"451\":[1,3],\"452\":[3],\"453\":[1],\"454\":[1],\"455\":[1,4],\"456\":[1,3],\"457\":[1],\"458\":[1,3],\"459\":[1,3],\"460\":[3],\"461\":[1],\"462\":[1],\"463\":[1,5],\"464\":[1,1],\"465\":[1],\"466\":[1,3],\"467\":[2],\"468\":[1],\"469\":[1],\"470\":[1,5],\"471\":[1,4],\"472\":[1],\"473\":[1,4],\"474\":[1],\"475\":[1],\"476\":[1,3],\"477\":[1],\"478\":[1],\"479\":[1],\"480\":[1],\"481\":[1],\"482\":[1],\"483\":[1]},\"averageFieldLength\":[1.861529636323025,26.09905521751466,0.0024509803921568627],\"storedFields\":{\"0\":{\"h\":\"JDK 动态代理和 CGLIB 代理\"},\"1\":{\"h\":\"什么是代理\",\"t\":[\"代理模式（Proxy Pattern）给某一个对象提供一个代理，并由代理对象控制原对象的引用。代理对象在客户端和目标对象之间起到中介作用。即使用时通过中介使用，具体到对象原对象的操作则是需要代理对象处理的。\"]},\"2\":{\"h\":\"JDK 动态代理\",\"t\":[\"自Java 1.3以后，Java提供了动态代理技术，允许开发者在运行期创建接口的代理实例，后来这项技术被用到了Spring的很多地方。JDK动态代理主要涉及java.lang.reflect包下边的两个类：Proxy和InvocationHandler。其中，InvocationHandler是一个接口，可以通过实现该接口定义横切逻辑（如：我们在方法执行前后打印的日志，本文只是为了演示，实际的应用一般不会只是简单的打印日志的），并通过反射机制调用目标类的代码，动态地将横切逻辑和业务逻辑编织在一起。\"]},\"3\":{\"h\":\"实例\",\"t\":[\"代理的接口\",\"public interface Parent { void sayHell(String s); } \",\"代理的对象类\",\"public class Children implements Parent{ @Override public void sayHell(String s) { System.out.println(\\\"children\\\" + s); } } \",\"创建代理类\",\"public class ProxyHandler implements InvocationHandler { private Object o; public ProxyHandler(Object o) { this.o = o; } @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { System.out.println(\\\"开始事务\\\"); method.invoke(o, args); System.out.println(\\\"结束事务\\\"); return null; } } \",\"测试类\",\"public class ProxyTest { public static void main(String[] args) { ProxyHandler handler = new ProxyHandler(new Children()); Parent parent = (Parent) Proxy.newProxyInstance( Children.class.getClassLoader(), new Class[]{Parent.class}, handler); parent.sayHell(\\\"hello\\\"); } } \",\"结果\",\"开始事务 childrenhello 结束事务 \"]},\"4\":{\"h\":\"JDK动态代理步骤\",\"t\":[\"拿到被代理对象的引用，并且通过反射获取到它的所有的接口。\",\"通过JDK Proxy类重新生成一个新的类，同时新的类要实现被代理类所实现的所有的接口。\",\"动态生成 Java 代码，把新加的业务逻辑方法由一定的逻辑代码去调用。\",\"编译新生成的 Java 代码.class。\",\"将新生成的Class文件重新加载到 JVM 中运行。\",\"所以说JDK动态代理的核心是通过重写被代理对象所实现的接口中的方法来重新生成代理类来实现的，那么假如被代理对象没有实现接口呢？那么这时候就需要CGLIB动态代理了。\"]},\"5\":{\"h\":\"CGLIB 代理\",\"t\":[\"CGLIB(Code Generation Library)是一个基于ASM的字节码生成库，它允许我们在运行时对字节码进行修改和动态生成。CGLIB通过继承方式实现代理，在子类中采用方法拦截的技术拦截所有父类方法的调用并顺势织入横切逻辑。\"]},\"6\":{\"h\":\"实例\",\"t\":[\"代理的类\",\"public class Hello { public void sayHell(String s) { System.out.println(\\\"Hello \\\" + s); } } \",\"创建代理类\",\"public class HelloProxy implements MethodInterceptor{ private Enhancer enhancer = new Enhancer(); public <T> T getProxy(Class<T> clazz){ //设置需要创建子类的类 enhancer.setSuperclass(clazz); enhancer.setCallback(this); //通过字节码技术动态创建子类实例 return (T) enhancer.create(); } @Override public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable { System.out.println(\\\"开始事务\\\"); proxy.invokeSuper(obj,args); System.out.println(\\\"结束事务\\\"); return null; } } \",\"测试类\",\"public class HelloProxyTest { public static void main(String[] args) { HelloProxy helloProxy = new HelloProxy(); Hello hello = (Hello) helloProxy.getProxy(Hello.class); hello.sayHell(\\\"hello\\\"); } } \",\"结果\",\"开始事务 Hello hello 结束事务 \"]},\"7\":{\"h\":\"对比\"},\"8\":{\"h\":\"实现原理\",\"t\":[\"JDK动态代理具体实现原理：\",\"核心是通过重写被代理对象所实现的接口中的方法来重新生成代理类来实现的\",\"CGLib动态代理：\",\"利用ASM开源包，对代理对象类的class文件加载进来，通过修改其字节码生成子类来处理。\"]},\"9\":{\"h\":\"面向\",\"t\":[\"JDK动态代理是面向接口的。\",\"CGLib动态代理是通过字节码底层继承要代理类来实现，因此如果被代理类被final关键字所修饰，会失败。\"]},\"10\":{\"h\":\"使用注意：\",\"t\":[\"如果要被代理的对象是个实现类，那么Spring会使用JDK动态代理来完成操作（Spirng默认采用JDK动态代理实现机制）；\",\"如果要被代理的对象不是个实现类那么，Spring会强制使用CGLib来实现动态代理。\"]},\"11\":{\"h\":\"各自局限：\",\"t\":[\"JDK的动态代理机制只能代理实现了接口的类，而不能实现接口的类就不能实现JDK的动态代理。\",\"cglib是针对类来实现代理的，他的原理是对指定的目标类生成一个子类，并覆盖其中方法实现增强，但因为采用的是继承，所以不能对final修饰的类进行代理。\"]},\"12\":{\"h\":\"性能对比\",\"t\":[\"关于两者之间的性能的话，网上有人对于不通版本的jdk进行测试，经过多次试验，测试结果大致是这样的，在1.6和1.7的时候，JDK动态代理的速度要比CGLib动态代理的速度要慢，但是并没有教科书上的10倍差距，在JDK1.8的时候，JDK动态代理的速度已经比CGLib动态代理的速度快很多了，但是JDK动态代理和CGLIB动态代理的适用场景还是不一样的哈！\"]},\"13\":{\"h\":\"Java集合\",\"t\":[\"Java 集合框架是每一个入门开发者必会的内容，而且在较长的时间内容，不管是使用还是面试频度否非常的高，所以本人认为完全的、深入的学习是十分有必要的。本人结合源码和网络上的相关文章进行了总结。\"]},\"14\":{\"h\":\"Collection\",\"t\":[\"Collection 是 List 和 Set的父类，它抽象了单列数据集合的基本方法。它包含了以下的方法：\",\"int size():获取单列数据集合中存储数据的数量\",\"isEmpty():当前单列数据集合是否为空\",\"contains(Object o): 当前单列数据合计是否存在该数据对象，当前对象需要实现 equals 和 hashCode 方法，防止不同的对象校验的 hashCode 一致\",\"toArray(): 单列数据集合转数组\",\"toArray(T[]) :单列数据结合转数组，数组类型为参数类型\",\"add(E e): 单列数据集合添加数据\",\"remove(E e): 删除单列数据集合中的该数据\",\"containsAll(Collection<?> c): 校验当前数据集合是否在该单列数据中，若都存在则返回 true\",\"addAll(Collection<?> c): 向当前单列数据集合中添加该数据结合\",\"removeAll(Collection<?> c): 当前单列数据集合中移出指定的数据集合\",\"removeIf(Predicate<? super E> filter): 移出通过 filter 筛选的数据集合\",\"retainAll(Collection<?> c): 从该集合中删除未包含在指定集合中的所有元素\",\"clear(): 从此集合中移除所有元素(可选操作)。该方法返回后，集合将为空。\",\"equals(Object o):\",\"hashCode():\",\"spliterator():\",\"stream():\",\"parallelStream():\"]},\"15\":{\"h\":\"实现类比较\",\"t\":[\"实现类名称\",\"实现原理\",\"优点\",\"缺点\",\"ArrayList\",\"数组\",\"索引查询快\",\"变更效率低\",\"LinkedList\",\"链表\",\"变更效率高\",\"索引查询慢\",\"Vector\",\"ArrayList 一致\",\"加锁，防止并发问题\",\"由于加锁问题，导致操作效率较低\",\"Stack\",\"继承了 Vector\",\"相比于 Vector 功能更加强大，封装了部分方法\",\"和 Vector 一致\"]},\"16\":{\"h\":\"ArrayList\",\"t\":[\"ArrayList 是 Collection 实现子类，它实现了 Collection 的所有功能且添加了部分自己独有的一些功能，让其使用更加方便和简单。内部的实现原理是通过数组进行缓存元素数据，通过 size 属性缓存数据的长度。\"]},\"17\":{\"h\":\"构造方法\",\"t\":[\"ArrayList 有三个构造方法，无参、初始容量、初始元素。\",\"无参：会给属性 this.elementData赋值为DEFAULTCAPACITY_EMPTY_ELEMENTDATA 。\",\"初始容量：若设置容量大于 0，会给属性 this.elementData赋值为new Object[initialCapacity]；若设置容量等于 0 ，会给属性 this.elementData赋值为EMPTY_ELEMENTDATA；若设置容量小于 0，则抛出异常。\",\"初始元素：若初始元素数量等于 0， 则会给属性 this.elementData赋值为EMPTY_ELEMENTDATA；若初始元素数量大于 0，则会把元素赋值给this.elementData。\"]},\"18\":{\"h\":\"判断\",\"t\":[\"判断集合中是否存在该元素是通过遍历集合的属性elementData的数据，通过equals判断数据是否相等，所以需要该数据对象实现对应的方法。\"]},\"19\":{\"h\":\"新增\",\"t\":[\"添加元素时先让modCount 加一（后续移出时会使用）。如果当前插入的位置等于元素数量即当前集合数据已满，则需要进行扩容，扩容代码如下:\",\" private int newCapacity(int minCapacity) { // overflow-conscious code int oldCapacity = elementData.length; int newCapacity = oldCapacity + (oldCapacity >> 1); if (newCapacity - minCapacity <= 0) { if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) return Math.max(DEFAULT_CAPACITY, minCapacity); if (minCapacity < 0) // overflow throw new OutOfMemoryError(); return minCapacity; } return (newCapacity - MAX_ARRAY_SIZE <= 0) ? newCapacity : hugeCapacity(minCapacity); } private static int hugeCapacity(int minCapacity) { if (minCapacity < 0) // overflow throw new OutOfMemoryError(); return (minCapacity > MAX_ARRAY_SIZE) ? Integer.MAX_VALUE : MAX_ARRAY_SIZE; } \",\"minCapacity: 是当前容量+1\",\"newCapacity: 是 oldCapacity + （0.5*oldCapacity）\",\"第一次扩容时，若是无参的构造方法，则会进行默认为容量是 10；含有参数的构造方法，第一次则按照 1.5 倍扩容（初始化容量为 0 时，则第一次扩容容量会变更为 1）\",\"后续扩容，则需要判断扩容 1.5 倍之后是否超出 int 的最大值，若是会超过则取 Integer.MAX_VALUE\"]},\"20\":{\"h\":\"删除\",\"t\":[\"单个删除时:查询元素在集合的下标索引，然后通过System.arraycopy进行数组的 copy 和创建以此实现数据的删除\",\"批量删除时: 会缓存modCount 在删除的过程中会校验缓存的modCount是否和当前的一致，若是不一致则会抛出ConcurrentModificationException异常，提示在并发修改\"]},\"21\":{\"h\":\"扩展方法\"},\"22\":{\"h\":\"LinkedList\",\"t\":[\"LinkedList 也是实现Collection 的子类，它内部的数据接口是采用链表的方式进行存储，数据长度也是通过属性进行获取的。\"]},\"23\":{\"h\":\"构造方法\",\"t\":[\"该类的构造方法并未进行特殊的处理，无参的构造方法什么都为进行初始化，通过集合进行初始化的，则直接调用的addAll。\"]},\"24\":{\"h\":\"判断\",\"t\":[\"这里判断对象是否存在也是进行数据遍历，进行比较数据对象是否存在。\"]},\"25\":{\"h\":\"新增\",\"t\":[\"刚创建时，属性first 和 last 都是空的，第一次添加是会给 first 和 last 赋值，后续创建则直接在先缓存 last 然后 last等于新元素，缓存的last关联新元素，从而先新元素的添加。\"]},\"26\":{\"h\":\"删除\",\"t\":[\"删除则是查询到对应的节点后，直接让前一个节点关联后一节点，从而实现该节点的删除。\"]},\"27\":{\"h\":\"扩展方法\"},\"28\":{\"h\":\"Vector\",\"t\":[\"Vector 类似于 ArrayList 都是基于数组的存储结构，只不过加入了自己特性的一些东西，例如扩容规则、线程安全。\"]},\"29\":{\"h\":\"构造方法\",\"t\":[\"构造方法可以传入初始容量和扩容自增的数量。默认的初始容量是 10，自增的属性值设置为 0。\"]},\"30\":{\"h\":\"判断\",\"t\":[\"基本和ArrayList 一致，只不过在判断时加锁进而防止并发问题。\"]},\"31\":{\"h\":\"新增\",\"t\":[\"新增操作和ArrayList一致，只不过在操作的时候添加了锁，进行防止并发操作\"]},\"32\":{\"h\":\"删除\"},\"33\":{\"h\":\"扩展方法\"},\"34\":{\"h\":\"Stack\"},\"35\":{\"h\":\"HashSet\"},\"36\":{\"h\":\"TreeSet\"},\"37\":{\"h\":\"CopyOnWriteArrayList\"},\"38\":{\"h\":\"CopyOnWriteArraySet\"},\"39\":{\"h\":\"ConcurrentSkipListSet\"},\"40\":{\"h\":\"Map\",\"t\":[\"Map 抽象了键值对数据集合的通用方法，它包含以下方法：\",\"int size()：查看元素数目\",\"isEmpty()：元素个数是否是0\",\"containsKey(Object key)：是否存在这个 key\",\"containsValue(Object value)： 是否存在个 value\",\"get(Object key)： 通过 key 获取对象的 value\",\"put(K key, V value)： 添加 key-value 元素\",\"remove(Object key)： 移出 key 对应的 value\",\"putAll(Map<? extends K, ? extends V> m)：添加集合中的所有元素\",\"clear()： 清空元素\",\"keySet()： 获取元素的 key 的不重复集合\",\"values()：获得元素中的所有 value\",\"entrySet()：获取所有的 key-value 对象\",\"getOrDefault(Object key, V defaultValue)：获取 key 对应的 value，若不存在在返回 defaultValue\",\"putIfAbsent(K key, V value): 若是不存在 key 对应的 value 则进行添加\",\"remove(Object key, Object value)：删除 key 对应的值且等于 value 的\",\"replace(K key, V oldValue, V newValue)： 若存在 key 的值为 oldValue 的元素，则重新赋值 key 的值为 newValue\",\"replace(K key, V value)：若存在 key 就添加 key 对应的值为 value\",\"computeIfAbsent(K key,Function<? super K, ? extends V> mappingFunction)：若不存在 key 对应的值，则通过 mappingFunction 获取，且添加到集合中\",\"computeIfPresent(K key,BiFunction<? super K, ? super V, ? extends V> remappingFunction)：若是存在key 对应的 value 则传入 key，value 到 mappingFUnction 获取新的 newValue，若 newValue 为空则会清除 key，若不为空，则修改集合中key 对应的值，且返回newValue\"]},\"41\":{\"h\":\"HashMap\",\"t\":[\"HashMap 通过设置一些属性，进行控制某些行为，例如：初始容量、扩容时下次数量、多少元素转化为树，以下是 HashMap 的属性：\",\"DEFAULT_INITIAL_CAPACITY = 1 << 4; 初始容量为 16\",\"MAXIMUM_CAPACITY = 1 << 30; int 的最大值为 2 的 31-1，但是只能移动1 所以最大值为 2 的 30 次方\",\"DEFAULT_LOAD_FACTOR = 0.75f; 默认的负载因子 0.75\",\"TREEIFY_THRESHOLD = 8; 链表树化的最小元素数量，即链表元素个数大于 8 时，链表进行树化\",\"UNTREEIFY_THRESHOLD = 6; 树退化成链表的最大元素数量，当树的元素数量小于 6 的时候，树退化为链表\",\"MIN_TREEIFY_CAPACITY = 64; 集合树化的最小元素个数，当集合元素数目大于 64 的时候才可能树化,优先级大于 TREEIFY_THRESHOLD ，可以存在链表长度大于 8 ，只有当容量大于 64 才会树化\",\"Node<K,V>[] table; 集合元素数据\",\"Set<Map.Entry<K,V>> entrySet; 缓存的数据\",\"int size; 元素数目\",\"int modCount; 防止迭代器遍历的时候修改\",\"int threshold; 下一次扩容的容量\",\"float loadFactor; 负载因子\"]},\"42\":{\"h\":\"HashMap的扩缩容\",\"t\":[\"当进行新增时，会先去取 key 的哈希值，(key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16)，进行 put 时，会先进行判断 table 是否存在数据，如果没有则调用 resize() 进行初始化或扩容，若 该元素在 table 中不存在哈希冲突则放置到对应的下标上，若存在哈希冲突则需要判断 table 该下标的数据是否是树，若是树则进行添加子节点，若不是树，则链接在链表后，判断若当前链表的数量大于默认树化的数目，则执行 treeifyBin(tab, hash),进行树化处理\",\"为什么要这么计算哈希值\"]},\"43\":{\"h\":\"TreeMap\"},\"44\":{\"h\":\"WeakHashMap\"},\"45\":{\"h\":\"Hashtable\"},\"46\":{\"h\":\"ConcurrentHashMap\"},\"47\":{\"h\":\"ConcurrentSkipListMap\"},\"48\":{\"h\":\"Queue\"},\"49\":{\"h\":\"ArrayBlockingQueue\"},\"50\":{\"h\":\"LinkedBlockingQueue\"},\"51\":{\"h\":\"LinkedBlockingDeque\"},\"52\":{\"h\":\"ConcurrentLinkedQueue\"},\"53\":{\"h\":\"ConcurrentLinkedDeque\"},\"54\":{\"h\":\"JVM\",\"t\":[\"JVM 是 Java Virtual Machine（Java 虚拟机）的缩写，JVM 是一种用于计算设备的规范，它是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟各种计算机功能来实现的。Java 虚拟机包括一套字节码指令集、一组寄存器、一个栈、一个垃圾回收堆和一个存储方法域。 JVM 屏蔽了与具体操作系统平台相关的信息，使 Java 程序只需生成在 Java 虚拟机上运行的目标代码（字节码）,就可以在多种平台上不加修改地运行。JVM 在执行字节码时，实际上最终还是把字节码解释成具体平台上的机器指令执行。\",\"Java 中的所有类，必须被装载到 jvm 中才能运行，这个装载工作是由 jvm 中的类装载器完成的，类装载器所做的工作实质是把类文件从硬盘读取到内存中。所以 JVM 的主要内容如下图\"]},\"55\":{\"h\":\"JVM 的编译\",\"t\":[\"class文件结构\",\".java 文件由 javac 进行代码编译，编译为.class 文件，.class 文件记录者整个源码的相关信息。\"]},\"56\":{\"h\":\"类加载子系统\",\"t\":[\"类加载子系统详解\",\"类加载器子系统负责从文件系统或者网络中加载 Class 文件，class 文件在文件开头有特定的文件标识。ClassLoader 只负责 class 文件的加载，至于它是否可以运行，则由 Execution Engine（执行引擎）决定。\",\"类加载过程如下图\"]},\"57\":{\"h\":\"加载\",\"t\":[\"通过一个类的全限定名获取定义此类的`二进制例）\"]},\"58\":{\"h\":\"类加载器有哪些\"},\"59\":{\"h\":\"tomcat 为什么要自定义类加载器\",\"t\":[\"Tomcat 是如何打破\\\"双亲委派\\\"机制的?\",\"真正实现 web 应用程序之间的类加载器相互隔离 oader 类加载器。它为什么可以隔离每个 web 应用程序呢？原因就是它打破了\\\"双亲委派\\\"的机制，如果收到类加载的请求，它会先尝试自己去加载，如果找不到在交给父加载器去加载，这么做的目的就是为了优先加载 Web 应用程序自己定义的类来实现 web 应用程序相互隔离独立的。\",\"CommonClassLoader(通用类加载器)：主要 se}/lib 定义的目录和 jar 以及${catalina.home}/lib 定义的目录和 jar，可以被 Tomcat 和所有的 Web 应用程序共同使用。\",\"WebAppClassLoader(web 应用的类加载器):心类加载器，每个 Web 应用程序都有一个 WebAppClassLoader，类库仅仅可以被此 Web 应用程序使用，对 Tomcat 和其他 Web 程序都不可见。\"]},\"60\":{\"h\":\"WebAppClassLoader 加载流程\",\"t\":[\"@Override public Class<?> findClass(String name) throws ClassNotFoundException { if (log.isDebugEnabled()) log.debug(\\\" findClass(\\\" + name + \\\")\\\"); checkStateForClassLoading(name); // (1) Permission to define this class when using a SecurityManager if (securityManager != null) { int i = name.lastIndexOf('.'); if (i >= 0) { try { if (log.isTraceEnabled()) log.trace(\\\" securityManager.checkPackageDefinition\\\"); securityManager.checkPackageDefinition(name.substring(0,i)); } catch (Exception se) { if (log.isTraceEnabled()) log.trace(\\\" -->Exception-->ClassNotFoundException\\\", se); throw new ClassNotFoundException(name, se); } } } // Ask our superclass to locate this class, if possible // (throws ClassNotFoundException if it is not found) Class<?> clazz = null; try { if (log.isTraceEnabled()) log.trace(\\\" findClassInternal(\\\" + name + \\\")\\\"); try { if (securityManager != null) { PrivilegedAction<Class<?>> dp = new PrivilegedFindClassByName(name); clazz = AccessController.doPrivileged(dp); } else { // 1、先在应用本地目录下查找类 clazz = findClassInternal(name); } } catch(AccessControlException ace) { log.warn(\\\"WebappClassLoader.findClassInternal(\\\" + name + \\\") security exception: \\\" + ace.getMessage(), ace); throw new ClassNotFoundException(name, ace); } catch (RuntimeException e) { if (log.isTraceEnabled()) log.trace(\\\" -->RuntimeException Rethrown\\\", e); throw e; } if ((clazz == null) && hasExternalRepositories) { try { // 2、如果在本地目录没有找到，委派父加载器去查找 clazz = super.findClass(name); } catch(AccessControlException ace) { log.warn(\\\"WebappClassLoader.findClassInternal(\\\" + name + \\\") security exception: \\\" + ace.getMessage(), ace); throw new ClassNotFoundException(name, ace); } catch (RuntimeException e) { if (log.isTraceEnabled()) log.trace(\\\" -->RuntimeException Rethrown\\\", e); throw e; } } // 3、如果父加载器也没找到，抛出异常 if (clazz == null) { if (log.isDebugEnabled()) log.debug(\\\" --> Returning ClassNotFoundException\\\"); throw new ClassNotFoundException(name); } } catch (ClassNotFoundException e) { if (log.isTraceEnabled()) log.trace(\\\" --> Passing on ClassNotFoundException\\\"); throw e; } // Return the class we have located if (log.isTraceEnabled()) log.debug(\\\" Returning class \\\" + clazz); if (log.isTraceEnabled()) { ClassLoader cl; if (Globals.IS_SECURITY_ENABLED){ cl = AccessController.doPrivileged( new PrivilegedGetClassLoader(clazz)); } else { cl = clazz.getClassLoader(); } log.debug(\\\" Loaded by \\\" + cl.toString()); } return (clazz); } \",\"@Override public Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException { synchronized (getClassLoadingLock(name)) { Class<?> clazz = null; // 1、从本地缓存中查找是否加载过此类 clazz = findLoadedClass0(name); if (clazz != null) { if (log.isDebugEnabled()) log.debug(\\\" Returning class from cache\\\"); if (resolve) resolveClass(clazz); return clazz; } // 2、从AppClassLoader中查找是否加载过此类 clazz = findLoadedClass(name); if (clazz != null) { if (log.isDebugEnabled()) log.debug(\\\" Returning class from cache\\\"); if (resolve) resolveClass(clazz); return clazz; } String resourceName = binaryNameToPath(name, false); // 3、尝试用ExtClassLoader 类加载器加载类,防止应用覆盖JRE的核心类 ClassLoader javaseLoader = getJavaseClassLoader(); boolean tryLoadingFromJavaseLoader; try { URL url; if (securityManager != null) { PrivilegedAction<URL> dp = new PrivilegedJavaseGetResource(resourceName); url = AccessController.doPrivileged(dp); } else { url = javaseLoader.getResource(resourceName); } tryLoadingFromJavaseLoader = (url != null); } catch (Throwable t) { tryLoadingFromJavaseLoader = true; } boolean delegateLoad = delegate || filter(name, true); // 4、判断是否设置了delegate属性,如果设置为true那么就按照双亲委派机制加载类 if (delegateLoad) { if (log.isDebugEnabled()) log.debug(\\\" Delegating to parent classloader1 \\\" + parent); try { clazz = Class.forName(name, false, parent); if (clazz != null) { if (log.isDebugEnabled()) log.debug(\\\" Loading class from parent\\\"); if (resolve) resolveClass(clazz); return clazz; } } catch (ClassNotFoundException e) { // Ignore } } // 5、默认是设置delegate是false的,那么就会先用WebAppClassLoader进行加载 if (log.isDebugEnabled()) log.debug(\\\" Searching local repositories\\\"); try { clazz = findClass(name); if (clazz != null) { if (log.isDebugEnabled()) log.debug(\\\" Loading class from local repository\\\"); if (resolve) resolveClass(clazz); return clazz; } } catch (ClassNotFoundException e) { // Ignore } // 6、如果在WebAppClassLoader没找到类，那么就委托给AppClassLoader去加载 if (!delegateLoad) { if (log.isDebugEnabled()) log.debug(\\\" Delegating to parent classloader at end: \\\" + parent); try { clazz = Class.forName(name, false, parent); if (clazz != null) { if (log.isDebugEnabled()) log.debug(\\\" Loading class from parent\\\"); if (resolve) resolveClass(clazz); return clazz; } } catch (ClassNotFoundException e) { // Ignore } } } throw new ClassNotFoundException(name); } \",\"先在本地缓存中查找该类是否已经加载过，如果加载过就返回缓存中的。\",\"如果没有加载过，委托给 AppClassLoader 是否加载过，如果加载过就返回。\",\"如果 AppClassLoader 也没加载过，委托给 ExtClassLoader 去加载，这么做的目的就是：\",\"防止应用自己的类库覆盖了核心类库，因为 WebAppClassLoader 需要打破双亲委托机制，假如应用里自定义了一个叫 java.lang.String 的类，如果先加载这个类，就会覆盖核心类库的 java.lang.String，所以说它会优先尝试用 ExtClassLoader 去加载，因为 ExtClassLoader 加载不到同样也会委托给 BootstrapClassLoader 去加载，也就避免了覆盖了核心类库的问题。\",\"如果 ExtClassLoader 也没有查找到，说明核心类库中没有这个类，那么就在本地应用目录下查找此类并加载。\",\"如果本地应用目录下还有没有这个类，那么肯定不是应用自己定义的类，那么就由 AppClassLoader 去加载。\",\"这里是通过 Class.forName()调用 AppClassLoader 类加载器的，因为 Class.forName()的默认加载器就是 AppClassLoader。\",\"如果上述都没有找到，那么只能抛出 ClassNotFoundException 了。\"]},\"61\":{\"h\":\"链接-Linking\",\"t\":[\"JVM 连接阶段\",\"连接就是将已经读入到内存的类的二进制数据合并到虚拟机的运行时环境中去。\"]},\"62\":{\"h\":\"验证(Verify)：\",\"t\":[\"1.类文件的结构检查: 确保类文件遵从 Java 类文件的固定格式。\",\"2.语义检查:确保类本身符合 Java 语言的语法规定。注意，语义检查的错误在编译器编译阶段就会通不过，但是如果有程序员通过非编译的手段生成了类文件，其中有可能会含有语义错误，此时的语义检查主要是防止这种没有编译而生成的 class 文件引入的错误\",\"3.字节码验证：确保字节码流可以被 Java 虚拟机安全地执行。字节码验证步骤会检查每个操作码是否合法，即是否有着合法的操作数。\",\"4.二级制兼容性的验证：确保相互引用的类之间的协调一致。\"]},\"63\":{\"h\":\"准备(Prepare)：\",\"t\":[\"在准备阶段，Java 虚拟机为类的静态变量分配内存，并设置默认的初始值。\"]},\"64\":{\"h\":\"解析(Resolve)\",\"t\":[\"在解析阶段，Java 虚拟机会把类的二级制数据中的符号引用替换为直接引用。\"]},\"65\":{\"h\":\"初始化-Initialization\",\"t\":[\"加载的类信息存放于一块称为方法区的内存空间。除了类的信息外，方法区中还会存放运行时常最池信息，可能还包括字符串字而量和数字常量(这部分常量信息是 Class 文件中常量池部分的内存映射)\"]},\"66\":{\"h\":\"运行时数据区\",\"t\":[\"JVM 运行时数据区\",\"名称\",\"是否线程共享\",\"描述\",\"本地方法栈\",\"否\",\"与虚拟机的作用是相似的，只不过虚拟机栈是服务 Java 方法的，而本地方法栈是为虚拟机调用 Native 方法服务的，与虚拟机栈相同的是栈的深度是固定的，当线程申请的大于虚拟机栈的深度就会抛出 StackOverFlowError 异常，当然虚拟机栈也可以动态的扩展，如果扩展到无法申请到足够的内存就会抛出 outofMemoryError 异常。\",\"虚拟机栈\",\"否\",\"描述的是 Java 方法执行的内存模型，每个方法在执行的同时都会创建一个线帧用于存储局部变量表、操作数栈、动态链接、方法出口等信息，每个方法从调用直至执行完成的过程，都对应这一个线帧在虚拟机栈中入栈到出栈的过程。\",\"程序计数器\",\"否\",\"程序计数器是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。\",\"方法区\",\"是\",\"用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译后的代码等数据。\",\"堆\",\"是\",\"是 Java 虚拟机中内存最大的一块，是被所有线程共享的，在虚拟机启动时候创建，Java 堆唯一的目的就是存放对象实例，几乎所有的对象实例都在这里分配内存，随着 JIT 编译器的发展和逃逸分析技术的逐渐成熟，栈上分配、标量替换优化的技术将会导致一些微妙的变化，所有对象都分配在堆上渐渐变得不那么“绝对”了。\"]},\"67\":{\"h\":\"虚拟机栈\",\"t\":[\"描述的是 Java 方法执行的内存模型，每个方法在执行的同时都会创建一个线帧用于存储局部变量表、操作数栈、动态链接、方法出口等信息，每个方法从调用直至执行完成的过程，都对应这一个线帧在虚拟机栈中入栈到出栈的过程。\"]},\"68\":{\"h\":\"本地方法栈\",\"t\":[\"与虚拟机的作用是相似的，只不过虚拟机栈是服务 Java 方法的，而本地方法栈是为虚拟机调用 Native 方法服务的，与虚拟机栈相同的是栈的深度是固定的，当线程申请的大于虚拟机栈的深度就会抛出 StackOverFlowError 异常，当然虚拟机栈也可以动态的扩展，如果扩展到无法申请到足够的内存就会抛出 outofMemoryError 异常。\"]},\"69\":{\"h\":\"程序计数器\",\"t\":[\"程序计数器是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。java 中最小的执行单位是线程，因为虚拟机的是多线程的，每个线程是抢夺 cpu 时间片，程序计数器就是存储这些指令去做什么，比如循环，跳转，异常处理等等需要依赖它。每个线程都有属于自己的程序计数器，而且互不影响，独立存储。\"]},\"70\":{\"h\":\"方法区\",\"t\":[\"用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译后的代码等数据。\",\"内存区域是很重要的系统资源，是硬盘和 CPU 的中间桥梁，承载着操作系统和应用程序的实时运行。JVM 内存布局规定了 Java 在运行过程中内存申请、分配、管理的策略，保证了 JVM 的高效稳定运行。不同的 JVM 对于内存的划分方式和管理机制存在着部分差异，我们现在以使用最为流行的 HotSpot 虚拟机为例讲解。\"]},\"71\":{\"h\":\"堆\",\"t\":[\"是 Java 虚拟机中内存最大的一块，是被所有线程共享的，在虚拟机启动时候创建，Java 堆唯一的目的就是存放对象实例，几乎所有的对象实例都在这里分配内存，随着 JIT 编译器的发展和逃逸分析技术的逐渐成熟，栈上分配、标量替换优化的技术将会导致一些微妙的变化，所有对象都分配在堆上渐渐变得不那么“绝对”了。Java8及之后堆内存分为：新生区（新生代）+老年区（老年代），新生区分为Eden（伊甸园）区和Survivor（幸存者）区，堆内存的分配：老年代（2/3）+新生代（1/3）， 新生代= Eden(8/10) + From(1/10) + To(1/10)\"]},\"72\":{\"h\":\"执行引擎\",\"t\":[\"JVM 执行引擎的作用及工作过程\"]},\"73\":{\"h\":\"解释器\"},\"74\":{\"h\":\"JIT\",\"t\":[\"[Java 性能] 3. 什么是 JIT\"]},\"75\":{\"h\":\"垃圾回收器\",\"t\":[\"垃圾收集器\"]},\"76\":{\"h\":\"如何判断一个对象是否还存活\",\"t\":[\"引用计数：每个对象有一个引用计数属性，新增一个引用时计数加1，引用释放时计数减1，计数为0时可以回收。此方法简单，无法解决对象相互循环引用的问题。\",\"可达性分析：从GC Roots开始向下搜索，搜索所走过的路径称为引用链。当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的。不可达对象。\",\"在Java语言中，GC Roots包括： \",\"虚拟机栈中引用的对象。\",\"方法区中类静态属性实体引用的对象。\",\"方法区中常量引用的对象。\",\"本地方法栈中JNI引用的对象。\"]},\"77\":{\"h\":\"垃圾收集算法\",\"t\":[\"标记-清除算法：算法分为“标记”和“清除”两个阶段：首先标记出所有需要回收的对象，在标记完成后统一回收掉所有被标记的对象。之所以说它是最基础的收集算法，是因为后续的收集算法都是基于这种思路并对其缺点进行改进而得到的。\",\"缺点：一个是效率问题，标记和清除过程的效率都不高；另外一个是空间问题，标记清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致，当程序在以后的运行过程中需要分配较大对象时无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。\",\"复制算法：它将可用内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块的内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。\",\"缺点：内存缩小为原来的一半，持续复制长生存期的对象则导致效率降低；在对象存活率较高时就要执行较多的复制操作，效率将会变低。更关键的是，如果不想浪费50%的空间，就需要有额外的空间进行分配担保，以应对被使用的内存中所有对象都100%存活的极端情况，所以在老年代一般不能直接选用这种算法。\",\"优点：每次都是对其中的一块进行内存回收，内存分配时也就不用考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可，实现简单，运行高效。\",\"标记-压缩算法：标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象进行清理，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。\",\"分代收集算法： 把Java堆分为新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集时都发现有大批对象死去，只有少量存活，那就选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须使用“标记-清理”或“标记-整理”算法来进行回收。\"]},\"78\":{\"h\":\"垃圾收集器\",\"t\":[\"Serial收集器：串行收集器是最古老，最稳定以及效率高的收集器，可能会产生较长的停顿，只使用一个线程去回收。新生代、老年代使用串行回收；新生代复制算法、老年代标记-压缩；垃圾收集的过程中会Stop The World（服务暂停）\",\"ParNew收集器：ParNew收集器其实就是Serial收集器的多线程版本。新生代并行，老年代串行；新生代复制算法、老年代标记-压缩\",\"Parallel收集器：Parallel Scavenge收集器类似ParNew收集器，Parallel收集器更关注系统的吞吐量。可以通过参数来打开自适应调节策略，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最合适的停顿时间或最大的吞吐量；也可以通过参数控制GC的时间不大于多少毫秒或者比例；新生代复制算法、老年代标记-压缩\",\"Parallel Old 收集器：Parallel Old是Parallel Scavenge收集器的老年代版本，使用多线程和“标记－整理”算法。这个收集器是在JDK 1.6中才开始提供\",\"CMS收集器：CMS（Concurrent Mark Sweep）收集器是一种以获取最短回收停顿时间为目标的收集器。目前很大一部分的Java应用都集中在互联网站或B/S系统的服务端上，这类应用尤其重视服务的响应速度，希望系统停顿时间最短，以给用户带来较好的体验。\",\"G1垃圾回收器：G1垃圾回收器将堆内存分割成不同的区域然后并发的对其进行垃圾回收。\",\"新生代GC策略\",\"老年老代GC策略\",\"说明\",\"组合1\",\"Serial\",\"Serial Old\",\"Serial和Serial Old都是单线程进行GC，特点就是GC时暂停所有应用线程。\",\"组合2\",\"Serial\",\"CMS+Serial Old\",\"CMS（Concurrent Mark Sweep）是并发GC，实现GC线程和应用线程并发工作，不需要暂停所有应用线程。另外，当CMS进行GC失败时，会自动使用Serial Old策略进行GC。\",\"组合3\",\"ParNew\",\"CMS\",\"使用 -XX:+UseParNewGC选项来开启。ParNew是Serial的并行版本，可以指定GC线程数，默认GC线程数为CPU的数量。可以使用-XX:ParallelGCThreads选项指定GC的线程数。如果指定了选项 -XX:+UseConcMarkSweepGC选项，则新生代默认使用ParNew GC策略。\",\"组合4\",\"ParNew\",\"Serial Old\",\"使用 -XX:+UseParNewGC选项来开启。新生代使用ParNew GC策略，年老代默认使用Serial Old GC策略。\",\"组合5\",\"Parallel Scavenge\",\"Serial Old\",\"Parallel Scavenge策略主要是关注一个可控的吞吐量：应用程序运行时间 / (应用程序运行时间 + GC时间)，可见这会使得CPU的利用率尽可能的高，适用于后台持久运行的应用程序，而不适用于交互较多的应用程序。\",\"组合6\",\"Parallel Scavenge\",\"Parallel Old\",\"Parallel Old是Serial Old的并行版本\",\"组合7\",\"G1GC\",\"G1GC\",\"-XX:+UnlockExperimentalVMOptions -XX:+UseG1GC -XX:MaxGCPauseMillis=50 -XX:GCPauseIntervalMillis=200 -XX:+G1YoungGenSize=512m -XX:SurvivorRatio=6\"]},\"79\":{\"h\":\"优化\"},\"80\":{\"h\":\"获取 jvm 数据\",\"t\":[\"jmap -F -dump:format=b,file=dumpFile.phrof pid \"]},\"81\":{\"h\":\"jvm 数据分析\",\"t\":[\"http://www.fastthread.io\",\"https://spotify.github.io/threaddump-analyzer\",\"http://gceasy.io\",\"http://heaphero.io\"]},\"82\":{\"h\":\"调优\",\"t\":[\"JVM 优化\"]},\"83\":{\"h\":\"优化工具\",\"t\":[\"JVM 优化工具\",\"jps 虚拟机进程状况工具 jsp [options] [hostid]\",\"jstat 虚拟机统计信息监控工具 jstat [ option vmid [interval[s|ms] [count]] ]\",\"jinfo java 配置信息工具 jinfo [option] pid\",\"jmap java 内存映像工具 jmap [option] vmid\",\"jhat 虚拟机堆转储快照分析工具\",\"jstack java 堆栈跟踪工具 jstack [option] vmid\"]},\"84\":{\"h\":\"String源码\"},\"85\":{\"h\":\"1. 属性\",\"t\":[\"/** The value is used for character storage. */ private final char value[]; /** Cache the hash code for the string */ private int hash; // Default to 0 /** use serialVersionUID from JDK 1.0.2 for interoperability */ private static final long serialVersionUID = -6849794470754667710L; \",\"使用 final 修饰的 value。只能初始化一次，如果大量拼接，不可使用该类型\",\"使用字符组进行缓存数据\"]},\"86\":{\"h\":\"2. 构造方法\"},\"87\":{\"h\":\"public String()\",\"t\":[\"/** * Initializes a newly created {@code String} object so that it represents * an empty character sequence. Note that use of this constructor is * unnecessary since Strings are immutable. */ public String() { this.value = \\\"\\\".value; } \",\"通过设置\\\"\\\".value，实现创建对象.\",\"hash 值默认为 0。\"]},\"88\":{\"h\":\"public String(String original)\",\"t\":[\"/** * Initializes a newly created {@code String} object so that it represents * the same sequence of characters as the argument; in other words, the * newly created string is a copy of the argument string. Unless an * explicit copy of {@code original} is needed, use of this constructor is * unnecessary since Strings are immutable. * * @param original * A {@code String} */ public String(String original) { this.value = original.value; this.hash = original.hash; } \",\"通过传入的字符串，设置对象，并且设置对应的 hash\"]},\"89\":{\"h\":\"public String(char value[])\",\"t\":[\"/** * Allocates a new {@code String} so that it represents the sequence of * characters currently contained in the character array argument. The * contents of the character array are copied; subsequent modification of * the character array does not affect the newly created string. * * @param value * The initial value of the string */ public String(char value[]) { this.value = Arrays.copyOf(value, value.length); } \",\"通过传入的字符组进行复制，从而创建对象。\"]},\"90\":{\"h\":\"public String(byte bytes[])\",\"t\":[\" /** * Constructs a new {@code String} by decoding the specified array of bytes * using the platform's default charset. The length of the new {@code * String} is a function of the charset, and hence may not be equal to the * length of the byte array. * * <p> The behavior of this constructor when the given bytes are not valid * in the default charset is unspecified. The {@link * java.nio.charset.CharsetDecoder} class should be used when more control * over the decoding process is required. * * @param bytes * The bytes to be decoded into characters * * @since JDK1.1 */ public String(byte bytes[]) { this(bytes, 0, bytes.length); } \",\"通过字节组进行创建对象，调用该对象的其他方法，传入字节组，开始和结束的位置进行创建\"]},\"91\":{\"h\":\"public String(StringBuffer buffer)\",\"t\":[\"/** * Allocates a new string that contains the sequence of characters * currently contained in the string buffer argument. The contents of the * string buffer are copied; subsequent modification of the string buffer * does not affect the newly created string. * * @param buffer * A {@code StringBuffer} */ public String(StringBuffer buffer) { synchronized(buffer) { this.value = Arrays.copyOf(buffer.getValue(), buffer.length()); } } \",\"通过 StringBuffer 进行构建对象，通过 StringBufer.getValue()返回字符组，配合字符组长度创建对象\",\"StringBuffer 通过 synchronized 进行出现线程数据共享，由此可见 StringBuffer 是线程安全的\"]},\"92\":{\"h\":\"public String(StringBuilder builder)\",\"t\":[\"/** * Allocates a new string that contains the sequence of characters * currently contained in the string builder argument. The contents of the * string builder are copied; subsequent modification of the string builder * does not affect the newly created string. * * <p> This constructor is provided to ease migration to {@code * StringBuilder}. Obtaining a string from a string builder via the {@code * toString} method is likely to run faster and is generally preferred. * * @param builder * A {@code StringBuilder} * * @since 1.5 */ public String(StringBuilder builder) { this.value = Arrays.copyOf(builder.getValue(), builder.length()); } \",\"和上个方法对比，可看出 StringBuilder 线程不安全。\"]},\"93\":{\"h\":\"3. 常用方法\"},\"94\":{\"h\":\"字符串的长度 length()\",\"t\":[\" /** * Returns the length of this string. * The length is equal to the number of <a href=\\\"Character.html#unicode\\\">Unicode * code units</a> in the string. * * @return the length of the sequence of characters represented by this * object. */ public int length() { return value.length; } \",\"通过字符组的长度从而获得字符串的长度\"]},\"95\":{\"h\":\"是否为空 isEmpty()\",\"t\":[\" /** * Returns {@code true} if, and only if, {@link #length()} is {@code 0}. * * @return {@code true} if {@link #length()} is {@code 0}, otherwise * {@code false} * * @since 1.6 */ public boolean isEmpty() { return value.length == 0; } \",\"检测是否为空时未检测对象是否为 null，所以使用该方法时需要考虑是否为 null\"]},\"96\":{\"h\":\"获得字符串的第几个字符 charAt(int index)\",\"t\":[\"/** * Returns the {@code char} value at the * specified index. An index ranges from {@code 0} to * {@code length() - 1}. The first {@code char} value of the sequence * is at index {@code 0}, the next at index {@code 1}, * and so on, as for array indexing. * * <p>If the {@code char} value specified by the index is a * <a href=\\\"Character.html#unicode\\\">surrogate</a>, the surrogate * value is returned. * * @param index the index of the {@code char} value. * @return the {@code char} value at the specified index of this string. * The first {@code char} value is at index {@code 0}. * @exception IndexOutOfBoundsException if the {@code index} * argument is negative or not less than the length of this * string. */ public char charAt(int index) { if ((index < 0) || (index >= value.length)) { throw new StringIndexOutOfBoundsException(index); } return value[index]; } \",\"通过传入的字符串的位置进行获取，如果不在返回内会抛出StringIndexOutOfBoundsException异常。\"]},\"97\":{\"h\":\"比较内容是否相等 equals(Object object)\",\"t\":[\"/** * Compares this string to the specified object. The result is {@code * true} if and only if the argument is not {@code null} and is a {@code * String} object that represents the same sequence of characters as this * object. * * @param anObject * The object to compare this {@code String} against * * @return {@code true} if the given object represents a {@code String} * equivalent to this string, {@code false} otherwise * * @see #compareTo(String) * @see #equalsIgnoreCase(String) */ public boolean equals(Object anObject) { if (this == anObject) { return true; } if (anObject instanceof String) { String anotherString = (String)anObject; int n = value.length; if (n == anotherString.value.length) { char v1[] = value; char v2[] = anotherString.value; int i = 0; while (n-- != 0) { if (v1[i] != v2[i]) return false; i++; } return true; } } return false; } \",\"基本的数据类型相等的判断只需要==就可以判断，但是封装类型，需要通过 equals 进行判断。\",\"如果需要对自定义对象进行判断是否相等，需要重写对象的equals方法，从而实现自定义比较方法。如果不重写，则默认比较内存地址。\"]},\"98\":{\"h\":\"忽略大小写比较是否相等 equalsIgnoreCase(String anotherString)\",\"t\":[\"/** * Compares this {@code String} to another {@code String}, ignoring case * considerations. Two strings are considered equal ignoring case if they * are of the same length and corresponding characters in the two strings * are equal ignoring case. * * <p> Two characters {@code c1} and {@code c2} are considered the same * ignoring case if at least one of the following is true: * <ul> * <li> The two characters are the same (as compared by the * {@code ==} operator) * <li> Applying the method {@link * java.lang.Character#toUpperCase(char)} to each character * produces the same result * <li> Applying the method {@link * java.lang.Character#toLowerCase(char)} to each character * produces the same result * </ul> * * @param anotherString * The {@code String} to compare this {@code String} against * * @return {@code true} if the argument is not {@code null} and it * represents an equivalent {@code String} ignoring case; {@code * false} otherwise * * @see #equals(Object) */ public boolean equalsIgnoreCase(String anotherString) { return (this == anotherString) ? true : (anotherString != null) && (anotherString.value.length == value.length) && regionMatches(true, 0, anotherString, 0, value.length); } \",\"进行判断对象的内存地址是否相同--->地址相同，说明同一个对象，自己比较自己肯定 true\",\"然后判断是否为空，长度是否相同，然后再循环比较每个字符忽略大小写比较\"]},\"99\":{\"h\":\"比较字符串的大小 compareTo(String anotherString)\",\"t\":[\" /** * Compares two strings lexicographically. * The comparison is based on the Unicode value of each character in * the strings. The character sequence represented by this * {@code String} object is compared lexicographically to the * character sequence represented by the argument string. The result is * a negative integer if this {@code String} object * lexicographically precedes the argument string. The result is a * positive integer if this {@code String} object lexicographically * follows the argument string. The result is zero if the strings * are equal; {@code compareTo} returns {@code 0} exactly when * the {@link #equals(Object)} method would return {@code true}. * <p> * This is the definition of lexicographic ordering. If two strings are * different, then either they have different characters at some index * that is a valid index for both strings, or their lengths are different, * or both. If they have different characters at one or more index * positions, let <i>k</i> be the smallest such index; then the string * whose character at position <i>k</i> has the smaller value, as * determined by using the &lt; operator, lexicographically precedes the * other string. In this case, {@code compareTo} returns the * difference of the two character values at position {@code k} in * the two string -- that is, the value: * <blockquote> <pre> * this.charAt(k)-anotherString.charAt(k) * </pre></blockquote> * If there is no index position at which they differ, then the shorter * string lexicographically precedes the longer string. In this case, * {@code compareTo} returns the difference of the lengths of the * strings -- that is, the value: * <blockquote> <pre> * this.length()-anotherString.length() * </pre></blockquote> * * @param anotherString the {@code String} to be compared. * @return the value {@code 0} if the argument string is equal to * this string; a value less than {@code 0} if this string * is lexicographically less than the string argument; and a * value greater than {@code 0} if this string is * lexicographically greater than the string argument. */ public int compareTo(String anotherString) { int len1 = value.length; int len2 = anotherString.value.length; int lim = Math.min(len1, len2); char v1[] = value; char v2[] = anotherString.value; int k = 0; while (k < lim) { char c1 = v1[k]; char c2 = v2[k]; if (c1 != c2) { return c1 - c2; } k++; } return len1 - len2; } \",\"找出长度最短的字符串长度\",\"循环比较，如果有不相等的则返回插值\",\"一直想等则返回长度差值\"]},\"100\":{\"h\":\"判断字符串是否从某个字符串开始的 startsWith(String prefix, int toffset)\",\"t\":[\"/** * Tests if the substring of this string beginning at the * specified index starts with the specified prefix. * * @param prefix the prefix. * @param toffset where to begin looking in this string. * @return {@code true} if the character sequence represented by the * argument is a prefix of the substring of this object starting * at index {@code toffset}; {@code false} otherwise. * The result is {@code false} if {@code toffset} is * negative or greater than the length of this * {@code String} object; otherwise the result is the same * as the result of the expression * <pre> * this.substring(toffset).startsWith(prefix) * </pre> */ public boolean startsWith(String prefix, int toffset) { char ta[] = value; int to = toffset; char pa[] = prefix.value; int po = 0; int pc = prefix.value.length; // Note: toffset might be near -1>>>1. if ((toffset < 0) || (toffset > value.length - pc)) { return false; } while (--pc >= 0) { if (ta[to++] != pa[po++]) { return false; } } return true; } \",\"获取对象的字符组、开始位置、传入的字符组，计算得出结束位置\",\"判断开始位置和结束位置是否超出\",\"循环比较是否相等\"]},\"101\":{\"h\":\"4. 常见问题\"},\"102\":{\"h\":\"尼恩面试题\"},\"103\":{\"h\":\"并发\"},\"104\":{\"h\":\"为什么需要多线程\",\"t\":[\"CPU、内存、I/O 设备的速度是有极大差异的，为了合理利用 CPU 的高性能，平衡这三者的速度差异，计算机体系结构、操作系统、编译程序都做出了贡献，主要体现为:\",\"CPU 增加了缓存，以均衡与内存的速度差异；// 导致 可见性问题\",\"操作系统增加了进程、线程，以分时复用 CPU，进而均衡 CPU 与 I/O 设备的速度差异；// 导致 原子性问题\",\"编译程序优化指令执行次序，使得缓存能够得到更加合理地利用。// 导致 有序性问题\"]},\"105\":{\"h\":\"为什么会出现并发问题\"},\"106\":{\"h\":\"可见性: CPU缓存引起\",\"t\":[\"假若执行线程1的是CPU1，执行线程2的是CPU2。由上面的分析可知，当线程1执行 i =10这句时，会先把i的初始值加载到CPU1的高速缓存中，然后赋值为10，那么在CPU1的高速缓存当中i的值变为10了，却没有立即写入到主存当中。\",\"此时线程2执行 j = i，它会先去主存读取i的值并加载到CPU2的缓存当中，注意此时内存当中i的值还是0，那么就会使得j的值为0，而不是10.\",\"这就是可见性问题，线程1对变量i修改了之后，线程2没有立即看到线程1修改的值。\"]},\"107\":{\"h\":\"原子性: 分时复用引起\",\"t\":[\"i += 1需要三条 CPU 指令\",\"将变量 i 从内存读取到 CPU寄存器；\",\"在CPU寄存器中执行 i + 1 操作；\",\"将最后的结果i写入内存（缓存机制导致可能写入的是 CPU 缓存而不是内存）。\",\"由于CPU分时复用（线程切换）的存在，线程1执行了第一条指令后，就切换到线程2执行，假如线程2执行了这三条指令后，再切换会线程1执行后续两条指令，将造成最后写到内存中的i值是2而不是3。\"]},\"108\":{\"h\":\"有序性: 重排序引起\",\"t\":[\"在执行程序时为了提高性能，编译器和处理器常常会对指令做重排序。重排序分三种类型：\",\"编译器优化的重排序。编译器在不改变单线程程序语义的前提下，可以重新安排语句的执行顺序。\",\"指令级并行的重排序。现代处理器采用了指令级并行技术（Instruction-Level Parallelism， ILP）来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。\",\"内存系统的重排序。由于处理器使用缓存和读 / 写缓冲区，这使得加载和存储操作看上去可能是在乱序执行。\",\"从 java 源代码到最终实际执行的指令序列，会分别经历下面三种重排序： 上述的 1 属于编译器重排序，2 和 3 属于处理器重排序。这些重排序都可能会导致多线程程序出现内存可见性问题。对于编译器，JMM 的编译器重排序规则会禁止特定类型的编译器重排序（不是所有的编译器重排序都要禁止）。对于处理器重排序，JMM 的处理器重排序规则会要求 java 编译器在生成指令序列时，插入特定类型的内存屏障（memory barriers，intel 称之为 memory fence）指令，通过内存屏障指令来禁止特定类型的处理器重排序（不是所有的处理器重排序都要禁止）。\"]},\"109\":{\"h\":\"JAVA是怎么解决并发问题的\",\"t\":[\"Java 内存模型规范了 JVM 如何提供按需禁用缓存和编译优化的方法。具体来说，这些方法包括：\",\"volatile、synchronized 和 final 三个关键字\",\"Happens-Before 规则\"]},\"110\":{\"h\":\"volatile\"},\"111\":{\"h\":\"synchronized\"},\"112\":{\"h\":\"final\"},\"113\":{\"h\":\"Happens-Before\",\"t\":[\"单一线程原则:在一个线程内，在程序前面的操作先行发生于后面的操作\",\"管程锁定规则:一个 unlock 操作先行发生于后面对同一个锁的 lock 操作。\",\"volatile 变量规则:对一个 volatile 变量的写操作先行发生于后面对这个变量的读操作。\",\"线程启动规则:Thread 对象的 start() 方法调用先行发生于此线程的每一个动作。\",\"线程加入规则:Thread 对象的结束先行发生于 join() 方法返回。\",\"线程中断规则:对线程 interrupt() 方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过 interrupted() 方法检测到是否有中断发生。\",\"对象终结规则:一个对象的初始化完成(构造函数执行结束)先行发生于它的 finalize() 方法的开始。\",\"传递性:如果操作 A 先行发生于操作 B，操作 B 先行发生于操作 C，那么操作 A 先行发生于操作 C。\"]},\"114\":{\"h\":\"原子性\",\"t\":[\"Java内存模型只保证了基本读取和赋值是原子性操作，如果要实现更大范围操作的原子性，可以通过synchronized和Lock来实现。由于synchronized和Lock能够保证任一时刻只有一个线程执行该代码块，那么自然就不存在原子性问题了，从而保证了原子性。\"]},\"115\":{\"h\":\"可见性\",\"t\":[\"Java提供了volatile关键字来保证可见性。 当一个共享变量被volatile修饰时，它会保证修改的值会立即被更新到主存，当有其他线程需要读取时，它会去内存中读取新值。 而普通的共享变量不能保证可见性，因为普通共享变量被修改之后，什么时候被写入主存是不确定的，当其他线程去读取时，此时内存中可能还是原来的旧值，因此无法保证可见性。 通过synchronized和Lock也能够保证可见性，synchronized和Lock能保证同一时刻只有一个线程获取锁然后执行同步代码，并且在释放锁之前会将对变量的修改刷新到主存当中。因此可以保证可见性。\"]},\"116\":{\"h\":\"有序性\",\"t\":[\"在Java里面，可以通过volatile关键字来保证一定的“有序性”（具体原理在下一节讲述）。另外可以通过synchronized和Lock来保证有序性，很显然，synchronized和Lock保证每个时刻是有一个线程执行同步代码，相当于是让线程顺序执行同步代码，自然就保证了有序性。当然JMM是通过Happens-Before 规则来保证有序性的。\"]},\"117\":{\"h\":\"线程安全分类\"},\"118\":{\"h\":\"不可变\",\"t\":[\"不可变(Immutable)的对象一定是线程安全的，不需要再采取任何的线程安全保障措施。只要一个不可变的对象被正确地构建出来，永远也不会看到它在多个线程之中处于不一致的状态。\"]},\"119\":{\"h\":\"绝对线程安全\",\"t\":[\"不管运行时环境如何，调用者都不需要任何额外的同步措施。\"]},\"120\":{\"h\":\"相对线程安全\",\"t\":[\"相对线程安全需要保证对这个对象单独的操作是线程安全的，在调用的时候不需要做额外的保障措施。但是对于一些特定顺序的连续调用，就可能需要在调用端使用额外的同步手段来保证调用的正确性。\"]},\"121\":{\"h\":\"线程兼容\",\"t\":[\"线程兼容是指对象本身并不是线程安全的，但是可以通过在调用端正确地使用同步手段来保证对象在并发环境中可以安全地使用，我们平常说一个类不是线程安全的，绝大多数时候指的是这一种情况。Java API 中大部分的类都是属于线程兼容的，如与前面的 Vector 和 HashTable 相对应的集合类 ArrayList 和 HashMap 等。\"]},\"122\":{\"h\":\"线程对立\",\"t\":[\"线程对立是指无论调用端是否采取了同步措施，都无法在多线程环境中并发使用的代码。由于 Java 语言天生就具备多线程特性，线程对立这种排斥多线程的代码是很少出现的，而且通常都是有害的，应当尽量避免。\"]},\"123\":{\"h\":\"线程安全的实现\"},\"124\":{\"h\":\"互斥同步\",\"t\":[\"互斥同步最主要的问题就是线程阻塞和唤醒所带来的性能问题，因此这种同步也称为阻塞同步。 互斥同步属于一种悲观的并发策略，总是认为只要不去做正确的同步措施，那就肯定会出现问题。无论共享数据是否真的会出现竞争，它都要进行加锁(这里讨论的是概念模型，实际上虚拟机会优化掉很大一部分不必要的加锁)、用户态核心态转换、维护锁计数器和检查是否有被阻塞的线程需要唤醒等操作。\"]},\"125\":{\"h\":\"非阻塞同步\"},\"126\":{\"h\":\"\",\"t\":[\"随着硬件指令集的发展，我们可以使用基于冲突检测的乐观并发策略: 先进行操作，如果没有其它线程争用共享数据，那操作就成功了，否则采取补偿措施(不断地重试，直到成功为止)。这种乐观的并发策略的许多实现都不需要将线程阻塞，因此这种同步操作称为非阻塞同步。 乐观锁需要操作和冲突检测这两个步骤具备原子性，这里就不能再使用互斥同步来保证了，只能靠硬件来完成。硬件支持的原子性操作最典型的是: 比较并交换(Compare-and-Swap，CAS)。CAS 指令需要有 3 个操作数，分别是内存地址 V、旧的预期值 A 和新值 B。当执行操作时，只有当 V 的值等于 A，才将 V 的值更新为 B。\"]},\"127\":{\"h\":\"\",\"t\":[\"J.U.C 包里面的整数原子类 AtomicInteger，其中的 compareAndSet() 和 getAndIncrement() 等方法都使用了 Unsafe 类的 CAS 操作。\"]},\"128\":{\"h\":\"\",\"t\":[\"如果一个变量初次读取的时候是 A 值，它的值被改成了 B，后来又被改回为 A，那 CAS 操作就会误认为它从来没有被改变过。 J.U.C 包提供了一个带有标记的原子引用类 AtomicStampedReference 来解决这个问题，它可以通过控制变量值的版本来保证 CAS 的正确性。大部分情况下 ABA 问题不会影响程序并发的正确性，如果需要解决 ABA 问题，改用传统的互斥同步可能会比原子类更高效。\"]},\"129\":{\"h\":\"无同步方案\",\"t\":[\"要保证线程安全，并不是一定就要进行同步。如果一个方法本来就不涉及共享数据，那它自然就无须任何同步措施去保证正确性。\"]},\"130\":{\"h\":\"\",\"t\":[\"多个线程访问同一个方法的局部变量时，不会出现线程安全问题，因为局部变量存储在虚拟机栈中，属于线程私有的。\"]},\"131\":{\"h\":\"线程本地存储(Thread Local Storage)\",\"t\":[\"如果一段代码中所需要的数据必须与其他代码共享，那就看看这些共享数据的代码是否能保证在同一个线程中执行。如果能保证，我们就可以把共享数据的可见范围限制在同一个线程之内，这样，无须同步也能保证线程之间不出现数据争用的问题。 符合这种特点的应用并不少见，大部分使用消费队列的架构模式(如“生产者-消费者”模式)都会将产品的消费过程尽量在一个线程中消费完。其中最重要的一个应用实例就是经典 Web 交互模型中的“一个请求对应一个服务器线程”(Thread-per-Request)的处理方式，这种处理方式的广泛应用使得很多 Web 服务端应用都可以使用线程本地存储来解决线程安全问题。 可以使用 java.lang.ThreadLocal 类来实现线程本地存储功能。\"]},\"132\":{\"h\":\"\",\"t\":[\"这种代码也叫做纯代码(Pure Code)，可以在代码执行的任何时刻中断它，转而去执行另外一段代码(包括递归调用它本身)，而在控制权返回后，原来的程序不会出现任何错误。 可重入代码有一些共同的特征，例如不依赖存储在堆上的数据和公用的系统资源、用到的状态量都由参数中传入、不调用非可重入的方法等。\"]},\"133\":{\"h\":\"线程状态\",\"t\":[\"image.png\"]},\"134\":{\"h\":\"新建(New)\",\"t\":[\"创建后尚未启动。\"]},\"135\":{\"h\":\"可运行(Runnable)\",\"t\":[\"可能正在运行，也可能正在等待 CPU 时间片。 包含了操作系统线程状态中的 Running 和 Ready。\"]},\"136\":{\"h\":\"阻塞(Blocking)\",\"t\":[\"等待获取一个排它锁，如果其线程释放了锁就会结束此状态。\"]},\"137\":{\"h\":\"无限期等待(Waiting)\",\"t\":[\"等待其它线程显式地唤醒，否则不会被分配 CPU 时间片。\",\"进入方法\",\"退出方法\",\"没有设置 Timeout 参数的 Object.wait() 方法\",\"Object.notify() / Object.notifyAll()\",\"没有设置 Timeout 参数的 Thread.join() 方法\",\"被调用的线程执行完毕\",\"LockSupport.park() 方法\",\"-\"]},\"138\":{\"h\":\"限期等待(Timed Waiting)\",\"t\":[\"无需等待其它线程显式地唤醒，在一定时间之后会被系统自动唤醒。 调用 Thread.sleep() 方法使线程进入限期等待状态时，常常用“使一个线程睡眠”进行描述。 调用 Object.wait() 方法使线程进入限期等待或者无限期等待时，常常用“挂起一个线程”进行描述。 睡眠和挂起是用来描述行为，而阻塞和等待用来描述状态。 阻塞和等待的区别在于，阻塞是被动的，它是在等待获取一个排它锁。而等待是主动的，通过调用 Thread.sleep() 和 Object.wait() 等方法进入。\",\"进入方法\",\"退出方法\",\"Thread.sleep() 方法\",\"时间结束\",\"设置了 Timeout 参数的 Object.wait() 方法\",\"时间结束 / Object.notify() / Object.notifyAll()\",\"设置了 Timeout 参数的 Thread.join() 方法\",\"时间结束 / 被调用的线程执行完毕\",\"LockSupport.parkNanos() 方法\",\"-\",\"LockSupport.parkUntil() 方法\",\"-\"]},\"139\":{\"h\":\"死亡(Terminated)\",\"t\":[\"可以是线程结束任务之后自己结束，或者产生了异常而结束。\"]},\"140\":{\"h\":\"线程使用方式\",\"t\":[\"有三种使用线程的方法:\",\"实现 Runnable 接口；\",\"实现 Callable 接口；\",\"继承 Thread 类。\",\"实现 Runnable 和 Callable 接口的类只能当做一个可以在线程中运行的任务，不是真正意义上的线程，因此最后还需要通过 Thread 来调用。可以说任务是通过线程驱动从而执行的。\"]},\"141\":{\"h\":\"实现接口 VS 继承 Thread\",\"t\":[\"实现接口会更好一些，因为:\",\"Java 不支持多重继承，因此继承了 Thread 类就无法继承其它类，但是可以实现多个接口；\",\"类可能只要求可执行就行，继承整个 Thread 类开销过大。\"]},\"142\":{\"h\":\"基础线程机制\"},\"143\":{\"h\":\"Executor\",\"t\":[\"Executor 管理多个异步任务的执行，而无需程序员显式地管理线程的生命周期。这里的异步是指多个任务的执行互不干扰，不需要进行同步操作。 主要有三种 Executor:\",\"CachedThreadPool: 一个任务创建一个线程；\",\"FixedThreadPool: 所有任务只能使用固定大小的线程；\",\"SingleThreadExecutor: 相当于大小为 1 的 FixedThreadPool。\"]},\"144\":{\"h\":\"Daemon\",\"t\":[\"守护线程是程序运行时在后台提供服务的线程，不属于程序中不可或缺的部分。 当所有非守护线程结束时，程序也就终止，同时会杀死所有守护线程。 main() 属于非守护线程。 使用 setDaemon() 方法将一个线程设置为守护线程。\"]},\"145\":{\"h\":\"sleep()\",\"t\":[\"Thread.sleep(millisec) 方法会休眠当前正在执行的线程，millisec 单位为毫秒。 sleep() 可能会抛出 InterruptedException，因为异常不能跨线程传播回 main() 中，因此必须在本地进行处理。线程中抛出的其它异常也同样需要在本地进行处理。\"]},\"146\":{\"h\":\"yield()\",\"t\":[\"对静态方法 Thread.yield() 的调用声明了当前线程已经完成了生命周期中最重要的部分，可以切换给其它线程来执行。该方法只是对线程调度器的一个建议，而且也只是建议具有相同优先级的其它线程可以运行。\"]},\"147\":{\"h\":\"线程中断\",\"t\":[\"一个线程执行完毕之后会自动结束，如果在运行过程中发生异常也会提前结束。\"]},\"148\":{\"h\":\"InterruptedException\",\"t\":[\"通过调用一个线程的 interrupt() 来中断该线程，如果该线程处于阻塞、限期等待或者无限期等待状态，那么就会抛出 InterruptedException，从而提前结束该线程。但是不能中断 I/O 阻塞和 synchronized 锁阻塞。\"]},\"149\":{\"h\":\"interrupted()\",\"t\":[\"如果一个线程的 run() 方法执行一个无限循环，并且没有执行 sleep() 等会抛出 InterruptedException 的操作，那么调用线程的 interrupt() 方法就无法使线程提前结束。 但是调用 interrupt() 方法会设置线程的中断标记，此时调用 interrupted() 方法会返回 true。因此可以在循环体中使用 interrupted() 方法来判断线程是否处于中断状态，从而提前结束线程。\"]},\"150\":{\"h\":\"Executor 的中断操作\",\"t\":[\"调用 Executor 的 shutdown() 方法会等待线程都执行完毕之后再关闭，但是如果调用的是 shutdownNow() 方法，则相当于调用每个线程的 interrupt() 方法。\"]},\"151\":{\"h\":\"线程互斥同步\",\"t\":[\"Java 提供了两种锁机制来控制多个线程对共享资源的互斥访问，第一个是 JVM 实现的 synchronized，而另一个是 JDK 实现的 ReentrantLock。\"]},\"152\":{\"h\":\"线程间的协作\",\"t\":[\"当多个线程可以一起工作去解决某个问题时，如果某些部分必须在其它部分之前完成，那么就需要对线程进行协调。\"]},\"153\":{\"h\":\"join()\",\"t\":[\"在线程中调用另一个线程的 join() 方法，会将当前线程挂起，而不是忙等待，直到目标线程结束。\"]},\"154\":{\"h\":\"wait() notify() notifyAll()\",\"t\":[\"调用 wait() 使得线程等待某个条件满足，线程在等待时会被挂起，当其他线程的运行使得这个条件满足时，其它线程会调用 notify() 或者 notifyAll() 来唤醒挂起的线程。 它们都属于 Object 的一部分，而不属于 Thread。 只能用在同步方法或者同步控制块中使用，否则会在运行时抛出 IllegalMonitorStateExeception。 使用 wait() 挂起期间，线程会释放锁。这是因为，如果没有释放锁，那么其它线程就无法进入对象的同步方法或者同步控制块中，那么就无法执行 notify() 或者 notifyAll() 来唤醒挂起的线程，造成死锁。\"]},\"155\":{\"h\":\"wait() 和 sleep() 的区别\",\"t\":[\"wait() 是 Object 的方法，而 sleep() 是 Thread 的静态方法；\",\"wait() 会释放锁，sleep() 不会。\"]},\"156\":{\"h\":\"await() signal() signalAll()\",\"t\":[\"java.util.concurrent 类库中提供了 Condition 类来实现线程之间的协调，可以在 Condition 上调用 await() 方法使线程等待，其它线程调用 signal() 或 signalAll() 方法唤醒等待的线程。相比于 wait() 这种等待方式，await() 可以指定等待的条件，因此更加灵活。\"]},\"157\":{\"h\":\"Java 锁\"},\"158\":{\"h\":\"乐观锁 VS 悲观锁\",\"t\":[\"悲观锁认为自己在使用数据的时候一定有别的线程来修改数据，因此在获取数据的时候会先加锁，确保数据不会被别的线程修改。Java中，synchronized关键字和Lock的实现类都是悲观锁。\",\"乐观锁认为自己在使用数据时不会有别的线程修改数据，所以不会添加锁，只是在更新数据的时候去判断之前有没有别的线程更新了这个数据。如果这个数据没有被更新，当前线程将自己修改的数据成功写入。如果数据已经被其他线程更新，则根据不同的实现方式执行不同的操作（例如报错或者自动重试）。乐观锁在Java中是通过使用无锁编程来实现，最常采用的是CAS算法，Java原子类中的递增操作就通过CAS自旋实现的。\",\"根据从上面的概念描述我们可以发现：\",\"悲观锁适合写操作多的场景，先加锁可以保证写操作时数据正确。\",\"乐观锁适合读操作多的场景，不加锁的特点能够使其读操作的性能大幅提升。\"]},\"159\":{\"h\":\"自旋锁 VS 适应性自旋锁\",\"t\":[\"自旋锁：在许多场景中，同步资源的锁定时间很短，为了这一小段时间去切换线程，线程挂起和恢复现场的花费可能会让系统得不偿失。如果物理机器有多个处理器，能够让两个或以上的线程同时并行执行，我们就可以让后面那个请求锁的线程不放弃CPU的执行时间，看看持有锁的线程是否很快就会释放锁。而为了让当前线程“稍等一下”，我们需让当前线程进行自旋，如果在自旋完成后前面锁定同步资源的线程已经释放了锁，那么当前线程就可以不必阻塞而是直接获取同步资源，从而避免切换线程的开销。这就是自旋锁。\",\"自旋锁本身是有缺点的，它不能代替阻塞。自旋等待虽然避免了线程切换的开销，但它要占用处理器时间。如果锁被占用的时间很短，自旋等待的效果就会非常好。反之，如果锁被占用的时间很长，那么自旋的线程只会白浪费处理器资源。所以，自旋等待的时间必须要有一定的限度，如果自旋超过了限定次数（默认是10次，可以使用-XX:PreBlockSpin来更改）没有成功获得锁，就应当挂起线程\"]},\"160\":{\"h\":\"无锁 VS 偏向锁 VS 轻量级锁 VS 重量级锁\",\"t\":[\"偏向锁通过对比Mark Word解决加锁问题，避免执行CAS操作。而轻量级锁是通过用CAS操作和自旋来解决加锁问题，避免线程阻塞和唤醒而影响性能。重量级锁是将除了拥有锁的线程以外的线程都阻塞。\"]},\"161\":{\"h\":\"公平锁 VS 非公平锁\",\"t\":[\"公平锁是指多个线程按照申请锁的顺序来获取锁，线程直接进入队列中排队，队列中的第一个线程才能获得锁。公平锁的优点是等待锁的线程不会饿死。缺点是整体吞吐效率相对非公平锁要低，等待队列中除第一个线程以外的所有线程都会阻塞，CPU唤醒阻塞线程的开销比非公平锁大。\",\"非公平锁是多个线程加锁时直接尝试获取锁，获取不到才会到等待队列的队尾等待。但如果此时锁刚好可用，那么这个线程可以无需阻塞直接获取到锁，所以非公平锁有可能出现后申请锁的线程先获取锁的场景。非公平锁的优点是可以减少唤起线程的开销，整体的吞吐效率高，因为线程有几率不阻塞直接获得锁，CPU不必唤醒所有线程。缺点是处于等待队列中的线程可能会饿死，或者等很久才会获得锁。\"]},\"162\":{\"h\":\"可重入锁 VS 非可重入锁\",\"t\":[\"可重入锁又名递归锁，是指在同一个线程在外层方法获取锁的时候，再进入该线程的内层方法会自动获取锁（前提锁对象得是同一个对象或者class），不会因为之前已经获取过还没释放而阻塞。Java中ReentrantLock和synchronized都是可重入锁，可重入锁的一个优点是可一定程度避免死锁。\"]},\"163\":{\"h\":\"独享锁(排他锁) VS 共享锁\",\"t\":[\"独享锁也叫排他锁，是指该锁一次只能被一个线程所持有。如果线程T对数据A加上排它锁后，则其他线程不能再对A加任何类型的锁。获得排它锁的线程即能读数据又能修改数据。JDK中的synchronized和JUC中Lock的实现类就是互斥锁。\",\"共享锁是指该锁可被多个线程所持有。如果线程T对数据A加上共享锁后，则其他线程只能对A再加共享锁，不能加排它锁。获得共享锁的线程只能读数据，不能修改数据。\"]},\"164\":{\"h\":\"final 详解\"},\"165\":{\"h\":\"final基础使用\"},\"166\":{\"h\":\"修饰类\",\"t\":[\"当某个类的整体定义为final时，就表明了你不能打算继承该类，而且也不允许别人这么做。即这个类是不能有子类的。 注意：final类中的所有方法都隐式为final，因为无法覆盖他们，所以在final类中给任何方法添加final关键字是没有任何意义的。\"]},\"167\":{\"h\":\"修饰方法\",\"t\":[\"private 方法是隐式的final：Base和Son都有方法test(),但是这并不是一种覆盖，因为private所修饰的方法是隐式的final，也就是无法被继承，所以更不用说是覆盖了，在Son中的test()方法不过是属于Son的新成员罢了，Son进行向上转型得到father，但是father.test()是不可执行的，因为Base中的test方法是private的，无法被访问到。\",\"final方法是可以被重载的\"]},\"168\":{\"h\":\"修饰参数\"},\"169\":{\"h\":\"修饰变量\"},\"170\":{\"h\":\"final域重排序规则\"},\"171\":{\"h\":\"final域为基本类型\"},\"172\":{\"h\":\"写final域重排序规则\",\"t\":[\"写final域的重排序规则禁止对final域的写重排序到构造函数之外，这个规则的实现主要包含了两个方面：\",\"JMM禁止编译器把final域的写重排序到构造函数之外；\",\"编译器会在final域写之后，构造函数return之前，插入一个storestore屏障。这个屏障可以禁止处理器把final域的写重排序到构造函数之外。\"]},\"173\":{\"h\":\"读final域重排序规则\",\"t\":[\"在一个线程中，初次读对象引用和初次读该对象包含的final域，JMM会禁止这两个操作的重排序。(注意，这个规则仅仅是针对处理器)，处理器会在读final域操作的前面插入一个LoadLoad屏障。实际上，读对象的引用和读该对象的final域存在间接依赖性，一般处理器不会重排序这两个操作。但是有一些处理器会重排序，因此，这条禁止重排序规则就是针对这些处理器而设定的。\"]},\"174\":{\"h\":\"final域为引用类型\"},\"175\":{\"h\":\"对final修饰的对象的成员域写操作\",\"t\":[\"针对引用数据类型，final域写针对编译器和处理器重排序增加了这样的约束：在构造函数内对一个final修饰的对象的成员域的写入，与随后在构造函数之外把这个被构造的对象的引用赋给一个引用变量，这两个操作是不能被重排序的。注意这里的是“增加”也就说前面对final基本数据类型的重排序规则在这里还是使用。\"]},\"176\":{\"h\":\"对final修饰的对象的成员域读操作\",\"t\":[\"MM可以确保线程C至少能看到写线程A对final引用的对象的成员域的写入，即能看下arrays[0] = 1，而写线程B对数组元素的写入可能看到可能看不到。JMM不保证线程B的写入对线程C可见，线程B和线程C之间存在数据竞争，此时的结果是不可预知的。如果可见的，可使用锁或者volatile。\"]},\"177\":{\"h\":\"关于final重排序的总结\",\"t\":[\"按照final修饰的数据类型分类：\",\"基本数据类型: \",\"final域写：禁止final域写与构造方法重排序，即禁止final域写重排序到构造方法之外，从而保证该对象对所有线程可见时，该对象的final域全部已经初始化过。\",\"final域读：禁止初次读对象的引用与读该对象包含的final域的重排序。\",\"引用数据类型： \",\"额外增加约束：禁止在构造函数对一个final修饰的对象的成员域的写入与随后将这个被构造的对象的引用赋值给引用变量 重排序\"]},\"178\":{\"h\":\"final的实现原理\",\"t\":[\"上面我们提到过，写final域会要求编译器在final域写之后，构造函数返回前插入一个StoreStore屏障。读final域的重排序规则会要求编译器在读final域的操作前插入一个LoadLoad屏障。 很有意思的是，如果以X86处理为例，X86不会对写-写重排序，所以StoreStore屏障可以省略。由于不会对有间接依赖性的操作重排序，所以在X86处理器中，读final域需要的LoadLoad屏障也会被省略掉。也就是说，以X86为例的话，对final域的读/写的内存屏障都会被省略！具体是否插入还是得看是什么处理器\"]},\"179\":{\"h\":\"volatile 详解\"},\"180\":{\"h\":\"volatile的作用详解\"},\"181\":{\"h\":\"防重排序\",\"t\":[\"实例化一个对象其实可以分为三个步骤：\",\"分配内存空间。\",\"初始化对象。\",\"将内存空间的地址赋值给对应的引用。\",\"但是由于操作系统可以对指令进行重排序，所以上面的过程也可能会变成如下过程：\",\"分配内存空间。\",\"将内存空间的地址赋值给对应的引用。\",\"初始化对象\",\"如果是这个流程，多线程环境下就可能将一个未初始化的对象引用暴露出来，从而导致不可预料的结果。因此，为了防止这个过程的重排序，我们需要将变量设置为volatile类型的变量。\"]},\"182\":{\"h\":\"实现可见性\",\"t\":[\"可见性问题主要指一个线程修改了共享变量值，而另一个线程却看不到。引起可见性问题的主要原因是每个线程拥有自己的一个高速缓存区——线程工作内存。volatile关键字能有效的解决这个问题。\"]},\"183\":{\"h\":\"保证原子性:单次读/写\",\"t\":[\"volatile不能保证完全的原子性，只能保证单次的读/写操作具有原子性\"]},\"184\":{\"h\":\"问题1： i++为什么不能保证原子性?\",\"t\":[\"i++其实是一个复合操作，包括三步骤：\",\"读取i的值。\",\"对i加1。\",\"将i的值写回内存。 volatile是无法保证这三个操作是具有原子性的，我们可以通过AtomicInteger或者Synchronized来保证+1操作的原子性。 注：上面几段代码中多处执行了Thread.sleep()方法，目的是为了增加并发问题的产生几率，无其他作用。\"]},\"185\":{\"h\":\"问题2： 共享的long和double变量的为什么要用volatile?\",\"t\":[\"因为long和double两种数据类型的操作可分为高32位和低32位两部分，因此普通的long或double类型读/写可能不是原子的。因此，鼓励大家将共享的long和double变量设置为volatile类型，这样能保证任何情况下对long和double的单次读/写操作都具有原子性。\"]},\"186\":{\"h\":\"volatile 的实现原理\"},\"187\":{\"h\":\"volatile 可见性实现\",\"t\":[\"volatile 变量的内存可见性是基于内存屏障(Memory Barrier)实现:\",\"内存屏障，又称内存栅栏，是一个 CPU 指令。\",\"在程序运行时，为了提高执行性能，编译器和处理器会对指令进行重排序，JMM 为了保证在不同的编译器和 CPU 上有相同的结果，通过插入特定类型的内存屏障来禁止+ 特定类型的编译器重排序和处理器重排序，插入一条内存屏障会告诉编译器和 CPU：不管什么指令都不能和这条 Memory Barrier 指令重排序。\"]},\"188\":{\"h\":\"volatile 有序性实现\"},\"189\":{\"h\":\"happens-before 规则中有一条是 volatile 变量规则：对一个 volatile 域的写，happens-before 于任意后续对这个 volatile 域的读。\"},\"190\":{\"h\":\"volatile 禁止重排序\",\"t\":[\"为了性能优化，JMM 在不改变正确语义的前提下，会允许编译器和处理器对指令序列进行重排序。JMM 提供了内存屏障阻止这种重排序。 Java 编译器会在生成指令系列时在适当的位置会插入内存屏障指令来禁止特定类型的处理器重排序。 JMM 会针对编译器制定 volatile 重排序规则表。 \\\" NO \\\" 表示禁止重排序。 为了实现 volatile 内存语义时，编译器在生成字节码时，会在指令序列中插入内存屏障来禁止特定类型的处理器重排序。 对于编译器来说，发现一个最优布置来最小化插入屏障的总数几乎是不可能的，为此，JMM 采取了保守的策略。\",\"在每个 volatile 写操作的前面插入一个 StoreStore 屏障。\",\"在每个 volatile 写操作的后面插入一个 StoreLoad 屏障。\",\"在每个 volatile 读操作的后面插入一个 LoadLoad 屏障。\",\"在每个 volatile 读操作的后面插入一个 LoadStore 屏障。\",\"volatile 写是在前面和后面分别插入内存屏障，而 volatile 读操作是在后面插入两个内存屏障。\",\"内存屏障\",\"说明\",\"StoreStore 屏障\",\"禁止上面的普通写和下面的 volatile 写重排序。\",\"StoreLoad 屏障\",\"防止上面的 volatile 写与下面可能有的 volatile 读/写重排序。\",\"LoadLoad 屏障\",\"禁止下面所有的普通读操作和上面的 volatile 读重排序。\",\"LoadStore 屏障\",\"禁止下面所有的普通写操作和上面的 volatile 读重排序。\"]},\"191\":{\"h\":\"synchronized 详解\"},\"192\":{\"h\":\"JUC\"},\"193\":{\"h\":\"JUC 原子类\"},\"194\":{\"h\":\"JUC 锁\"},\"195\":{\"h\":\"JUC 集合\"},\"196\":{\"h\":\"JUC 线程池\"},\"197\":{\"h\":\"JUC 工具类\"},\"198\":{\"h\":\"ThreadLocal\"},\"199\":{\"h\":\"Transmittable-Thread-Local\"},\"200\":{\"h\":\"Java 基础面试题\"},\"201\":{\"h\":\"1. Java 语言有哪些特点\",\"t\":[\"简单易学、有丰富的类库\",\"面向对象（Java 最重要的特性，让程序耦合度更低，内聚性更高）\",\"与平台无关性（JVM 是 Java 跨平台的根本）\",\"可靠安全\",\"支持多线程\"]},\"202\":{\"h\":\"2. 面向对象和面向过程的区别\",\"t\":[\"面向过程：是分析解决问题的步骤，然后用按说把这些步骤一步一步的实现，然后在使用的时候一一调用则可。性能较高，所以单片机、嵌入式开发等一般采用面向过程开发\",\"面向对象：是吧构成问题的事务分解成对象，而建立对象的目的也不完全是为了完成一个个步骤，而是为了描述某个事物在解决整个问题的过程中所发生的行为。面向对象有封装、继承、多态的特性，所以易维护、易复用、易扩展。可以设计出低耦合的系统。但是性能上来说，比面向过程要低。\"]},\"203\":{\"h\":\"3. 八种基本数据类型的大小、以及他们的封装类\",\"t\":[\"byte 1 字节 默认值 0 封装类 Byte\",\"short 2 字节 默认值 0 封装类型 Short\",\"char 2 字节 默认值 null（\\\\u000） 封装类型 Character\",\"int 4 字节 默认值 0 封装类型 Integer\",\"float 4 字节 默认值 0.0f 封装类型 Float\",\"long 8 字节 默认值 0L 封装类型 Long\",\"double 8 字节 默认值 0.0d 封装类型 Double\",\"boolean 默认值 false 封装类型 Boolean \",\"JVM 虚拟机中没有提供 boolean 值专用的字节码指令，编译后是用 int 数据类型代替的，而 boolean 数组则会被编译成 byte 数组。所以 boolean 单独使用时是 4 个字节，数组中是 1 个字节。\",\"注意： 除了八种基础类型外都是封装类型\"]},\"204\":{\"h\":\"4. instanceof\",\"t\":[\"双目运算符，obj instanceof Class，判断 obj 是否是 Class （或其子类）的对象，若是返回 true\",\"注意： 编译器会检查 obj 是否能够转换为右面的 class 类型，若是不能确定则看运行时，obj 不可使基础类型\"]},\"205\":{\"h\":\"5. 自动装箱和拆箱\",\"t\":[\"装箱：就是自动把基础类型自动转换为封装类型\",\"拆箱：就是自动把封装类型转化为基础类型\",\"注意： Integer 内部存在存在有缓存，缓存的数据大小为[-128,127]\"]},\"206\":{\"h\":\"6. 重载和重写\",\"t\":[\"重写： 子类把父类中的方法进行重写，要求方法名、参数列表、返回类型都相同，访问修饰权限不�����小于父类\",\"重载：方法名称一致，参数列表不一致，返回类型无要求\"]},\"207\":{\"h\":\"7. == 和 equals\",\"t\":[\"== 比较的地址，用于比较是否是同一个对象\",\"equals 比较的是地址中的数据是否相等\"]},\"208\":{\"h\":\"8. hashCode 作用\",\"t\":[\"hashCode：返回的是对象根据内存地址算出的一个值，提升直接通过 equals 进行判断数据是否一致的效率\",\"在集合中会使用到对象的 hashCode，以此来提升性能\"]},\"209\":{\"h\":\"9. String、StringBuffer、StringBuilder 区别\",\"t\":[\"String：内部是 final 修饰的字符数组，当 String 进行拼接时相当于新建字符数组进行替换，效率较低\",\"StringBuffer、StringBuilder： 内部都是可变数组，进行频繁的字符串操作性能较高\",\"StringBuffer： 对方法添加了同步锁或者调用的方法添加了同步锁，所以线程安全的\",\"StringBuilder：线程不安全\"]},\"210\":{\"h\":\"10. ArrayList 和 LinkedList 的区别\",\"t\":[\"ArrayList： 内部基于数组进行存储的，所以通过索引查询的效率是 O(1)，删除数据是开销较大，需要进行数组的处理。\",\"LinkedList： 内部是基于链表进行存储的，所以查询的效率较低，但是删除的效率较高。\"]},\"211\":{\"h\":\"11. HashMap 和 HashTable 的区别\",\"t\":[\"HashMap \",\"继承自 AbstractMap 类，实现了 Map、Cloneable、Serializable 接口\",\"kv 都支持 null，但实际 key 为 null 只会存在一个\",\"线程不安全\",\"HashTable \",\"继承自 Dictionary 类，实现了 Map、Cloneable、Serializable 接口\",\"kv 都不能为 null\",\"线程安全\"]},\"212\":{\"h\":\"12. Collection 包和 Collections 包的区别\",\"t\":[\"Collection：是集合的上级接口包\",\"Collections： 是集合的工具包\"]},\"213\":{\"h\":\"13. Java 的四种引用\",\"t\":[\"强引用 \",\"String s = new String(\\\"1);\",\"软引用 \",\"SoftReference wrf = new SoftReference(new String(\\\"1\\\")); new String 是软引用\",\"弱引用 \",\"WeakReference wrf = new WeakReference(str): WeakReference 的 key 是弱引用\",\"虚引用 \",\"PhantomReference prf = new PhantomReference(new String(\\\"1\\\"),new ReferenceQueue<>())\"]},\"214\":{\"h\":\"14.泛型常用特点\",\"t\":[\"不必因为类型不一致而创建不同类\"]},\"215\":{\"h\":\"15. Java 创建对象的方式\",\"t\":[\"new 创建对象\",\"反射 newInstance\",\"clone 克隆\",\"通过序列化\"]},\"216\":{\"h\":\"16. 有没有可能两个对象不等，但是 hashCode 相等？\",\"t\":[\"可能得，会存在哈希冲突\",\"解决方法 \",\"拉链法：例如 hashMap，若 hashCode 一致，则通过链表进行链接，获取的时候先通过 hashCode 查找，若存在多个则通过 equals 比较\",\"开放定址法：一旦发生冲突，就去寻找下一个散列，只要散列足够大，空的散列地��总能找到，并记录存入\",\"再哈希： 又叫双哈希，当第一个 哈希函数结果冲突就在用第二个、第三个，直到无冲突\"]},\"217\":{\"h\":\"17. 深拷贝和浅拷贝\",\"t\":[\"浅拷贝：只复制当前对象，当前对象的属性还是引用之前对象的值\",\"深拷贝：不仅仅复制当前对象，当前对象的属性也进行复制\"]},\"218\":{\"h\":\"18. final 有哪些用法\",\"t\":[\"修饰的类不可被继承\",\"被修饰的方法不可被重写\",\"被修饰的变量不可被变更，但若是封装对象这可以改变引用地址内的内容\",\"被修饰的方法 JVM 会尝试将其内联，以提高效率\",\"被修饰的常量，在编译阶段会存入常量池中\",\"遵守两个重排序规则 \",\"在构造函数内对一个 final 域的写入，与随后把这个被构造对象的引用赋值给一个变量，这两个操作之间不能重排序\",\"初次读一个包含 final 域的对象的引用，与随后初次读这个 final 域，这两个操作之间不能重排序。\",\"对于 final 域，编译器会在写入时插入一个 StoreStore 屏障，当读取 final 域时会插入 LoadLoad 屏障，这些屏障可以防止编译器和处理器在处理 final 域时进行过度的指令重排序。\",\"happens-before 规则 \",\"单一线程原则：在一个线程内，在程序前面的操作先行发生于后面的操作。\",\"管程锁定规则：一个 unlock 操作先行发生于后面对同一个锁的 lock 操作。\",\"volatile 变量规则：对一个 volatile 变量的写操作先行发生于后面对这个变量的读操作。\",\"线程启动规则：Thread 对象的 start() 方法调用先行发生于此线程的每一个动作。\",\"线程加入规则：Thread 对象的结束先行发生于 join() 方法返回\",\"线程中断规则：对线程 interrupt() 方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过 interrupted() 方法检测到是否有中断发生。\",\"对象终结规则：一个对象的初始化完成(构造函数执行结束)先行发生于它的 finalize() 方法的开始。\",\"传递性：如果操作 A 先行发生于操作 B，操作 B 先行发生于操作 C，那么操作 A 先行发生于操作 C\"]},\"219\":{\"h\":\"19.static 的用法\",\"t\":[\"静态常量\",\"静态方法\",\"静态代码快\",\"import staic 静态导包\"]},\"220\":{\"h\":\"20. 3*0.1 == 0.3 返回值是什么？\",\"t\":[\"false，因为浮点数不能完全的精确的表示出来\"]},\"221\":{\"h\":\"21. a=a+b 和 a+=b 有什么区别\",\"t\":[\"+= 会隐式自动转换\",\"byte a = 127;byte b = 127;b= a+b; 会报错，类型转换为 intb+=a;不会报错\"]},\"222\":{\"h\":\"22. try catch finally,try 里面有 return，finally 还会执行吗？\",\"t\":[\"会，在 return 前会执行 finally，如果 finally 有 return 则会直接 return\"]},\"223\":{\"h\":\"23. Exception 和 Error 包结构\",\"t\":[\"可以抛出的异常有三种 \",\"RuntimeException：运行时异常\",\"CheckException: 检查时异常\",\"Error：错误\"]},\"224\":{\"h\":\"24. OOM 你遇到过哪些情况，SOF 你遇到过那些情况\",\"t\":[\"OOM\",\"SOF\"]},\"225\":{\"h\":\"25. 简述线程、程序、进程的基本概念。以及他们之间的关系\",\"t\":[\"线程：线程和进程类似，但是线程是一个比进程更小的执行单位，一个进程在其执行的过程中可以产生多个小城。与进程不同的是同类的多个线程共享同一块内存空间和一组系统资源，所以系统在产生一个线程或是在各个线程之间切换工作时，负担要比进程小得多，也正因为如此，线程也被称为轻量进程。\",\"程序：含有指令和数据的文件，被存在磁盘或其他的数据存储设备中，也就是说程序是静态的代码\",\"进程：程序的一次执行过程，是系统运行程序的基本单位，因此进程是动态的。系统运行一个程序及时一个进程从创建、运行至消亡的过程，简单来说，一个进程就是一个执行的程序，它在计算机中一个指令接着一个指令的执行着没同事，每一个程序还占用某些系统资源如 CPU 时间、内存空间、文件、输入输出设备的使用权等等。\"]},\"226\":{\"h\":\"26. 某些字段不行序列化怎么办？\",\"t\":[\"使用 transient 关键字，阻止实例化中那些用此关键字修饰的变量序列化，相反 transient 修饰的变量值在被反序列化是也不会被持久化和回复。transient 只能修饰变量，不能修饰类和方法\"]},\"227\":{\"h\":\"27. java 中的 IO 流\",\"t\":[\"按照流向 \",\"输入\",\"输出\",\"按照操作单元 \",\"字节流\",\"字符流\",\"按照角色 \",\"节点流\",\"处理流\"]},\"228\":{\"h\":\"28. IO 和 NIO 的区别\",\"t\":[\"有相同的作用和目的，但是实现方式不同\",\"NIO 效率要比 IO 高很多\",\"JAVA API 中提供了两套的 NIO，一套是针对标准的输入输出，另一套就是网络编程 NIO\"]},\"229\":{\"h\":\"29. java 反射的作用与原理\",\"t\":[\"定义\",\"反射机制是在运行时，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意个对象，都能够调用它的任意一个方法，只要给定类的名称，就可以通过反射机制获得类的所有信息\",\"哪里用到\",\"框架中经常使用\",\"JDBC 的 Class.forName(\\\"com.mysql.jdbc.Driver.class\\\");\",\"反射的实现方式\",\"获取 class 对象的四种方式 \",\"Class.forName(\\\"\\\")\",\"类名.class\",\"对象.getClass()\",\"基础类型的包装类，可以调用包装类的 Type 属性来获得改包装的 Class 对象\",\"反射能够获取的信息\",\"class：表示正在运行对象的类\",\"Field： 提供有关类和接口的属性信息，以及对他的动态访问权限\",\"Constructor： 构造方法\",\"Method： 方法\",\"优点\",\"能够运行时动态获取类的实例，提高灵活性\",\"与动态编译结合\",\"缺点\",\"使用反射性能较低，需要解析字节码，将内存的对象进行解析。 \",\"通过 setAccessible(true) 关闭 JDK 的安全检查来提升反射速度\",\"多次创建一个类的实例时，有缓存会更多\",\"ReflectASM 工具类，通过字节码生成的方式加快反射速度\",\"相对不安全，破换了封装性\"]},\"230\":{\"h\":\"30. List、Set、Map 什么区别\",\"t\":[\"List：是单元素集合且有序可重复\",\"Set：是单元素集合且无序不可重复\",\"Map：键值对存储，key 不能重复，value 可以重复\"]},\"231\":{\"h\":\"31. Object 有哪些方法\",\"t\":[\"clone：克隆方法，实现对象的浅复制，只有实现了 Cloneable 接口才可以调用该方法，否则抛出 CloneNotSupportedException 异常，深度拷贝也需要实现 Cloneable，同时其成员变量为引用类型也要实现 Cloneable，然后重写 clone 方法\",\"finalize： 和垃圾收集器有关系，判断一个对象是都可以被回收的最后一步就是判断是否重写了此方法\",\"equals\",\"hashCode\",\"wait\",\"notify\",\"notifyAll\"]},\"232\":{\"h\":\"32. ArrayList 和 LinkedList\"},\"233\":{\"h\":\"33. 存在数组了为什么还要 ArrayList\",\"t\":[\"数组不可以自动扩容\"]},\"234\":{\"h\":\"34. 什么是 fail-fast\",\"t\":[\"集合的一种错误机制，集合在操作的时候 modCount 会自增，在进行迭代其遍历时会缓存当前的 modCount，然后每次迭代都会进行比较，要是不一致则说明存在别的线程在操作，从而抛出 ConcurrentModificationException 异常\"]},\"235\":{\"h\":\"35. HashTable 和 HashMap\"},\"236\":{\"h\":\"36. HashMap 中的 key 可以使用任何类作为 key 吗？\",\"t\":[\"若类重写了 equals，它也应该重写 hashCode 方法\",\"类的所有实例需要遵守 equals 和 hashCode 相关的规则\",\"如果一个类没有使用 equals，你也不应该在 hashCode 中使用它\"]},\"237\":{\"h\":\"37. HashMap 的长度为什么是 2 的 n 次方\"},\"238\":{\"h\":\"38. HashMap 和 ConcurrentHashMap 的异同？\"},\"239\":{\"h\":\"39. 红黑树\"},\"240\":{\"h\":\"40. 怎么处理异常\"},\"241\":{\"h\":\"Spring 整体架构\"},\"242\":{\"h\":\"弱转强\",\"t\":[\"原文弱转强从来不是一种战法，也不是一种模式，而是一种不同维度理解的预期差，有了预期差所以有利可图，弱转强是一个综合的局。\",\"这篇弱转强，我想了很久，怕写深奥了你们理解不了，一口吃不了一个胖子，只能先浅谈一下，说是浅谈，但是绝非一招半式，照葫芦画瓢的死板战法。上完这节课，希望能重塑你们的弱转强理解，\",\"分清楚什么是真的弱转强，什么是无效的弱转强，怎么样的弱转强是确定性高，怎么介入，怎么离场，大家都要做到心理有数。\",\"今天从宏观到微观，大盘，主线板块，板块内同身位弱转强，个股自身弱转强（分时，隔日，板上），四个层次给大家讲解，弱转强是一个综合的局！\",\"这是对超预期的最简单的诠释，之前我们天天讲的预期，预期差，他是我们炒股赚钱的本质，那到底要怎么去利用预期差呢？相信你们都知道，可真正能把这个弱转强讲清楚的到目前还没有几个，\",\"弱转强本质上就是利用了预期差做文章。\"]},\"243\":{\"h\":\"1. 大盘的弱转强\",\"t\":[\"首先于大盘而言，什么弱，就是连续下跌颓势，弱势震荡，突然的长阴杀跌。。。。。 那相对起来，什么叫做强。\",\"连续下跌的企稳甚至拉起中长阳，弱势平台震荡突然突破向上。期间的转换过程，便成为弱转强。\",\"大盘连续弱势，场内不看好的筹码连续抛售，领跌品种严重超跌。场内依然想卖出筹码的人越来越少了，大家也也是意识到领跌的品种超跌了应该暂时理智起来，场外的资金也看到了这一点，就会进场抄底，发动一波反弹行情，发动什么方向就要看政策，估值高低，行业逻辑。\",\"在这情况之下，资金选择的方向拉起，在他们的反抗下，下跌无力的大盘，也容易被带起，这个便是板块领涨，和大盘共振。如果不能引发大盘的回暖，不形成共振，代表空方力量未衰竭，或者其他跟风资金不怎么认可。那领涨的品种便是昙花一现。只有跟大盘弱转强共振的领涨品种才有确定性，才有后续的价值。通过大盘的弱转强去捕获主线。大家记住，在大盘级别的弱转强之下，总能借势切换出主线，主线也能诞生大龙头，也是我最近手把手带的竞业达出场的时机。下面给大家来个图例\",\"596UDi\",\"每次当大盘弱转强的时候，跟大盘共振或者领先大盘弱转强的品种，在后续都有成为龙头的潜力。炒作的长度和高度，跟大盘有多弱转多强相关。 辅助判断：情绪和大盘共振加速赶底的时候。 为啥要研究大盘的拐点和弱转强，我们不是为了去预判大盘的走势，而是要捕获炒作的时间和领涨的方向，这个也是重要的短线大局观。\"]},\"244\":{\"h\":\"2. 概念板块弱转强\",\"t\":[\"个股的分歧与一致： 一般情况下，一支股票，放量代表分歧，缩量代表一致。如果从买卖逻辑上来说，说的是买卖双方的行为，买卖双方集体看好，筹码惜售，叫一致，那体现在技术面量价关系上，就是缩量加速的走势，反之，则叫分歧。\",\"当一个概念板块成为了主线之后总会经历分歧和一致相互转换的过程，分歧的时候就是弱，一致的时候就是强。 比如有时候板块前排一致加速，后排掉队的情况，这就叫板块分歧； 而一致的情况则相反，就是前排加速走强，后排跟随晋级上涨。\",\"img\",\"img\",\"例如 10月13日信创为例，龙头缩量加速，南天，国脉加速，低位的英飞拓，声迅高鸿加速。这个就叫一致。 10月14日信创为例，龙头放出大量换手，甚至强势的情况下断板了，但是英飞拓，南天，国脉依旧缩量顶，后排的高鸿和声迅此流开始掉队。这个就是板块的分歧。\",\"这里的分歧转一致便是板块级别的弱转强，\",\"研究大盘的弱转强，可以抓到领涨主线。那么领涨概念板块出来了，我们去研究领涨的概念板块的分歧转一致弱转强到底有什么意义呢。\",\"这个就是龙头主升的交易节奏范畴的，之前也给你们详细讲过。 这里给大家多提点一种情况，如果你手上的标的，在分歧点（一二三次分歧）尝试转强，可能第一次分歧点成功的可能性比较大，第二次，第三次呢？显然不大！第一次分歧点的时候，主线强得一批，就算是分歧，也有可能让个股弱转强成功。 如果你手上的标的再一致点的时候断板，次日主线要分歧，并且竞价发现核心标的都开得不高，再次确定分歧，你手上的个股昨天掉队的个股今天要弱转强成功，那就更难了一些，\",\"板块强，个股弱，个股是真的弱。 板块弱，个股强，个股真的强。 板块强，个股强，你好我好大家好。 板块弱，个股弱，一起完蛋。\",\"后续补充一点，概念之间轮动的节奏，也是弱转强强转弱的一种体现。\",\"三．同一概念中，个股间的弱转强 这里讲的，其实就是一种情况，同高度的ABCD pk。前两天的涨停时间ABCD，今天的涨停时间确实DABC, 那么我们就说D卡位了前面三个标的，完成了一次卡位，这个我们也在龙头的常识认知及其中间的关系的课上已经说得很清楚。这个过程也是一个弱转强的过程。 通常完成一次个股强弱排序之间的弱转强，能提高识别度，更能受到资金的青睐，后续的预期会提高，是一个绝对的加分项。\",\"例如\",\"在保利联合开路的情况下，浙江建投卡位同板位的重庆建工，走出来成为大龙头\",\"在宋都股份逻辑切换带起房地产，天保基建卡位同板位的苏州高新，走出来成为龙头\",\"在竞业达继续打高度，信创明确的情况下，英飞拓卡位南天信息，走多了两个板冲高\",\"无主线无方向，单纯连板接力，同一身位后排卡前排，这种弱转强，也能享受更高的溢价\",\"那么我们就能思考衍生出，当在主线明确的情况下，同身为的后排卡前排，是不是应该更加重视起来？\",\"后续高阶补充：核心地位的弱转强争夺\",\"四．个股自身的弱转强 个股自身的弱转强，还分为以下三点：日内分时弱转强，隔日弱转强，炸板回封封单大涨弱转强。\",\"日内分时弱转强 我直接举两个例子 （1） 英飞拓，10月18日，在信创板块分歧的时候，上午不断走低，下午两笔直线上板，引领回流。这种在恰当的时机直接从水下爆拉买起来封板，便是分时级别的弱转强。要从暴力拉起封板，需要很大的做多力量，我们叫做为主动性大买盘。 浙江建投同理\",\"img\",\"img\",\"（2） 大港股份，8月2日，大盘继续扑街，大港股份盘中摸跌停，摸了跌停马上拉起来，这里就经历了一次弱转强，水下一笔直线拉起封板，这里经历了第二次弱转强。\",\"img\",\"（3） 竞业达，10月21日，从平盘震荡下杀，这里是从正常转弱，杀破分时就是从强势区域跌到弱势区域，更进一步转弱；后续分时双底，弱转强迹象，上0轴，弱势区域转强势区域。震荡回板，更近一步转强。\",\"img\",\"分时级别的弱转强，一定是要结合主线的分歧转一致来综合判断的，不是一项简单的技术。也不是单一的交易信号。\",\"炸板回封板上弱转强（炸板后的封单增大） 这个简单提一下，一般出现在对抗的情况当中，什么是对抗，你们应该都是知道的。在对抗过程当中，A BCD都涨停了，后续大家都炸板。ABCD都在炸板分歧，都在打假，这样我们就看谁先回封谁就叫做强，都会封我们除了看回封的时间，还要看谁的封单比炸板之前更大些，就完成了一次板上的弱转强。（回封时间和回封封单）\",\"个股的T+1弱转强 这个也是你们最常讨论的，也是网上很多老师教的一种情况。这里重点给大家讲一下。\",\"T+1的弱转强又可以分为低位弱转强和高位弱转强\",\"关于个股弱转强，首先你得明白这三个字是什么意思？ 第一个“弱”，他代表当天的走势是比较弱的，高度板之后出现大烂板，炸板回封失败，又或者是断板，放量阴线，低开低走毫无反弹的迹象，都可以叫做弱。 第二个字是“转”，转他代表着一个股性转变的一个过程，从弱转变到强都代表着股性的转变。 第三个字“强”，强他强在哪里呢？该弱不弱他就是强，放量高开，直接秒板、一字板，这些都是强。\",\"股票从弱到强他就是一个转变的过程，就是股性转变的一个过程，从原本应该弱势到意料之外的强，这就是超预期的一个转变的过程，超预期就是超出了正常的预期。\",\"（2）什么是正常的预期？ 弱的票他正常的预期就是会继续走低，接着跌这个就是正常的预期，当然收烂板，然后次日下跌，随后一路下跌，这种走势就叫做正常的预期，那么如果次日他不按这个套路来，他反而大涨，这就是超预期。\",\"下面说得更加详细一些\",\"（1）低位弱转强 弱转强低位板比高位弱转强板出现的几率更大，这是因为一个是标的池多，一个是在低位中很容易在同题材同身位中出现卡位的现象，也是我们刚刚上面说到过的题材内同身位的后排卡前排。\",\"针对低位的弱转强，下面给大家介绍一下我一般是怎么做的：\",\"低位弱转强中优先选择主线内前一天放量板，缩量板不考虑。放量版的标准我是这么看的: 《1》 取历史股性比较好的也就是有涨停和连板基因的，主线内的标的 《2》 量能是不能具体量化，可以爆量但是一定不能缩量，而且需要前一天的涨停板板上换手换筹，俗称烂板破板。\",\"这种一般我会选择进入一个股票池代入观察，第二天有三个判定标准（在主线还是健康的首次或者第二次分歧比较容易成功） 《1》 竞价竞价最少要开在-3%以上-3%到8%是符合标准的，再往上开8点几，9点几，类似这种也是有成功几率但是我个人基本不参与除非是题材非常确认今天要加速。（其实这个-3到8%我自己的实盘是没有太多的考究，有的时候-5，-4我都愿意去看，这个就是具体问题具体分析了，这里的-3到8只是给大家一个参考区间） ’因为竞价如果开的太高再上去板，前一天的资金一定是锁筹而开的，价格离当天涨停板的价格过于近，后必然会导致一些稀缺换手小盘股可能一笔就上板了。 接下来就比较尴尬你要保证在没有换手的情况下，而且当天是属于空转多的极致性一刻完成后，当天没有任何多空情绪转变的诱因和概率，不管是大盘还是题材一旦出现这种概率就非常尴尬。（换手不充分转强，出了幺蛾子容易跪下）\",\"《2》 开盘-3%到8%竞价满足第一条件后，竞价的量能最好要比昨天的竞价量能更大。竞价量能更大代表着今天竞价交易比昨日竞价的交易更加活跃，而在价格上转强，证明今天竞价就有更加多的人愿意做多。如果情绪良好，主线修复或者加速的，可以在竞价就一笔；（特别注意！！！竞价量能只能辅助判断，不能过于依赖，也有许多竞价缩量的在后续的分时转强回板走高的。千万千万不要把他当做神仙指标）\",\"如果竞价没有上，那么开盘5分钟非常的关键。如果开盘向上，单子也不断增大怼上去，且看到板块明显修复，题材也有低位助攻，最好是主线的头两次分歧，可以半路，可以板上；如果开盘转强之后往下砸，那必须砸出恐慌之后要马上承接修复起来，快速回到0轴，这个是一个态度的问题，如果不能尽快修复，我不认为今天的弱转强多大可能成功，当然他走出来就错过了，错过就错过，毕竟不是每次弱转强都要去做的，做自己熟悉的看得懂的就行\",\"《3》 满足前面的1和2，再说说板上。我一般就填好单子价格和数量等待最后一击了，上板之前当日量能也就是该股的日K量能放量缩量都行，但是不能爆量。 原理是本身这个模式做的就是资金的弱转强 如果转强应该是空转多一致性的表现，所以放量缩量都合理。但是如果爆量就意味着空多再次出现了非常不一致的行为，那么这种情况和上面提到的那种开太高的情况一下涨停不涨停都可能，但不是我所能控制的了，我不去参与这种。（爆量太大，分歧过大，不确定性就大了）\",\"《4》 我个人在低位板中，只做同题材同身位的第一只弱转强，第二只直接放弃。原因是第二只的弱转强上板，当天无法盘中定义和判别它的弱转强是它本身的弱转强，还是被第一只弱转强成功后被带起的表面形式的弱转强。也就是所谓的跟风。所以如果在低位中第一只同题材同身位的弱转强我手慢或者没上，第二只我个人一般是是放弃的，这种弱转强可能封得住可能封不住完全是概率\",\"（2） 高位弱转强 高位的弱转强，我一般就做龙头未见顶之前的分歧转一致，或者是二波预期的弱转强。其他基本不碰。具体可以回看竞业达周期咱们在高位的操作。这个应该是比较熟悉的了，也没有低位的这么多弯弯绕。 既然是要做高位的弱转强，最好就是题材分歧之后有转一致的预期的时间窗口，最好是低位有强势的一字助攻的时候。那么高位龙头的弱转强，基本上成功率比较高，特别是大主线龙头的前两次分歧转一致。\",\"那么我们总结一下怎么样的弱转强比较成功，下面给大家几个场景\",\"指数环境经历过冰点恐慌回暖，有强烈的企稳反弹预期的时期段\",\"主线题材内的经历过分歧，有转一致的强烈预期，如果叠加后排卡前排更佳，如果前一天出现分时的明显弱转强打出加分识别度，第二天在主线强烈转一致的预期之下，再去卡同身位前排，更佳\",\"龙头前期阶段的烂板，断板，次日低位有强势的一字板助攻，\",\"题材分歧日，题材中有标的，出现分时弱转强，主动性大买盘往上顶，并且整个题材内分歧的个股同时跟着拉升。那么这个分时弱转强上板，便是引领资金回流主线的功臣，这个板非常有价值，次日的弱转强也比较容易成功。 。 。 。。\",\"等等，后续各位按照自己的交易系统继续补充。\"]},\"245\":{\"h\":\"短线总结\"},\"246\":{\"h\":\"看盘与交易\"},\"247\":{\"h\":\"竞价阶段\"},\"248\":{\"h\":\"早间\",\"t\":[\"中信建投等早报 昨日期货 昨日外盘\"]},\"249\":{\"h\":\"9:15\",\"t\":[\"市场隔夜单\",\"涨跌停个股是哪些？都是什么板块？ 市场资金有无明显攻击方向？\",\"涨跌停个股的封单变大还是变小？\"]},\"250\":{\"h\":\"9:25\",\"t\":[\"通达信 880005，查看当前市场环境 板块指数 情绪风标\",\"正反馈风标\",\"负反馈风标 目标个股\",\"竞价的基础知识\",\"集合竞价3要素\"]},\"251\":{\"h\":\"交易阶段\"},\"252\":{\"h\":\"观察资金情况\"},\"253\":{\"h\":\"旧热点\",\"t\":[\"感悟市场，确定热点题材的反馈\"]},\"254\":{\"h\":\"接力\",\"t\":[\"看同题材个股开盘情况；同连板数须前排涨停，最好第一个\"]},\"255\":{\"h\":\"热点\",\"t\":[\"观察热点板块，购买旧人气或者涨幅最快\"]},\"256\":{\"h\":\"复盘\"},\"257\":{\"h\":\"大盘分析\"},\"258\":{\"h\":\"热点板块分析\"},\"259\":{\"h\":\"个股分析\"},\"260\":{\"h\":\"资金分析\"},\"261\":{\"h\":\"云平台搭建\",\"t\":[\"云平台主要采用的技术如下：\",\"名称\",\"简介\",\"Docker\",\"应用容器引擎，从而实现同一应用运行在任何地方\",\"Kubernetes\",\"容器化编排工具，能够实现容器化的集群部署\",\"Rancher\",\"Kubernetes 管理工具，能够快速搭建高可用 Kubernetes 和搭建部分常用服务\",\"Harbor\",\"私有镜像仓库\",\"Jenkins\",\"持续集成工具\"]},\"262\":{\"h\":\"环境准备\"},\"263\":{\"h\":\"1.关闭防火墙\",\"t\":[\"### 停止防火墙 systemctl stop firewalld.service ### 禁止开机启动 systemctl disable firewalld.service \"]},\"264\":{\"h\":\"2.更新 yum\",\"t\":[\"yum update \"]},\"265\":{\"h\":\"3.安装工具\",\"t\":[\"yum install -y yum-utils device-mapper-persistent-data lvm2 \"]},\"266\":{\"h\":\"安装 Docker\",\"t\":[\"### 添加Docker源 yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo ### 更新yum yum update -y ### 安装Docker yum install -y docker-ce ### 启动Docker systemctl start docker \"]},\"267\":{\"h\":\"1. 设置开机启动\",\"t\":[\"systemctl enable docker \"]},\"268\":{\"h\":\"2.使用阿里加速\",\"t\":[\"### 使用阿里的容器镜像服务进行加速（个人加速器可更换） ### Linux 加速 sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json <<-'EOF' { \\\"registry-mirrors\\\": [\\\"https://q47dgr1i.mirror.aliyuncs.com\\\"] } EOF sudo systemctl daemon-reload sudo systemctl restart docker \"]},\"269\":{\"h\":\"安装 Rancher\",\"t\":[\"### 拉取镜像 sudo docker pull rancher/rancher ### 运行镜像 sudo docker run -d --restart=unless-stopped -p 8080:80 -p 8443:443 --name rancher rancher/rancher \",\"如果映射端口为 80、443 可能会导致无法访问，更换端口即可\"]},\"270\":{\"h\":\"安装 Kubernetes\"},\"271\":{\"h\":\"1.创建集群\",\"t\":[\"添加集群\",\"选择自定义，然后填写创建的配置，点击下一步\",\"添加节点\"]},\"272\":{\"h\":\"2.安装 master\",\"t\":[\"安装 master 节点，需要选择 Control 然后复制执行命令在相应的主机执行命令即可\"]},\"273\":{\"h\":\"3.安装 node\",\"t\":[\"只需要选择 work 然后复制执行命令在相应的主机执行命令即可\"]},\"274\":{\"h\":\"4.笔记本合盖\",\"t\":[\"需要设置合盖不影响，否则盒盖休眠就会影响该节点\"]},\"275\":{\"h\":\"5.主机名\",\"t\":[\"若主机名重复，则可能导致无法做安装节点 若 k8s.master k8s.node 他主机名显示的都为 k8s 导致无法添加\"]},\"276\":{\"h\":\"Rancher-cli 工具使用\",\"t\":[\"linux 下载链接：https://releases.rancher.com/cli2/v2.4.3/rancher-linux-amd64-v2.4.3.tar.gz\",\"window 下载链接：https://releases.rancher.com/cli2/v2.4.3/rancher-windows-386-v2.4.3.zip\",\"MacOS 下载链接：https://releases.rancher.com/cli2/v2.4.3/rancher-darwin-amd64-v2.4.3.tar.gz\"]},\"277\":{\"h\":\"通过 UI 添加 token\"},\"278\":{\"h\":\"使用\",\"t\":[\"## 进入解压包中，使用命令即可登录rancher ./rancher login https://172.22.190.240:8443/v3 -t token-d7sx4:jh2wgcjjnmvq7m9l9rbr8qdw5fr7nrd2bjssjfngmcjrsxncdphf7d \",\"需要下载kubectl工具对kubernetes进行操作\"]},\"279\":{\"h\":\"安装 kubectl\",\"t\":[\"# 1. 配置阿里云源 cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 EOF # 2. 开始安装 yum -y install kubectl # 3. 测试 查看节点 ./rancher kubectl get nodes \"]},\"280\":{\"h\":\"安装 Harbor\",\"t\":[\"# 1. 下载安装文件（可以在指定目录下载） wget https://storage.googleapis.com/harbor-releases/harbor-online-installer-v1.5.2.tgz # 2. 解压下载的文件 tar xvf harbor-online-installer-v1.5.2.tgz \"]},\"281\":{\"h\":\"配置 Harbor\",\"t\":[\"1. 修改Harbor的配置文件 cd harbor vim harbor.cfg 内容如下： # hostname设置访问地址，可以使用ip、域名，不可以设置为127.0.0.1或localhost hostname = hub.k8s.com # 访问协议，默认是http，也可以设置https，如果设置https，则nginx ssl需要设置on ui_url_protocol = http # mysql数据库root用户默认密码root123，实际使用时修改下 db_password = root@1234 max_job_workers = 3 customize_crt = on ssl_cert = /data/cert/server.crt ssl_cert_key = /data/cert/server.key secretkey_path = /data admiral_url = NA # 邮件设置，发送重置密码邮件时使用 email_identity = email_server = smtp.mydomain.com email_server_port = 25 email_username = sample_admin@mydomain.com email_password = abc email_from = admin <sample_admin@mydomain.com> email_ssl = false # 启动Harbor后，管理员UI登录的密码，默认是Harbor12345 harbor_admin_password = root@1234 # 认证方式，这里支持多种认证方式，如LADP、本次存储、数据库认证。默认是db_auth，mysql数据库认证 auth_mode = db_auth # LDAP认证时配置项 #ldap_url = ldaps://ldap.mydomain.com #ldap_searchdn = uid=searchuser,ou=people,dc=mydomain,dc=com #ldap_search_pwd = password #ldap_basedn = ou=people,dc=mydomain,dc=com #ldap_filter = (objectClass=person) #ldap_uid = uid #ldap_scope = 3 #ldap_timeout = 5 # 是否开启自注册 self_registration = on # Token有效时间，默认30分钟 token_expiration = 30 # 用户创建项目权限控制，默认是everyone（所有人），也可以设置为adminonly（只能管理员） project_creation_restriction = everyone verify_remote_cert = on \"]},\"282\":{\"h\":\"启动 Harbor\",\"t\":[\"# 1.在当前安装目录下 ./install.sh \"]},\"283\":{\"h\":\"注意\",\"t\":[\"执行 install.sh 报以下错误\",\"root@ubuntu:~/harbor# ./prepare Generated and saved secret to file: /data/secretkey Generated configuration file: ./common/config/nginx/nginx.conf Generated configuration file: ./common/config/adminserver/env Generated configuration file: ./common/config/ui/env Generated configuration file: ./common/config/registry/config.yml Generated configuration file: ./common/config/db/env Generated configuration file: ./common/config/jobservice/env Generated configuration file: ./common/config/jobservice/config.yml Generated configuration file: ./common/config/log/logrotate.conf Generated configuration file: ./common/config/jobservice/config.yml Generated configuration file: ./common/config/ui/app.conf Fail to generate key file: ./common/config/ui/private_key.pem, cert file: ./common/config/registry/root.crt \",\"需要修改 prepare 文件，将第 498 行：\",\"empty_subj = \\\"/C=/ST=/L=/O=/CN=/\\\" \",\"修改如下：\",\"empty_subj = \\\"/C=US/ST=California/L=Palo Alto/O=VMware, Inc./OU=Harbor/CN=notarysigner\\\" \"]},\"284\":{\"h\":\"安装 Jenkins\",\"t\":[\"sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key yum install jenkins ## 启动 systemctl restart jenkins ## 密码 cat /var/lib/jenkins/secrets/initialAdminPassowrd \"]},\"285\":{\"h\":\"提升权限\",\"t\":[\"# 将jenkins账号分别加入到root组中 gpasswd -a root jenkins vi /etc/sysconfig/jenkins # JENKINS_USER=root # JENKINS_GROUP=root ## 重启 service Jenkins restart \"]},\"286\":{\"h\":\"设置环境\",\"t\":[\"## 下载java wget --no-cookies --no-check-certificate --header \\\"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\\\" \\\"http://download.oracle.com/otn-pub/java/jdk/8u141-b15/336fa29ff2bb4ef291e347e091f7f4a7/jdk-8u141-linux-x64.tar.gz\\\" ## 下载maven wget https://archive.apache.org/dist/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz \"]},\"287\":{\"h\":\"配置 Jenkins 插件工具\",\"t\":[\"Manage Jenkins --- > Global Tool Configure\"]},\"288\":{\"h\":\"设置流水线\",\"t\":[\"新建 Item\",\"选择创建任务的类型和名称\",\"配置源码管理\",\"构建触发器：可设置定时构建、WebHooks 触发构建\",\"构建环境：需要 NodeJs 的可以添加环境，或者直接在脚本中直接通过 node 的位置直接执行\",\"build 命令：可指定文件执行 maven 命令\",\"Post Steps: 可以指定运行脚本等，根据安装的插件可添加很多功能\",\"构建设置：可设置通知\"]},\"289\":{\"h\":\"Kubernetes 部署 Nginx 测试\",\"t\":[\"通过 rancher-cli 进行部署，部署文件的内容：\",\"apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment namespace: \\\"default\\\" labels: app: nginx spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.12.2 ports: - containerPort: 80 --- apiVersion: v1 kind: Service metadata: name: \\\"test-nginx\\\" namespace: \\\"default\\\" labels: app: \\\"test-nginx\\\" spec: ports: - name: \\\"80\\\" port: 80 targetPort: 80 selector: app: nginx status: loadBalancer: {} --- apiVersion: extensions/v1beta1 kind: Ingress metadata: labels: app: nginx name: test-nginx spec: rules: - host: test-nginx.default.172.22.190.240.xip.io http: paths: - backend: serviceName: test-nginx servicePort: 80 path: / status: loadBalancer: ingress: - ip: 172.22.190.240 \"]},\"290\":{\"h\":\"Jenkins 打包 SpringBoot 镜像测试\"},\"291\":{\"h\":\"设置 Jenkins 流水线\",\"t\":[\"添加源码管理并指定分支\",\"项目中使用到了 NodeJs，添加 NodeJs 构建环境\",\"执行 Maven 命令进行构建打包\",\"执行自定义（deploy）制作镜像-->推送镜像--->部署的脚本\",\"点击应用，保存该流水线。\",\"deploy 内容\",\"#!/bin/bash cd ./contract-parent/contract-server && \\\\ docker build -t 172.22.190.250/library/contract:latest . && \\\\ docker push 172.22.190.250/library/contract:latest && \\\\ /usr/local/bin/rancher kubectl apply -f deployment.yaml && \\\\ cd ../../ && \\\\ cd ./project-parent/project-server && \\\\ docker build -t 172.22.190.250/library/project:latest . && \\\\ docker push 172.22.190.250/library/project:latest && \\\\ /usr/local/bin/rancher kubectl apply -f deployment.yaml && \\\\ cd ../../ && \\\\ cd ./public-data-parent/public-data-server && \\\\ docker build -t 172.22.190.250/library/public-data:latest . && docker push 172.22.190.250/library/public-data:latest && /usr/local/bin/rancher kubectl apply -f deployment.yaml && cd ../../ && \\\\ cd ./omgt-web && rm -rf dest && npm install && \\\\ npm run build && docker build -t 172.22.190.250/library/omgt-web:latest . && \\\\ docker push 172.22.190.250/library/omgt-web:latest && \\\\ /usr/local/bin/rancher kubectl apply -f deployment.yaml && cd ../../ \",\"其中一个 Dockerfile 的内容\",\"FROM anapsix/alpine-java:8_server-jre_unlimited MAINTAINER 961099916@qq.com ENV TZ=Asia/Shanghai RUN ln -sf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone RUN mkdir -p /omgt WORKDIR /omgt EXPOSE 8038 ADD ./target/public-data-server.jar ./ CMD sleep 10;java -Djava.security.egd=file:/dev/./urandom -jar public-data-server.jar >> start.log \",\"其中一个 deployment.yaml 的内容\",\"apiVersion: apps/v1 kind: Deployment metadata: name: public-data-deployment namespace: default labels: app: public-data dept: omgt env: dev spec: replicas: 2 selector: matchLabels: app: public-data dept: omgt env: dev template: metadata: labels: app: public-data dept: omgt env: dev spec: containers: - name: omgt-public-data image: 172.22.190.250/library/public-data:latest imagePullPolicy: Always ports: - containerPort: 8038 --- apiVersion: v1 kind: Service metadata: name: public-data-service namespace: default labels: app: public-data dept: omgt env: dev spec: ports: - name: \\\"8038\\\" port: 8038 targetPort: 8038 selector: app: public-data dept: omgt env: dev status: loadBalancer: {} --- apiVersion: extensions/v1beta1 kind: Ingress metadata: labels: app: public-data dept: omgt name: public-data-ingress spec: rules: - host: public-data-ingress.default.172.22.190.240.xip.io http: paths: - backend: serviceName: public-data-service servicePort: 8038 path: / status: loadBalancer: ingress: - ip: 172.22.190.240 \"]},\"292\":{\"h\":\"查看打包过程\",\"t\":[\"点击 Build Now 运行流水线\",\"点击历史可进入正在运行的流水线\",\"通过控制台进行查看流水线日志\"]},\"293\":{\"h\":\"查看 Kubernetes 集群中是否部署成功\",\"t\":[\"查看指定的命名空间和服务名称\"]},\"294\":{\"h\":\"后记\",\"t\":[\"部署文件的编写可能需要学习 Kubernetes 才能编写，而次次重新编写可能过于麻烦，可通过cookiecutter进行模板化生成\"]},\"295\":{\"h\":\"1.安装 cookiecutter\",\"t\":[\"pip install cookiecutter \"]},\"296\":{\"h\":\"2.编写配置文件\",\"t\":[\"# 创建文件 mkdir cookiecutter.json \",\"cookiecutter 内容如下：\",\"{ \\\"project\\\": \\\"kubernetes\\\", \\\"dept\\\": \\\"omgt\\\", \\\"env\\\": \\\"dev\\\", \\\"namespace\\\": \\\"default\\\", \\\"app_name\\\": \\\"nginx\\\", \\\"app_port\\\": \\\"8080\\\", \\\"app_replicas\\\": \\\"1\\\", \\\"app_image\\\": \\\"nginx\\\", \\\"app_image_version\\\": \\\"latest\\\", \\\"lbip\\\": \\\"192.168.1.3\\\" } \"]},\"297\":{\"h\":\"3.创建模版文件\",\"t\":[\"mkdir {{cookiecutter.project}} touch default_dev.yaml \",\"default_dev.yaml 内容如下：\",\"apiVersion: apps/v1 kind: Deployment metadata: name: {{cookiecutter.app_name}}-deployment namespace: {{cookiecutter.namespace}} labels: app: {{cookiecutter.app_name}} dept: {{cookiecutter.dept}} env: {{cookiecutter.env}} spec: replicas: {{cookiecutter.app_replicas}} selector: matchLabels: app: {{cookiecutter.app_name}} dept: {{cookiecutter.dept}} env: {{cookiecutter.env}} template: metadata: labels: app: {{cookiecutter.app_name}} dept: {{cookiecutter.dept}} env: {{cookiecutter.env}} spec: containers: - name: nginx image: {{cookiecutter.app_image}}:{{cookiecutter.app_image_version}} ports: - containerPort: {{cookiecutter.app_port}} --- apiVersion: v1 kind: Service metadata: name: {{cookiecutter.app_name}}-service namespace: {{cookiecutter.namespace}} labels: app: {{cookiecutter.app_name}} dept: {{cookiecutter.dept}} env: {{cookiecutter.env}} spec: ports: - name: \\\"{{cookiecutter.app_port}}\\\" port: {{cookiecutter.app_port}} targetPort: {{cookiecutter.app_port}} selector: app: {{cookiecutter.app_name}} dept: {{cookiecutter.dept}} env: {{cookiecutter.env}} status: loadBalancer: {} --- apiVersion: extensions/v1beta1 kind: Ingress metadata: labels: app: {{cookiecutter.app_name}} dept: {{cookiecutter.dept}} name: {{cookiecutter.app_name}}-ingress spec: rules: - host: {{cookiecutter.app_name}}-ingress.{{cookiecutter.namespace}}.{{cookiecutter.lbip}}.xip.io http: paths: - backend: serviceName: {{cookiecutter.app_name}}-service servicePort: {{cookiecutter.app_port}} path: / status: loadBalancer: ingress: - ip: {{cookiecutter.lbip}} \"]},\"298\":{\"h\":\"《RocketMQ技术内幕》\"},\"299\":{\"h\":\"《从零开始学架构：照着做，你也能成为架构师》\"},\"300\":{\"h\":\"1. 架构基础\"},\"301\":{\"h\":\"架构是什么\",\"t\":[\"系统与子系统\",\"系统泛指由一群有关联的个体组成，根据某种规则运作，能完成个别元件不能单独完成的工作的群体。它的意 思是“总体”“整体”或“联盟”。\",\"关联\",\"规则\",\"能力\",\"模块和组件\",\"划分模块是为了职责分离\",\"划分组件是为了单元复用\",\"框架和架构\",\"框架多是一种规范\",\"架构多是一种结构，系统结构\"]},\"302\":{\"h\":\"架构设计的目的\",\"t\":[\"解决复杂度带来的问题\"]},\"303\":{\"h\":\"复杂度来源\",\"t\":[\"高性能\",\"单机复杂度\",\"进程和线程\",\"操作系统\",\"集群复杂度\",\"任务分配\",\"任务分解\",\"高可用 指“系统无中断地执行其功能”的能力，代表系统的可用性程度，是进行系统设计 时的准则之一。\",\"计算高可用\",\"存储高可用\",\"高可用状态决策\",\"独裁式\",\"协商式\",\"民主式\",\"高扩展\",\"预测变化\",\"应对变化\",\"稳定和变化分层，防止相互影响过深\",\"低成本\",\"安全\",\"功能安全\",\"架构安全\",\"规模\"]},\"304\":{\"h\":\"2. 架构设计原则\"},\"305\":{\"h\":\"合适原则：合适优于业界领先\",\"t\":[\"考虑人员多少\",\"考虑时间成本，罗马不是一天建成的\",\"结合业务设计\"]},\"306\":{\"h\":\"简单原则：简单优于复杂\",\"t\":[\"结构越复杂可用率越低\",\"逻辑越复杂，开发越慢，排查越慢\"]},\"307\":{\"h\":\"演化原则：演化优于一步到位\",\"t\":[\"架构需要随业务的变化而变化\",\"不断迭代，去其糟粕留其精华\"]},\"308\":{\"h\":\"3. 架构设计流程\"},\"309\":{\"h\":\"识别复杂度\",\"t\":[\"列出复杂度问题，根据业务、技术、团队等排出优先级\"]},\"310\":{\"h\":\"设计备选方案\",\"t\":[\"误区\",\"设计出最优秀的方案\",\"只做一个方案\",\"应做 3~5 个方案，且有明显的差异\",\"过于详细\"]},\"311\":{\"h\":\"评估和选择备选方案\",\"t\":[\"360 度环评\",\"质量属性\",\"性能\",\"可用性\",\"成本\",\"项目投入\",\"复杂度\",\"安全性\",\"可扩展性等\",\"若是无法抉择则可添加权重\"]},\"312\":{\"h\":\"详细方案\",\"t\":[\"细化技术细节\",\"选型\",\"参数设置\"]},\"313\":{\"h\":\"4. 存储高性能\"},\"314\":{\"h\":\"关系数据库\",\"t\":[\"读写分离\",\"主从模式\",\"存在的问题\",\"从节点同步主节点数据可能存在延迟，导致读不到。\",\"先读从节点，无数据再读主节点，关键数据可直接读取主节点\",\"分库分表\",\"使用场景\",\"数据量达到千万以上\",\"即使有索引索引也会很慢\",\"文件很大，备份和恢复时间过长\",\"文件过大，丢失数据量大的风险高\",\"业务分表\",\"join 问题\",\"事务问题\",\"成本问题\",\"分表\",\"垂直分表\",\"例如：婚恋网站人物列表只需要有 name,age等属性即可，无需过的属性导致查询速度过慢\",\"水平分表：会引入更多的复杂度\",\"路由\",\"范围路由\",\"hash 路由\",\"配置路由\",\"join\",\"只能多次 join 解决\",\"count\",\"多次 count\",\"记录数表，新增表进行处理\",\"order by\",\"多次 order by 进行聚合\",\"实现方法\",\"程序代码封装\",\"特点\",\"实现简单，可根据业务进行定制\",\"开发工作量大\",\"故障问题不好处理\",\"开源方案\",\"淘宝的 TDDL\",\"中间件封装\",\"特点\",\"支持多种编程语言\",\"支持完整的数据库协议和 SQL 规范，内容丰富导致 bug 可能会较多\",\"所有的数据库操作都变成对中间件的操作，会影响性能\",\"主从切换无感知，有中间件解决\",\"方案\",\"MySQL Proxy\",\"MySQL Router\",\"Atlas\",\"ShardingSphere\",\"实现复杂度\",\"因为分表的 order by 等需要聚合还要识别 SQL 的关键字，所以实现比较困难\"]},\"315\":{\"h\":\"NoSQL\",\"t\":[\"关系数据库的缺点\",\"1.行记录无法存储数据结构\",\"2.关系数据库的 schema 扩展不方便\",\"3.关系数据库大数据情况下 I/O较高\",\"4.关系数据库的文档搜索能力较弱\",\"全文搜索的条件可以随意排列组合，如果通过索引满足则会添加大量的索引\",\"模糊匹配的方式无法满足，只能用 like，like 是全表扫描速度较慢\",\"分类\",\"K-V 存储： Redis\",\"文档数据库： MongoDB\",\"列式数据库：Hbase\",\"全文搜索引擎：Elasticsearch\",\"K-V存储\",\"redis 目前问题\",\"1.不支持完整的 ACID\",\"文档数据库\",\"优势\",\"新增字段简单\",\"历史数据不会出错\",\"可以很容易存储复杂的数据结构\",\"列式数据库\",\"优势\",\"业务同时读取多列效率较高，因为这些列式存储在一起的，一次磁盘读写就能把一行数据的所有列都读取到内存中\",\"可以一次写多个列\",\"全文搜索引擎\",\"原理是倒排序，即内容和文件建立关联关系\"]},\"316\":{\"h\":\"缓存\",\"t\":[\"使用场景\",\"需要复杂的运算之后得到结果，存储系统也无能为力\",\"读多写少，存储系统有心无力\",\"缓存穿透：缓存中没有数据导致去查询数据库\",\"存储数据不存在，可通过设置默认值解决\",\"缓存数据生成耗费大量时间，\",\"缓存雪崩：缓存失效后导致系统性能的下降\",\"更新锁，只能一个线程去更新\",\"后台更新，缓存本身设置为永久有效，定时任务或消息通知去更新缓存数据\",\"缓存热点：热点数据进行缓存\"]},\"317\":{\"h\":\"5. 计算高性能\"},\"318\":{\"h\":\"单服务器高性能\",\"t\":[\"关键之一是网络编程模型\",\"服务器如何管理连接\",\"服务器如何处理请求\",\"解决方向\",\"I/O 模型\",\"进程模型\",\"PPC（Process per Connection ）\",\"流程\",\"1.父进程接受连接\",\"2.父进程 fork 子进程\",\"3.子进程处理请求的读写\",\"4.子进程关闭连接\",\"弊端\",\"fork 代价过高\",\"父子进程通信复杂\",\"进程数量增大后多操作系统压力过大\",\"prefork\",\"进行连接时才 fork 会让用户感觉卡段，所以出现了预fork优化流程，但是也会出现“惊群”问题，即只会有一个子进程去连接，但是会唤起所有的子进程去尝试，浪费线程上下文切换\",\"也存在父子线程通信复杂问题；进程数量增大后导致操作系统压力过大\",\"TPC(Thread per Connection)\",\"流程\",\"1.父进程接受连接\",\"2.父进程创建子线程\",\"3.子线程处理请求的读写\",\"4.子线程关闭连接\",\"虽然解决了线程通信复杂和fork 代价过高问题，但是也引入的新的问题\",\"高并发情况下依然存在性能问题\",\"虽无需进程间通信了，但线程间的互斥和共享又引入了新的复杂度，可能一不小心出现死锁问题\",\"可能出现某个线程异常导致整个进程的结束\",\"还是存在 CPU 线程调度和切换代价问题\",\"PreThread\",\"流程\",\"1.主线程accept，然后将连接交给某个线程处理\",\"子线程都尝试去accept，最终只有一个子线程accept成功\",\"Reactor\",\"要解决的问题\",\"为了解决PPC多次创建进程问题，可以通过进行池化，实现资源的节约，但是引入后出现了新的问题\",\"进程如何高效的处理多个连接\",\"一个连接一个进程时可以通过阻塞进行读取，但是一个进程连接多个连接时就不能阻塞到某个进程上，解决这个问题的方法就是将read改为非阻塞的，进行不断的轮询多个连接，但是解决方式并不优雅，轮询也是小号CPU的，如果一个进程的连接数过多，轮询的效率也不高，为了解决这个问题想到了只有连接上有数据的时候进程采取处理，这就是I/O多路复用技术的来源\",\"两个关键实现点\",\"当多条连接共用一个阻塞对象后，进程只需要在一个阻塞对象上等待，而无需再轮询所有的连接\",\"当某条连接有新的数据可以处理时，操作系统会通知进程，进程从阻塞状态返回，开始进行业务处理\",\"模式的核心\",\"reactor\",\"负责监听和分配时间\",\"处理资源线程池\",\"负责处理时间\",\"实现方案\",\"单Reactor 单进程/单线程\",\"1.Reactor对象通过select监控连接事件，收到事件通知后通过dispatch进行分发\",\"2.如果是连接建立的事件，则由Acceptor处理，Acceptor通过accept接受连接，并创建一个Handler来处理连接后续的各种事件\",\"3.如果不是连接建立事件，则Reactor会调用连接对象的Handler（第2步中创建的hadnler）进行响应\",\"4.Handler会完成read-->业务处理-->send的完整业务流程\",\"优点：简单，没有进程间通信，没有进程竞争，全部都在同一个进程中完成\",\"缺点\",\"只有一个进程，无法发挥多核CPU的性能\",\"只能部署多个系统来利用多核CPU，这样会带来运维复杂度\",\"handler在处理某个连接的业务时，整个进程无法处理其他连接的事件，很容易导致性能瓶颈\",\"适用场景\",\"业务处理速度非常快的，例如： Redis\",\"单Reactor 多线程\",\"1.主线程中，Reactor对象通过select监听连接事件，收到事件后通过dispatch进行分发\",\"多Reactor 多进程/线程\",\"Proactor\"]},\"319\":{\"h\":\"集群高性能\",\"t\":[\"负载均衡器的分类\",\"DNS负载均衡：不同地区的用户访问同一个域名返回不同的ip\",\"优点\",\"简单、成本低\",\"就近访问，提升访问速度\",\"缺点\",\"更新不及时\",\"扩展性差\",\"分配策略比较简单\",\"硬件负载均衡：F5和A10\",\"优点\",\"功能强大\",\"性能强大\",\"稳定性高\",\"支持安全防护\",\"缺点\",\"价格昂贵\",\"扩展能力差\",\"软件负载均衡\",\"分类\",\"nginx：7层负载均衡\",\"LVS：是linux内核的4层负载均衡\",\"优点\",\"简单\",\"便宜\",\"灵活\",\"缺点\",\"性能一般\",\"功能没有硬件负载均衡那么强大\",\"一般不具备防火墙和防DDOS攻击等安全功能\",\"负载均衡器架构\",\"DNS负载均衡实现地理级别的负载均衡\",\"F5实现集群级别的负载均衡\",\"软件负载均衡实现机器级别的负载均衡\",\"负载均衡器算法\",\"任务平分类：可以决定平均分配到各个服务器上，也可以是按照比例或者权重\",\"负载均衡类：根据服务器的负载来进行分配，这里的负载不一定是CPU负载，而是系统当前压力，可以是CPU负载来衡量，也可以是连接数、I/O使用率、网卡吞吐量等来衡量系统的压力\",\"性能最优类：根据服务器的响应时间来进行任务分配，优先分配给响应最快的服务器\",\"Hash类：根据某些信息进行Hash运算，分配到指定服务器上。常见的有源地址Hash、目标地址Hash、session id hash、用户id Hash等\"]},\"320\":{\"h\":\"6. CAP\"},\"321\":{\"h\":\"CAP 理论\",\"t\":[\"一致性 Consistency\",\"对某个指定客户端来说，读操作保证能够返回最新的写操作结果\",\"可用性 Availability\",\"非故障的节点在合理的时间内返回合理的响应（不是错误和超时的响应）\",\"分区容错性Partition Tolerance\",\"当出现网络分区后，系统能够继续“履行职责”\"]},\"322\":{\"h\":\"CAP 应用\",\"t\":[\"分布式环境下 P 是必须得，否则当出现网络分区时，C 和 A 就会冲突\",\"CP\",\"当 N1 节点数据在同步到 N2 节点时，复制通道出现问题，导致未复制到N2，为了保证 C，此时系统访问 N2 的时候会提示不可用（违反了 A）\",\"AP\",\"当 N1 节点数据在同步到 N2 节点时，复制通道出现问题，导致未复制到N2，为了保证 A，此时系统访问 N2 可以正常使用，但是会导致数据不一致（违反了 C）\"]},\"323\":{\"h\":\"CAP 细节\",\"t\":[\"CAP 关注的粒度是数据而不是系统；在整个系统中可以某些数据是 CP，某些数据是 AP\",\"CAP 是忽略网络延迟的\",\"正常情况下不存在CP 和 AP 的选择，可以同时满足 CA\",\"CA\",\"可通过数据库的同步，虽然有延迟，但是某些实时性不是很高的较适合\",\"可通过 MQ 实现最终数据一致性\",\"放弃并不等于什么都不做，需要为分区恢复后做准备\"]},\"324\":{\"h\":\"ACID、BASE\",\"t\":[\"ACID：数据库完整性理论\",\"原子性（Atomicity）\",\"一个事务中要么全部完成，要么全部失败，不会结束在中间状态\",\"一致性（Consistency）\",\"在事务开始前和结束后，数据库的完整性没有被破坏\",\"隔离性（Islation）\",\"数据库支持多个并发事务同时对数据读取和修改的能力，隔离性可以防止多个事务并 发执行时由于交叉执行而导致数据的不一致。\",\"隔离级别\",\"读未提交（read uncommitted）\",\"读提交(read committed)\",\"可重复度（read repeatable）\",\"串行化（Serializable）\",\"持久性（Durability）\",\"事务处理结束后，对数据的处理是永久的，即使系统故障也不会丢失\",\"BASE：即使无法做到强一致性，也要做到最终一致性\",\"基本可用（base available）\",\"分布式系统出现故障时，允许系统损失部分可用性，但是保证核心系统的可用性\",\"软状态（Soft state）\",\"允许系统出现中间状态，而该中间状态不影响系统整体的可用性\",\"最终一致性（Eventual Consistency）\",\"系统经过一段时间后所有的副本数据达到一致性\"]},\"325\":{\"h\":\"CAP 和 BASE\",\"t\":[\"CP\",\"CAP 理论是忽略网络延迟的，但是现实中肯定会存在延迟，这和 BASE 的最终一致性不谋而合\",\"AP\",\"牺牲一致性是指系统出现分区时，当分区问题结束时也要完成数据的一致性。 BASE 理论其实是 AP的延伸\"]},\"326\":{\"h\":\"7. FMEA\"},\"327\":{\"h\":\"FMEA 介绍\",\"t\":[\"FMEA (Failure mode and effects analysis ，故障模式与影响分析）又称为失效模式与后果分 析、失效模式与效应分析、故障模式与后果分析等\"]},\"328\":{\"h\":\"FMEA 方法\",\"t\":[\"具体方法\",\"给出系统的初始架构图\",\"2.假设系统中某个部件出现故障\",\"3.分析此故障对系统的影响\",\"4.根据结果分析架构是否需要优化\",\"分析表格包含的属性\",\"功能点：是从用户角度思考，而非技术角度\",\"故障模式：要用可量化的指标，例如：数据库响应 3s\",\"故障影响：出现故障时该功能点会受到什么影响，无影响，部分不可用，全部可用等，尽量给出可量化指标\",\"严重程度：尽量给出可量化指标\",\"故障原因：主要原因，可以作为问题预演\",\"故障概率：可从多个方面思考。如硬件、开源系统、自研系统\",\"风险程度\",\"已有措施：如检测告警、容错、自恢复\",\"规避措施\",\"解决措施\",\"后续规划\"]},\"329\":{\"h\":\"FMEA 实战\"},\"330\":{\"h\":\"8. 存储高可用\"},\"331\":{\"h\":\"问题：主要是副本冗余实现高可用\",\"t\":[\"数据如何复制\",\"各个节点的职责是什么\",\"如何应对复制延迟\",\"如何应对复制中断\"]},\"332\":{\"h\":\"主备复制\",\"t\":[\"详细设计\",\"1.主机存储数据，通过复制渠道复制给备机\",\"2.正常情况下，所有的请求直接发给主机，备机只做数据的备份不提供任何的读写\",\"3.主机出现故障的情况下，所有的请求不会发送到备机，整个系统处于中断状态，不可读写数据，但数据并没有全部丢失，备机还存在数据备份\",\"4.主机恢复后，读写继续访问主机，主机数据继续复制给备机\",\"5.如果主机不可修复，可通过人工备机升为主机，但是为了保持主备，需要新增机器\",\"6.主机不可恢复情况下，可能存在数据只到主机还未复制到备机的情况，此种数据就需要人工修复，业务也需要考虑改情况\",\"7.复制可能存在延迟，但是备机不提服务，所以不会影响系统，但是若存在大量数据未同步，突然主机不可修复，会损失大量数据，所以不可掉以轻心，需要添加监控，若存在延迟过大需要人工介入\",\"优点\",\"客户端无感知，只需要回复后进行重新连接\",\"只需要数据同步，不需要进行机器的状态判断和倒换\",\"缺点\",\"备机只提供备份，不提供读写，造成成本浪费\",\"故障后需要人工干预，无法自动恢复\"]},\"333\":{\"h\":\"主从复制\",\"t\":[\"详细设计\",\"1.主机存储数据，通过复制渠道复制给备机\",\"2.写操作发给主机，读操作则根据业务进行发给主机还是从机\",\"3.主机故障的情况下，客户端不可写入数据，读操作可以发给从机是不影响读数据。适用于读操作较多的场景如新闻网站\",\"4.如果主机恢复后，写操作还继续访问主机，主机数据绩溪复制到从机\",\"5.如果主机不可修复，可通过人工从机升为主机，为了保持主从需要添加新主机\",\"6.主机不可恢复情况下，可能存在数据只到主机还未复制到备机的情况，此种数据就需要人工修复，业务也需要考虑改情况\",\"7.主从之间可能存在同步延迟，导致读取主从数据不一致问题，若是需要强一致性，则需要直接读取主机\",\"优点\",\"主机出现故障时读操作不会受到影响\",\"从机提供读，发挥了硬件的性能\",\"缺点\",\"客户端需要感知主从，不同的命令发送到不同的机器\"]},\"334\":{\"h\":\"主备倒换和主从倒换\",\"t\":[\"主从/主备的共性问题\",\"主机故障不能写操作\",\"如果主机无法恢复则需要人工参与\",\"考虑的关键点\",\"状态判断\",\"状态传递渠道：相互连接还是三方仲裁\",\"状态检测的内容：机器能够正常提供服务\",\"倒换决策\",\"倒换时机：什么时候倒换，是主机停机 3s 还是其他参数\",\"倒换策略：主机恢复后还是主机还是恢复后变为从/备机\",\"自动程度：全自动还是半自动（人工确认）\",\"数据冲突\",\"同步中主机出现故障导致主机和从/备机数据不一致问题怎么处理\",\"常见架构\",\"互联式：主备/主从相互连接\",\"问题：需要主、备、客户端左右做修改；连接通道出现问题就会出现多主或多从问题，若是多种连接通道就会浪费资源\",\"中介式：引入中介方，MongDB 就是这种模式\",\"优点\",\"实现简单，只需要中介读取主从节点，然后根据状态进行确定各方是否主备情况\",\"缺点\",\"为了保证中介方高可用就会引入新的问题\",\"开源中介 ZooKeeper\",\"模拟式：从节点模拟客户端访问主节点\",\"优点\",\"实现更简单省去连接通道和状态管理\",\"缺点\",\"基于有限状态做决定，可能出现偏差\"]},\"335\":{\"h\":\"主主复制\",\"t\":[\"详细设计\",\"1.两台主机都存储数据，通过复制通道将数据复制到另外一台主机\",\"2.正常情况下，客户端可以将读写操作发送给任意一台主机\",\"3.一台主机故障情况下，客户端只需要把读写操作发送给另一个主机\",\"4.如果故障主机恢复，客户端继续访问两台主机，两台主机之间互相复制对方数据\",\"5.如果故障主机不能恢复则需要人工添加一台新的主机\",\"6.存在某个主机写入数据后还未同步至另一台主机，该主机崩溃导致的书记丢失，需要考虑此风险\",\"7.存在同步延迟，可能写入了A，在B上读取不到刚刚写入的数据\",\"优点\",\"两台都是主机，不存在倒换概念\",\"客户端无需分辨不同角色的主机，随便将读写操作发送给哪台主机都行\",\"缺点\",\"部分数据不能双向复制，例如库存，A-1 和B-2双向复制会导致数据错误\"]},\"336\":{\"h\":\"数据集群\",\"t\":[\"集中集群：每个节点的数据都是完整的一份\",\"需要考虑的\",\"主机如何将数据复制给备机\",\"备机如何检测主机状态\",\"主机故障后，如何决定新的主机\",\"分散集群：每台服务器都会负责存储一部分数据，为了提升硬件利用率，每台服务器又会备份一部分数据\",\"需要考虑的\",\"均衡性\",\"容错性\",\"可伸缩性\",\"分布式事务算法\",\"2PC：两阶段提交，分别是commit请求阶段和commit提交阶段\",\"成立的假设\",\"1.分布式系统中，存在一个节点作为协调者，其他节点作为参与者，且节点之间可以进行网络通信\",\"所有节点都采用预写式日志，且日志被写入后即保持在可靠的存储设备上，即使节点损坏，也不会导致日志数据的消失\",\"3.所有节点不会永久性损坏，即使损坏仍然可以恢复\",\"基本说明\",\"1.协调者想所有的参会者发送QUERY TO COMMIT 消息，询问是否可以执行提交事务，并开始等待各参与者的响应\",\"2.参与者执行询问发起为止的所有事务操作，并将Undo信息和Redo信息写入日志，返回Yes消息给协调者；如果参与者执行失败，则返回No消息给协调者\",\"成功\",\"1.协调者向所有的参与者发出COMMIT的请求\",\"2.参与者完成COMMIT操作，并释放在整个事务期间占用的资源\",\"3.参与者向协调者发送ACK消息\",\"4.协调者接收到所有参与者反馈的ACK消息后，完成事务\",\"失败\",\"1.协调者向参与者发出ROLLBACK的请求\",\"2.参与者利用之前写入的Undo信息执行回滚，并释放在整个事务期间占用的资源\",\"3.参与者想向协调者发送ACK信息\",\"4.协调者接收到所有参与者反馈的ACK消息后，完成事务\",\"优点\",\"简单\",\"缺点\",\"同步阻塞，性能存在明显问题，难以支持高并发的应用场景\",\"状态不一致，如果第二段提交的时候参与者未接收到消息就会出现超时回滚的情况，出现状态不一致\",\"单点故障，协调者出现问题参与者就会一直阻塞下去，整个集群就无法提供服务\",\"3PC：三阶段提交，分别是提交判断阶段（协调者询问参与者是否可以提交事务），准备提交阶段（协调者向参与者发送准备提交的信息），提交执行阶段（协调者向参与者发送提交信息），只要到了第三阶段，如果参与者未接收到提交数据，也会变成提交\",\"分布式一致性算法\",\"Paxos算法\",\"Raft算法\",\"ZAB算法\"]},\"337\":{\"h\":\"数据分区\",\"t\":[\"数据量，数据量越大分区规则越复杂\",\"分区规则\",\"复制规则\",\"集中式：数据统一复制到总的备份中心\",\"互备式，节点之间相互备份\",\"优缺点\",\"设计比较复杂\",\"扩展麻烦\",\"成本低，可以直接利用已有的设备\",\"独立式：每个节点有自己的备份节点\",\"设计简单，各分区互不影响\",\"扩展容器，新增分区只需要搭建自己的备份中心即可\",\"成本高\"]},\"338\":{\"h\":\"9. 计算高可用\"},\"339\":{\"h\":\"设计关键点\",\"t\":[\"哪些服务器可以执行任务\",\"任务如何重新执行\"]},\"340\":{\"h\":\"主备\",\"t\":[\"详细设计\",\"主机执行所有的计算任务\",\"2.当主机故障时，任务分配其不会自动将任务发送给备机，此时系统不可用状态\",\"3.如果主机能够恢复，任务分配器继续将任务发送给主机\",\"4.如果主机不能恢复，则人工将备机升级为主机，需要添加新主机做备机\",\"细分\",\"冷备\",\"备机启动状态，但是未启动业务系统，当备机升级为主机时，启动业务系统\",\"温备\",\"业务系统已经启动，但是不对外服务，当备机升级为主机时，让它正式提供服务\"]},\"341\":{\"h\":\"主从\",\"t\":[\"详细设计\",\"一般情况下，主机执行部分任务，备机执行部分任务\",\"当主机出现故障时，任务分配器不会自动的将原来发给主机的任务发给从机，而是继续发送给主机，不管这些任务执行是否成功\",\"3.如果主机能够恢复，任务分配器继续将任务发送给主机\",\"4.如果主机不能恢复，则人工把原来的从机升为主机，然后添加新的主机为从机\",\"优点\",\"主从架构的从机也执行任务，发挥了硬件的性能\",\"缺点\",\"主从架构需要对任务进行分类，任务分配器会更复杂一些\"]},\"342\":{\"h\":\"根据节点角色分类\",\"t\":[\"解决的问题\",\"主从或主备，人工效率低，容器出错，不能及时处理故障\",\"对称集群(负载均衡集群)：所有节点的角色一致\",\"详细设计\",\"1.正常情况下，任务采取某种策略（轮询、权重、资源）等方法，将任务分配到集群中的不同服务器\",\"2.当某台服务器出现故障，任务不再将任务分配给该机器，转而分配给其他的服务器\",\"3.当故障的服务器恢复后，任务将再次分配给该机器\",\"非对称集群：分角色master-slave\",\"详细设计\",\"集群会通过某种方式区分服务器的不同角色，例如 Paxos 算法选举或者简单的 id 最小的为 master\",\"2.任务分配器将不同的任务分配给不同的角色\",\"复杂度的体现\",\"1.任务分配的策略更加复杂\",\"2.角色分配更加复杂\"]},\"343\":{\"h\":\"10. 业务高可用\"},\"344\":{\"h\":\"异地多活\",\"t\":[\"两个标准\",\"正常情况下用户访问不管哪一地点的业务系统，都能够得到正确的业务服务\",\"2.某地异常的情况下， 用户访问到另一地点的业务系统，也能够得到正确的业务服务\",\"两个代价\",\"1.系统的复杂度会发生质的变化\",\"2.成本会上升\",\"架构\",\"同城异区：相比设计和实现的降低了复杂度和成本，但是同城天灾时出现都不可用的概率增大\",\"跨城异地：相比同城天灾影响的概率降低，但是由于存在网络延迟等问题，相关成本大大增加\",\"跨国异地：成本最大\",\"使用场景\",\"为不同的地区提供服务\",\"只读类做多活\",\"技巧\",\"同城异区：网络延迟较低可以不用考虑设计\",\"跨城异地：主要网络延迟导致的数据不一致问题，架构是需要考虑\",\"跨国异地：为不同的地区提供服务和只读所以对系统的设计并不多\",\"技巧一：保证核心业务的异地多活\",\"技巧二：核心数据最终一致性\",\"减少异地多活的距离，搭建高速网络\",\"尽量减少数据同步，只同步核心数据\",\"保证数据最终一致性，不保证实时一致性\",\"技巧三：采用多种数据同步手段\",\"消息队列方式\",\"二次读取\",\"存储系统同步方式\",\"回源读取方式：优先访问上次请求的主机\",\"重新生成数据方式\",\"技巧四：只保证绝大部分用户的异地多活\",\"设计步骤\",\"1.业务分级\",\"访问量大的业务\",\"核心业务\",\"产生大量收入的业务\",\"2.数据分类\",\"数据量\",\"唯一性\",\"实时性\",\"可丢失性\",\"可恢复性\",\"3.数据同步\",\"存储系统同步方式\",\"消息队列方式\",\"重新生成数据方式\",\"4.异常处理\",\"目的\",\"避免少量数据导致整体业务不可用\",\"问题恢复后，对异常数据进行修复\",\"对用户安抚，进行补偿\",\"措施\",\"多通道同步\",\"一般采用两个通道，再多成本较高\",\"通道尽量隔离，如使用同一个网络，若出现网络问题则都不可用\",\"需要数据覆盖，无论走哪一通道最后结果一致\",\"同步和访问结合\",\"接口访问和数据同步不要走同一个网络\",\"数据有路由规则，可以通过数据确定需要访问哪个去补偿\",\"优先本地数据，其次远程调用，可以节省大量的调用\",\"日志记录\",\"服务器上保存日志\",\"本地独立系统保存日志\",\"日志异地保存\",\"用户补偿\"]},\"345\":{\"h\":\"接口级的故障应对方案\",\"t\":[\"降级：减少功能\",\"系统后门降级：通过参数设置变量控制降级\",\"存在安全问题\",\"主机多的情况需要操作多次，效率低\",\"独立降级系统：解决系统后门降级的问题，把所有的降级抽取为一个服务进行管理\",\"熔断：外部依赖的系统存在故障时，要熔断防止影响该系统\",\"限流：防止用户访问过于频繁，通过限流降低短时间内访问次数\",\"基于请求限流\",\"基于资源限流\",\"排队：如双十一秒杀，通过 MQ 排队购买\"]},\"346\":{\"h\":\"11. 可扩展模式\"},\"347\":{\"h\":\"概述\",\"t\":[\"避免添加或修改功能时改动内容过多\"]},\"348\":{\"h\":\"基本思想\",\"t\":[\"拆\",\"思路\",\"面向流程拆分\",\"例如:TCP/IP的流程就是应用层>传输层>网络层>物理>数据链路层\",\"面向服务拆分\",\"提供 http 服务、ftp 服务\",\"面向功能拆分\",\"例如：http 的 get，ftp 的文件上下载\"]},\"349\":{\"h\":\"方式\",\"t\":[\"面向流程\",\"一般只需要更改一层，很少会存在修改多层\",\"分层架构\",\"面向服务\",\"只需要修改对应的服务，无需修改所有的服务\",\"SOA架构、微服务架构\",\"面向功能\",\"只需要修改对应的功能，不需要修改所有的功能\",\"微内核架构\"]},\"350\":{\"h\":\"12. 分层架构\"},\"351\":{\"h\":\"类型\",\"t\":[\"B/S和 C/S 架构\",\"MVC 和 MVP 架构\",\"逻辑分层架构\"]},\"352\":{\"h\":\"详解\",\"t\":[\"隔离关注点\",\"只能分层依赖，不可跨层，否则容易出现混乱\"]},\"353\":{\"h\":\"13. SOA 架构\"},\"354\":{\"h\":\"历史\",\"t\":[\"企业各部门有独立的系统\",\"复杂度逐渐升高，需要多个 IT 系统合作完成流程\",\"各系统的技术团队不一样，无法统一重构\"]},\"355\":{\"h\":\"详解\",\"t\":[\"三个概念\",\"服务\",\"ESB\",\"松耦合\"]},\"356\":{\"h\":\"14. 微服务\"},\"357\":{\"h\":\"微服务和SOA的关系\",\"t\":[\"是两个不同的架构设计理念，只是“服务”上有交集\",\"微服务粒度更细\",\"服务通信更轻量\",\"SOA 多是兼容系统，微服务则是快速交付\",\"SOA 适用于庞大的笨重的项目，微服务更适用轻量的互联网项目\"]},\"358\":{\"h\":\"微服务的陷阱\",\"t\":[\"服务划分过细，服务关系过于复杂\",\"服务数量过多，团队效率下降\",\"调用链太长，性能下降\",\"调用链太长，问题难以定位\",\"没有自动化支持，无法快速交付\",\"没有微服务治理，服务数量多后管理混乱\"]},\"359\":{\"h\":\"最佳实践\",\"t\":[\"服务粒度\",\"开发阶段，三个人管理一个服务\",\"稳定阶段，可以一个人管理多个\",\"拆分方法\",\"基于业务拆分\",\"基于可扩展拆分：成熟和改动的不大的分为稳定服务，经常变动和迭代的分为变动服务\",\"基于可靠性拆分：\",\"避免非核心业务影响核心业务\",\"核心服务高可用更方便\",\"降低高可用成本\",\"基于性能拆分\",\"性能要求高的单独拆分方便提高性能\",\"基础设施\",\"服务发现\",\"自理式\",\"代理式\",\"配置中心\",\"接口框架\",\"API 网关\",\"服务路由\",\"服务容错\",\"请求重试\",\"流控\",\"服务隔离\",\"服务监控\",\"服务跟踪\",\"服务安全\",\"自动化测试\",\"自动化部署\"]},\"360\":{\"h\":\"15. 微内核架构（插件化架构）\"},\"361\":{\"h\":\"设计的关键点\",\"t\":[\"插件管理\",\"插件连接\",\"插件通信\"]},\"362\":{\"h\":\"OSGI架构\"},\"363\":{\"h\":\"规则引擎架构\",\"t\":[\"优点\",\"可扩展：业务逻辑和业务系统分离\",\"易理解：规则语言接近自然语言\",\"高效性：提供 UI 可以高效操作\",\"基本架构\",\"开发人员将业务功能提炼为多个规则，配置到规则引擎中\",\"业务人员根据业务需要，排列组合规则组成流程，保存到业务系统中\",\"规则引擎实现执行业务流程，实现业务功能\",\"如何设计的\",\"插件管理\",\"配置的规则就是插件，引擎就是内核，引擎可以执行规则，规则存储在规则库中\",\"插件连接\",\"规则引擎的语言\",\"插件通信\",\"通过数据流或事件流\",\"技术\",\"Drools\"]},\"364\":{\"h\":\"16. 消息队列设计实战\"},\"365\":{\"h\":\"17. 互联网架构演进\"},\"366\":{\"h\":\"产品类：技术创新推进业务发展，例如手机技术\"},\"367\":{\"h\":\"服务类：业务发展推送技术的发展\"},\"368\":{\"h\":\"18. 互联网架构模版\"},\"369\":{\"h\":\"总体结构\"},\"370\":{\"h\":\"存储层技术\",\"t\":[\"SQL\",\"NoSQL\",\"小文件\",\"大文件\"]},\"371\":{\"h\":\"开发层技术\",\"t\":[\"开发框架\",\"web服务器\",\"容器\"]},\"372\":{\"h\":\"服务层技术\",\"t\":[\"配置中心\",\"服务中心\",\"消息队列\"]},\"373\":{\"h\":\"网络层技术\",\"t\":[\"负载均衡\",\"CDN\",\"多机房\",\"多中心\"]},\"374\":{\"h\":\"用户层技术\",\"t\":[\"用户管理\",\"消息推送\",\"存储云与图片云\"]},\"375\":{\"h\":\"业务层技术\"},\"376\":{\"h\":\"平台技术\",\"t\":[\"运维平台\",\"测试平台\",\"数据平台\",\"管理平台\"]},\"377\":{\"h\":\"19. 架构重构\"},\"378\":{\"h\":\"原因\",\"t\":[\"业务已经上线，不能停下来\",\"关联方众多，牵一发动全身\",\"旧架构的约束\"]},\"379\":{\"h\":\"目标\",\"t\":[\"后台系统重构-解决不合理的耦合\",\"游戏接入系统重构-解决全局单点的可用性问题\",\"解决大系统带来的开发效率问题\"]},\"380\":{\"h\":\"阶段\",\"t\":[\"1.救火\",\"机器扩容\",\"业务降级\",\"立体化监控\",\"2.组件化\",\"缓存组件化\",\"队列组件化\",\"接入服务中心化\",\"3.解耦\",\"核心和非核心业务分离\",\"业务中台\",\"公共功能组件化\"]},\"381\":{\"h\":\"流程\",\"t\":[\"1.划分优先级\",\"2.问题分类\",\"3.先易后难\"]},\"382\":{\"h\":\"20. 开源系统\"},\"383\":{\"h\":\"《情绪龙头战法》\"},\"384\":{\"h\":\"1.环境（股市）\"},\"385\":{\"h\":\"股市的由来\",\"t\":[\"16世纪，股市作为筹集资金、分散风险的一种手段而进入远航贸易领域\",\"17世纪后，西方爆发资产阶级革命和工业革命，股票逐渐进入金融和工业领域，并日益完善\"]},\"386\":{\"h\":\"股市的本质\",\"t\":[\"股市是服务经济建设的融资场所\",\"股市是政策的晴雨表\",\"股市是零和博弈的战场\",\"股市是天然具有波动性的大池塘\",\"股市是人类固有弱点的孵化器 \",\"趋易避难心理\",\"人无知时最自信\",\"赌徒心理\",\"股市是复杂、随机、混沌的世界\",\"资金推动是股价上涨的直接原因 \",\"利好消息刺激，市场合力拉升股价至涨停\",\"主力资金提前潜伏吸筹，然后拉升股价至涨停\"]},\"387\":{\"h\":\"股市生存的重要思维\",\"t\":[\"概率思维\",\"系统思维\",\"极简思维 \",\"股价总是沿着对主力有利的方向运行\",\"主力操盘也需顺应市场变化，但拉升总要借力题材\",\"市场合力中，总有一个主要的力，我们也把这个主要的力简称为主力。所以做短线还是要跟随主力。\",\"只有称为“龙头股”的个股，才有更多的机会吸引全市场的目光。\"]},\"388\":{\"h\":\"股市的主要规律\",\"t\":[\"情绪传递 \",\"情绪传递和从众心理在股市中的反映 \",\"一方面体现为整个市场相互之间的联动影响，比如高位人气股对全市场的影响、题材板块之间的影响。\",\"另一方面，还体现在同一板块中，高位板和低位板之间的相互影响，以及同一属性板块中的相同身位个股之间的相互联动。\",\"强者恒强\",\"物极必反\"]},\"389\":{\"h\":\"2.对手（各阶层）\"},\"390\":{\"h\":\"1.政府（监管层）\",\"t\":[\"股市是国家设立的，其目的是服务于国民经济建设。\",\"股民应该把政府看作是好领导和好朋友，“炒股要听党的话”\",\"特别是政策方面，那些手握重金、能够发动趋势的大机构对党的政策从来认真听取。作为跟随者的短线选手，当然更要听，在A股，只要听党的话，结果就是很有钱\"]},\"391\":{\"h\":\"2.中央汇金公司、全国社保基金及保险基金\",\"t\":[\"汇金公司的出手，是市场稳定的重要条件，市场底部的可能性大大增加，是两市无可争议的市场风向标。\",\"社保基金对于政策的把握能力特别强，是股市的“超级风向标”，通常社保基金入市的区域是一个低位区域，历史证明，社保基金几无失手，逃顶抄底能力特别强。因此，在某种时刻，对市场信心的恢复有很大的正面作用。\",\"保险资金和社保基金类似，规模较大，偏向中长期，总是能够把握股市大势。既然号称保险资金，顾名思义，自然是比较保险啦。和社保基金一样，可以说是算无遗策，几乎不可能成为在高位接最后一棒的人。\"]},\"392\":{\"h\":\"3.产业资本\",\"t\":[\"对于上市公司来讲，本身就有筹码，不需要建仓吸筹。在高位配股或增发、高位减持对于上市公司股东有着天然的吸引力，上市公司对自身情况了如指掌。其他二级市场主力在运作股票时缺的就是上市公司相关信息的配合。于是乎，某些二级市场其他主力和某些上市公司，总有说不尽道不明的暧昧。\"]},\"393\":{\"h\":\"4.公募基金、券商集合理财等专业机构\",\"t\":[\"公募基金的主流选股思路，往往是行业龙头股和低价蓝筹股。行业龙头股持续性强，往往行稳致远，\",\"券商集合理财是另一类主力。券商集合理财指的是证券公司针对高端客户开发的理财服务产品。和公募基金一样，都是集中投资者的资金进行专家理财，由专业的资产管理人管理，由独立的托管银行进行托管。但与公募不同的是，券商集合理财不能公开宣传。但封闭期较长，而避免了非理性赎回所引起的非理性操作。此外，券商集合理财产品的发起人和管理人是证券公司，其收益除了来自管理费用，还有业绩分成。而公募基金管理人的收益来源只是管理费用。\"]},\"394\":{\"h\":\"5.私募及游资\",\"t\":[\"私募基金只有在业绩为正时才有收益，一般按业绩利润20%分配。私募基金的目标自然是追求超额收益\",\"绝大多数私募基金在投资风格、投资目标与游资高度近似，即都是从事“题材投机”，是短线选手学习研究的重点对象。所以我们把私募基金和游资放在一起。相较中小散户而言，他们很像中国古代北方的游牧民族，身形彪悍，行动敏捷，骁勇善战。\",\"研究的内容包括他们的炒作风格、炒作喜好、进出场时间、仓位管理、纪律管理等方面。研究几个厉害的席位，再研究数十只短线爆发的牛股，能让我们的水平取得飞速的突破。\"]},\"395\":{\"h\":\"6. 一切无组织、无纪律、无战斗力的资金\",\"t\":[\"没有组织纪律，缺乏战略战术，股票交易冲动随意，毫无章法，因此在博弈中处于弱势地位，总是被各个击破，摆脱不了被猎杀的命运\",\"1.关于散户炒股的观点 \",\"咱们身边所有和理财有关的，在我看来都是富人对穷人的二次掠夺\",\"普通人请千万远离股市，因为你不可能赚到钱，股市是一个零和游戏，总收益+总损失=0，必然是少数人赚多数人的钱\",\"世界上大部分事情，都是头部的参与者才能赚大钱，城市里赚钱的小店，要么有领先众人的独门手艺，要么异常的勤奋、热情。出色的运动员，要么有顽强的天赋，要么有绝对的纪律\",\"有的散户亏钱，是因为频繁交易，其实是给券商支付大量佣金，给政府交税而已。太多的人期望高回报。\",\"粗略地讲，股市里，就是主力机构和中小散户的博弈，很显然，中小散户是处于弱势的一方。\",\"2.散户亏钱原因分析及出路 \",\"散户行为 \",\"涨了高兴，但只要一回调，立即卖出，赚取蝇头小利。\",\"被套以后，一直跌，受不了割肉。有拿得住的，一旦快解套立马就跑。\",\"天天看消息、选股、交易，不放过任何机会\",\"患得患失。总是担心，不买就涨，不卖会跌\",\"急躁，天天盯着一只不涨的票，心理极限一般不超过2周\",\"资金量不大，买的股票不少。账户里多数是绿油油的套牢盘\",\"主力行为 \",\"主力操作某只股票，必须分析有没有大家认可的主题或题材。\",\"主力资金一般分为建仓资金、拉升资金、预备资金，跟打仗似的有备而来\",\"主力懂得借势而为。通常表现为：逆势建仓，借势洗盘，顺势拉升\",\"主力拉升方式各有不同，但针对散户心理，一般拉到20%左右，就会洗盘。\",\"主力耐心超级好。为了等待时机或洗盘需要，可以“装死”数月之久\",\"优秀的游资私募类短线主力更是谙熟“群体心理”，擅长“闪电战”\",\"输赢的关键在棋士如何运筹帷幄\",\"出路 \",\"成为被猎杀的对象\",\"放弃炒股\",\"晋级成为精明散户\",\"借力专业机构\",\"盈利的模式主要有三种 \",\"价值投资\",\"价值投机 \",\"价值投机效率低些，但兼顾了安全，风险较小\",\"超短中的龙头战法 \",\"龙头战法效率最高，而难度也最大\"]},\"396\":{\"h\":\"7. 精明的散户\"},\"397\":{\"h\":\"3.自我提升\"},\"398\":{\"h\":\"5.则股\",\"t\":[\"题材 \",\"题材是股市的第一生产力 \",\"常见的题材还有：两会题材，人民币升值，工业互联网，人工智能，无人驾驶，5G，环保，国防军工，上海自贸，新能源车，生物医药，物联网，业绩增长，高送转，等等。我们生活在一个前所未有的新时代，新时代就会有新题材。2019年以来，产生了柔性屏、大金融、超高清视频、泛在电力物联网、数字孪生、一带一路、氢能源、工业大麻、业绩预增、集成电路、自主可控、稀土反制、垃圾分类、深圳先行示范区、数字货币、区块链等众多题材\",\"题材的分类 \",\"国家政策类\",\"技术革新、创新类\",\"重大公共事件类\",\"资源价格类题材\",\"资产重组类题材\",\"高送转类题材\",\"业绩增长\",\"题材与热点 \",\"题材不等同于热点。热点指的是当下市场正在炒作的主流题材，是聚光灯下万众瞩目的焦点，具有较强时效性。题材具有生命周期，总有过气的时候。但在生命里最旺盛的那段时间里面，一定是市场的热点。过气之后，回过头看，当时的题材在现在看来依然是题材，但已经不再是热点，已经成为过气的题材。题材投机，一定要活在当下，这非常重要。我们很多初学者，似乎总是没有意识到这一点，处处比聪明的投资者要慢一步，就是没有活在当下的原因。\",\"题材的价值衡量 \",\"1.题材新颖度高\",\"2.题材级别大\",\"3.题材有朦胧美，富有想象空间\",\"4.盘面表现强\",\"板块 \",\"板块及板块内个股联动性\",\"板块运动的规律 \",\"1.板块运动的正三角模式\",\"2.板块运动的倒三角模式 \",\"三个阶段 \",\"第一阶段，就是某只股票大幅上涨，往往是以独立个股的形式出现。大家都搞不清楚这个票为什么涨，也没有跟风小弟。\",\"第二阶段，这只股票的涨幅已经比较大了，开始吸引市场的目光，一部分聪明的短线资金经过深入思考，发现了题材逻辑，开始追逐。\",\"第三阶段，跟这只领涨股相关的概念股大爆发，鸡犬升天，板块整体进入高潮阶段。\",\"3.存量博弈模式（随机博弈模式）\",\"龙头 \",\"龙头、板块、资金、题材的关系 \",\"有题材+有资金=板块效应 \",\"大题材+大资金=大牛\",\"大题材+小资金=小牛\",\"小题材 + 小资金=蜗牛\",\"无题材 + 无资金=死牛\",\"龙头的背后是板块，板块的背后是资金，资金的背后是人心，人心的背后是题材。\",\"强者恒强龙头股\",\"龙头股的六大特征 \",\"1.逻辑 \",\"逻辑就是题材，或者说是股票上涨的理由\",\"2.逆势 \",\"逆势也可称之抗跌。顾名思义，逆势是指与大盘大势相反，其他股票下跌，他上涨。逆势的特征表现有分时逆势、日线逆势。尤其是在大盘至暗时刻，风云变幻，万马齐喑。但是，突然一只个股，狂飙突进。那我们就要好好关注一下了。逆势是强势股的重要特征，龙头股尤其如此。\",\"3.领涨 \",\"龙头股的领涨也是这样，龙头上涨，板块小弟纷纷上涨；龙头涨停，板块小弟才敢涨停。注意，这不是绝对的。许多时候，当天也有小弟先涨停的情况。但龙头股从日线高度上，总是居于绝于领涨地位。龙头能领涨，自然就领跌，领跌的特性往往比领涨更灵验，龙头一倒，树倒猢狲散。但总的来说，几乎在每一次板块运动中，龙头股总是最后倒下的。\",\"4.高度 \",\"一个龙头号召在前、板块联动前进\",\"5.板块 \",\"既然有了高度，自然下面就有成梯队排列的板块阵列。板块是龙头股的重要支撑。没有板块不成龙头。就像一个组织，老大说话做事，没人信没人跟，那这个老大也当不了多久。这就是所谓的：众星捧月金字塔，孤龙难立金字塔。\",\"6.人气 \",\"人气这个特性，是一个补充说明。当龙头股有逻辑、有高度、有板块跟随，自然就有人气。所以说，人气出于逻辑，但高于逻辑。有了人气，就能带来源源不断的关注和资金。这就是龙头股有别于跟风股的根本原因。虽然眼睛看不见，但大脑里必须能想见，相较于龙头能吸引的潜在资金，跟风股是望尘莫及。\",\"龙头股的演进过程 \",\"七个阶段 \",\"1.启动 \",\"就像初春时节，春寒料峭，一棵树苗奋力长出，混杂在杂草间，在寒风中飘扬。但识者寥寥，很少人知道它行将长成一棵参天巨树。正所谓：世人不识凌云木，直到凌云始道高。\",\"2.确认 \",\"小树苗继续生长，这时候，有少数人慧眼识英雄了，开始思考大港股份涨停的逻辑了。跟风小弟出现了，有了板块效应。\",\"3.发酵 \",\"板块效应一旦形成，进一步吸引更多人关注。这时候，跟风越来越多，板块阵列扩大，有的跟风股也开始连板。\",\"4.加速 \",\"这时候，板块已成为全市场的主流板块。毫无疑问，由于大港股份“鹤立鸡群”的高度，自然成为万众瞩目的焦点。龙头股自然往往是一字板，或集合竞价开得很高。\",\"5.分歧 \",\"题材发酵以后，引起资金疯狂追捧，导致场外资金入场抢筹，而场内资金惜售，就会导致龙头或部分跟风缩量加速上板。这样，底部大量获利的资金，一遇风吹草动，如指数情绪的助推，就容易引起砸盘的冲动。场内的资金想卖，场外的资金想买，这样就容易造成分歧。龙头分歧的结果，有的日内分歧转一致，有的成为一个阴线或上影线。而跟风股纷纷掉队。\",\"6.反包\",\"7.龙回头\",\"心理 \",\"1.情绪流的技术分析 \",\"“情绪流的技术分析”也会根据个股的K线形态分析主力建仓特征，发现主力踪迹，某些知识点来自长期的总结提炼，鲜少见诸市面，属于少数派，有效性大得多。但即便如此，也并不迷信，最后需要涨停来验证。\",\"“情绪流的技术分析”不仅是研究主力，还根据个股的K线形态进行多空分析、筹码结构分析，以及常见走势的归纳总结，一切服务于“情绪流龙头战法”，是情绪流龙头战法整个交易系统的组成部分。完全不同于一般技术派脱离“信息题材”和“市场情绪”讲“必涨形态和技术指标”。\",\"正因为市面上的技术分析脱离了“信息题材和市场情绪”，所以必然是马后炮，是想当然，是无效的。最大的功用是事后解释。而情绪流的技术分析是有效的，是尊重和顺应自然规律的结果。\",\"情绪流是以题材信息为出发点，并根据“市场环境及情绪周期”改变交易策略，以“做龙头为主”的股林一派。但是，情绪流从不拒绝各门各派“真理的颗粒”。它是开放的，不断自我优化的股市博弈方法论。值得一说的是，投机像山岳一样古老，太阳底下没有新鲜事物，股市里没有任何人可以号称股神，任何人都不可能有什么独创。情绪流的技术分析也一样，没有一样技术完全是自己的独创，只有不断发现、借鉴和总结。一切成功人士都是“以市场为师，不断借鉴、思考和融合，从而形成自己独立的交易系统”的结果。\",\"2.散户交易心理分析 \",\"买股票的原因 \",\"K线形态不错，技术指标也看涨。均线归位，MACD金叉，看上去要涨。\",\"从F10里看，利润增长率还不错，市盈率不高，总之感觉公司基本面还可以。\",\"这只股票在涨，而且老是涨，那么我买进，明天大概也是涨，这样就赚钱了\",\"这只股票跌得差不多了，价格也便宜，感觉已到支撑位，马上就止跌了，接下来就该上涨了。它从那么高的地方跌下来，应该也可以涨回去\",\"电视上这位大师都说这只股票不错，朋友也说还可以，那赶紧买，不然就迟了\",\"哇，这么多股在涨，不买就错过了，先挑一只涨得不多的赶紧买，收盘就赚啦\",\"卖股票的原因 \",\"K线破位了，MACD死叉了，看上去要跌，卖了算啦\",\"已经赚了钱了，要是再跌，就白干，干脆卖了再说\",\"本来赚了钱的，结果反而跌到成本以下，哎，气人，卖了先，下次设个止损位\",\"完了，一买就套住了，跌到5%我就止损，啊，跌到7%了啊。再等下，跌到9%了啊，快跌停了，心跳加速，我去，卖了算了\",\"已经套住15%了，我看你能跌哪儿去？我就不卖，看你拿我怎么办。没过多久，啊，跌到25%了。哎，卖还是不卖呢。啊，还在跌！妈呀，算了卖了\",\"反正都套这么久，我就不信你涨不上去。结果始终还是不涨，看到别的股票噌噌地涨，终于按捺不住，卖了跌的去买涨的\",\"哎，套了这么久，好不容易快回到成本位置，就差一点了，等等。啊，又跌下去了？我去。不等了不等了，卖！\",\"散户主要的交易心理是 \",\"小富即安。赚了就跑，落袋为安\",\"吃不得亏。不赚不出，任由亏损放大，继而割肉或者死拿\",\"解套就跑\",\"技术 \",\"1.龙头战法基础知识 \",\"1.操作手法篇 \",\"排板:在涨停板上出现封单后按涨停价挂单买入，在涨停板上排队成交。优点是一旦发现情况不对可以及时撤单，缺点是排单的位置不好把握，很容易成交不到。排板的话，可以用level2看到涨停板上的排单，找到自己单子的位置，估计有没有希望成交。\",\"扫板:个股将要打到涨停价时，就挂涨停价格买入。优点是几乎都能买得到，缺点是即时成交无法撤单。一旦封板后板上出现抛单或撤单的情况，无法做出补救动作，而排板手法是可以撤单应对的。\",\"翘板:主动买入封住跌停的股票。翘这个词，往上翘，比较形象。\",\"半路:大资金在关键价位用大买单主动扫掉压单，可能会一次性扫掉好几个档位，引导市场合力买入一只股票的行为，这种手法称为点火。一个好的点火单通常是吃掉关键价位后，在买一位置还能留下一部分单子，显得盘口很有气势。聪明的跟随者，看到点火单后，结合量价等综合研判后，跟随买进，称为半路买入。 \",\"在实践中，点火、翘板往往是大资金所为，游资或超短选手往往是半路、扫板或排板买入。对于初习龙头战法的情绪流爱好者，基本上没有扫板或排板的买入习惯，但这是龙头战法买入手法的基础。单从这一点就可以看出，情绪流和其他流派的不同之处。\",\"2.龙头K线形态篇 \",\"一字板 \",\"开盘价、收盘价、日内最低价都为涨停，分为能买得到的和买不到的两种，这个要结合盘口具体看。平时说的隔夜排板就是排有一字板预期的，希望借助挂单时间更早比其他人提前买到。\",\"T字板 \",\"开盘价、收盘价为涨停价，最低价不是涨停价。也就是盘中曾打开过的一字板，但尾盘仍然封涨停。\",\"实体板 \",\"收盘价大于开盘价，在K线图上显示有红色的柱子，区别于一字板和T板。如贵州燃气主升中每一个涨停都是实体阳线板。实体板中，集合竞价很高，开盘就快速涨停的，称为秒板。\",\"换手板 \",\"这是从成交量的角度来谈涨停板的形态，通常指实体涨停板，也包括T板和一部分一字板。共同特点是散户有可能买到，而且成交量并非极度缩量，显示存在筹码交换。而那种极度缩量的一字板或秒板，就是非换手板。一般说来，换手板的龙头走得更长远。\",\"反包板 \",\"大阳线吞没昨天的阴线或上影线，好像“包裹”住那一根K线一样的形态。反包板就是个股反包动作形成的涨停板。\",\"3.市场地位篇 \",\"主线题材龙头 \",\"炒作逻辑的源头，是市场赚钱效应的核心，由这只股票开始，市场选择它的各个分支属性进行炒作，包括价格、形态、题材等，是龙头梯队中级别最高的。\",\"支线龙头 \",\"一个大级别的题材中，一条主线可以分出多条支线。某一个分支逻辑的龙头就叫支线龙头。比如科创板那一波行情中，市北高新是主线题材龙头，西安旅游就是支线龙头。\",\"次主线题材龙头 \",\"一般说来，只要市场环境不太差，同一天，可以有两个题材以上的板块。主线题材往往被称为热点，非主线题材我们称之为次主线题材，其龙头市场地位当然不如主线题材龙头。但有时候，实际收益并不弱于主线题材龙头。更重要的是，由于主线题材关注度太高，往往买不到。次主线题材龙头就变成了最实际的选择\",\"市场总龙头 \",\"市场总龙头是当前市场身位最高的。但市场总龙头未必就是主线题材龙头。\",\"4.从其他角度来分 \",\"换手龙头 \",\"换手龙头是从另一个维度来谈市场地位，在一波大级别行情中，如果有很多个股都顶一字板的形式走强，特别是主线题材龙头，市场地位高则高矣，有啥用呢？让市场上的资金都买不到，但每每此时，就大概率会出现换手的、大家能买到的龙头，这才是能让大家都赚钱的个股。\",\"卡位龙头 \",\"这个相对比较难理解。可以把龙头想象成一个位置，个股坐在这上面。有若干个竞争龙头位置的种子选手，按照强度依次排名。正常来说，越强的个股越有可能走成龙头。但是某一只个股在一个关键时点的走势强于原先顺位比它靠前的个股，然后晋升为某个级别的龙头，就形成了卡位。\",\"或者由于某只票的质地很好，但之前市场没有发现，走着走着市场发现了隐藏逻辑，因此给予它更高的强度或溢价，超越了曾经比它顺位靠前的股票。卡位的核心是分流、抢夺资金，由于标的之间的竞争和可替代性，原本要去标的A的资金由于B的卡位而去了B，这样A就被淘汰，B获得溢价。自然市场地位就比其他个股高。\",\"补涨龙头 \",\"龙头的特点是领涨，那么相对领涨就有补涨。同一逻辑下，龙头的高度会刺激还未启动的个股走强。补涨股的高度一般不及龙头，是因为情绪递减，以及人们心中有了对标，形成一致性情绪不利于个股走高。比如科创板那轮行情中，后来补涨的赛象科技、超华科技，他们的高度就远不及第一波的龙头市北高新。\",\"补涨股里面也会诞生当下的市场环境下的龙头，例如超华科技是当时市场的龙头，但它同时是科创板那波行情的补涨股。补涨可以在总龙头结束之后启动，也可以在总龙头还未结束时启动，分辨补涨主要是看它的逻辑是否独立，以及它上方是否有高度压制。\",\"2.龙头战法的重要思维 \",\"龙头战法的“定位思维” \",\"对中国股市各阶层进行了简要的分析，目的是让读者朋友各自明白自己所在的位置，从而知耻而后勇，奋发图强。如果你选择了情绪流，首先也必须知道在情绪流选手中各个层级的地位，必须明白在哪个层级里生存才是安全又高效的。\",\"前瞻思维的策动者 \",\"潜在的龙头股在真正成为龙头股之前，不管是自然形成还是有人故意为之，总之是有资金在里面折腾，这些人就是具有前瞻思维的策动者。虽然说情绪流喜欢讲市场合力，但所谓主力，就是主要的力。他们是市场合力中主要的力，是连板股票趋势的创造者和维护者。尤其是龙头股还未成为龙头股之前，一板、二板是龙头的必由之路。他们有意无意地发动股票，从一板到二板、三板……推动到我们面前。\",\"聪明的跟随者 \",\"跟随者，是什么意思呢？就是当我们分析断定它有可能或者已经是下一阶段的龙头，就要及时跟随买入。市面上有些人主张不要预判，禁止判断，一味强调跟随，本门情绪流认为：这是走极端，没有预判的跟随是瞎跟随。聪明的选手就要懂得预判，然后以盘面为准，及时跟进。\",\"接棒的博傻者 \",\"就是赌后面有比自己更傻的人。没有经过学习修炼的人，乱买似乎也对，尤其在市场环境好、容错率高的时候。但是需要初学者引起注意的是，对于股市来讲，一两次成功没有任何意义，只有长期、稳定取得胜利才有价值。长期不思考、不进步，早晚失败，家里有矿也抵不住。经过学习修行之后，总结经验，做一个聪明的跟随者。经验多了以后，有些时候，也完全可以博傻，做一个清醒的博傻者。\",\"接盘的无脑者 \",\"无脑者就不用多说了。他们就是前三者的对手盘。没有他们，股市就不存在了。我个人以为，“股市不缺傻瓜”应该列为股市第一规律。任何一个人都曾经是无脑接盘侠，辛苦辛苦地忙，忙着给股市送钱，送给谁也不知道，还没有一个谢字。\",\"前瞻者策动，聪明者跟随，博傻者接棒，无脑者接盘。\",\"学习龙头战法，一定要有前瞻思维，做一个聪明的跟随者；市场环境好时，当一个清醒的博傻者；坚决不当无脑接盘侠。所以，当你买入龙头时，你要清醒地知道你的位置。他们的分水岭是什么呢？大致说来，当潜在的龙头股真正成为龙头股的第二天算起，就是博傻的阶段了。前面说过，龙头股的重要特性是要有板块跟随，龙头能否带起板块效应，是鉴别潜在龙头和事实龙头的关键。\",\"龙头战法的“买点思维” \",\"随机打板胜率 \",\"首板晋级为二板的胜率18%左右\",\"三连板之后继续连板的概率高达45%左右\",\"龙头股连板的概率最高，往往是90%，甚至是100%\",\"3.情绪流龙头战法的六大步骤 \",\"1.收集解读题材 \",\"对题材的收集解读是情绪流龙头战法的重中之重。股票交易中，每位龙头战法选手，既是指挥官，又是情报官。必须对信息题材进行收集解读。是新题材吗？有想象空间吗？级别怎么样？会不会形成板块效应？至于信息题材的收集渠道，我们在前面已专门阐述。\",\"2.找出异动个股 \",\"在涨停的个股中，找出跟信息题材相呼应的股票。分析该股票的属性，K线形态，股性，跟题材的关联度，盘子大小，价格高低，等等。最后根据龙头的特性进行观察。抗跌吗？领涨吗？\",\"3.观察板块效应 \",\"在龙头股的九大特性中，板块是很重要的。既然是龙头，就必须要有板块效应。三人成众，至少板块中有3只以上涨停。如果出现5只以上涨停，就要重点关注了。注意，任何题材，无论自己认为怎么样，无论题材给人感觉如何高大上，只要没有形成板块效应，统统不值一看。市场对的是对的，市场错了还是对的，一切以盘面为准。这就是《龙头战法要诀》中强调的“用头脑思考，用眼睛决策”。也是本书第三部分《股市天经》中强调的“交易你所见，而非你所想”。\",\"4.分析题材强度，情绪周期，题材持续性 \",\"发生板块效应后，我们再综合分析一下情绪周期处于什么阶段？当前市场情绪怎么样？题材级别怎么样？持续性如何？预判一下龙头可能的空间。如果在退潮期，就要注意了。当然这一条一般在题材的收集解读时，都已经有所考量。只是如果真的发生了板块效应，当天又没有及时上车，就应该郑重考虑，防止题材一日游。\",\"5.锁定龙头，及时上车 \",\"本门情绪流强调在板块效应形成的当天上车，这是第一次机会，第二次机会呢，是第二天。一般来说，如果没有太大的把握，就需要仓位控制，以防范风险。所以，在前面《龙头战法要诀》中，我们强调“机会1.5次，错过最好放弃”。为什么说机会是1.5次呢，指的是第一次仓位可以重些，第二次呢，如果没有太大把握，就需要减仓。并不是说除了板块效应形成的当天和第二天，第三天就不行了，而是强调在板块效应形成时，要及时上车。上车时，建议初学者开始还是要通过打板确认进场比较好。有经验后，怎么上车都是可以的。\",\"上车时，注意一下当时的市场氛围，如果是第二天上车，需要看一下板块的开盘情况，昨日涨停板块今日表现，以及大盘表现。尤其是大盘表现，如果大盘表现良好，更安全。\",\"6.出场 \",\"情绪流龙头战法最关键的是安全上车，实现盈利。只要是盈利了，出场便简单多了。大致说来，注意以下几个方面，就要考虑出场了。比如利好兑现、政策打压、利空公告、涨幅达到前龙附近，板块跟风难以为继，以及龙头本身的表现，尤其是分时呈现颓势。《龙头战法要诀》中“一旦板块渐趋弱，做好准备要出局，龙头分时现颓势，挥剑斩仓莫迟疑”，指的就是“板块明显衰弱，龙头分时明显无力”时就要考虑出局了。\",\"4.情绪流龙头战法的原理 \",\"总结 \",\"①项目要好，有想象空间，才能感召团队团结效命。寓意：在股市中，题材的级别和想象空间是产生龙头的前提条件。\",\"②铁打的营盘流水的兵，员工有去有留，但不影响整个团队。团队之间上行下效，团结互助。寓意：股市中，在一轮题材炒作中，板块始终要存在，内部联动性明显的板块是龙头持续上行的前提。\",\"③在企业经营中，老板抗压力能力强，必须要起引领作用。寓意：股市中，龙头是强者，抗跌、领涨是龙头的特性。\",\"④做企业的老板，为自己工作才是最大的动力。寓意：在股市中，有些龙头股的产生，跟主力资金在底部吸筹高度相关。\",\"⑤李总的项目是夕阳产业，团队骨干跑到张总那去了。寓意：在股市中，相对而言，新大题材的龙头股的产生，是其他题材板块的资金和本板块跟风股资金助力的结果。\",\"⑥李总和张总之间个人魅力也有差异。寓意：在股市中，大凡在一轮题材炒作中能走出来的龙头，一定有自身的特质。比如：盘子小、价格低、题材硬度好或者K线形态简洁优美等。\",\"注意以下几点 \",\"题材新颖吗？题材的级别大吗？想象空间怎么样？\",\"有没有板块效应？联动性怎么样？\",\"龙头股的价格怎么样，流通盘大不大？\",\"龙头股K线形态怎么样？\",\"龙头股表示出强势没有？表现出抗跌、领涨气质没有？\",\"短线情绪最后一次共振冰点的时刻。而决定是否出击或者出击的仓位，往往决定于题材的级别\",\"5.MACD在情绪流中的运用 \",\"顶背离现象一般是股价在高位即将反转转势的信号，表明股价短期内即将下跌，是卖出股票的信号\",\"MACD在情绪流龙头战法中的实际运用 \",\"辅助判断指数或个股的顶底\",\"辅助判断主力踪迹 \",\"有的主力喜欢在一个较低的区间潜伏吸筹，同时消散阴区筹码，打出股价上行空间，此外，也还需要等待时机。从指标上看，MACD就会在O轴上下缓缓游行较长时间，这是“蓄势待时”的一种表现。我们就可以通过MACD的这种表现，反过来判断主力意图。但要说明的是，这始终只是一个辅助作用。\",\"技术指标之我见\",\"6.多空能量转换器 \",\"多空能量转换器=N字结构+时间 \",\"时间 \",\"对于明显的阴区，一是空间远离，二是时间远离，即时空各有一远。尤其是后者，时间是最好的多空转换器，有利于股价的上行。本门情绪流，把股价的起始处到重大阴区的空间距离称之为：河宽。河宽就是主力预想中的“股价上行空间”。\",\"N字结构 \",\"N字结构是价格运动的本质特征。无论是分时图，还是日K线、周K线、月K线，莫不如是。但我们要从这表象中思考和分析问题。当股票由于某种原因放量下跌时，无论是形成“密集成交带”，还是“大阴柱”“缺口”。那么短时期涨回来，基本上是不可能的。下跌是刚性的，是容易的，是无条件的。上涨是柔性的，是困难的，需要蓄势孕育，是有条件的\",\"7.个股筹码结构 \",\"股票的阻力即空方来自何处 \",\"1.获利盘。股民在获利后，出于“得到后怕失去”的心理，一部人往往急于抛出。就是上一节我们讲的散户心理“落袋为安，赚了就跑”。\",\"2.套牢盘。被套牢的感觉度日如年，终于某天股价涨至成本价附近，出于“厌恶损失”的心理，迫不及待地抛出。有意思的是，坐牢的牢与套牢的牢完全一样，请读者揣摩一下被套牢的人一朝“刑满出狱”，那种“如释重负、离牢似箭”的心理，由于人的本能，套牢盘的抛压往往会不约而同的一致。 \",\"套牢盘主要体现在三个地方 \",\"密集成交带\",\"放量大阴柱\",\"跳空缺口\",\"3.藏身于F10里的股东结构里：基金。前十大股东基金持股太多，避为上策\",\"对于多方来说，最大的空方就是套牢盘（还有一个空头是恐慌盘。这是从另一个维度来讲的，是指在受到利空情绪影响下，原来不是那么坚定卖出而变得坚决卖出的一部分筹码。因此，恐慌盘其实也是套牢盘和获利盘的一部分）\",\"短线的基本面 \",\"价格低，盘子小 \",\"一般15元以下\",\"一般自由流通市值20亿以下\",\"筹码结构健康 \",\"健康的筹码结构是“筹码均匀分散”\",\"8.发现主力踪迹的“少数派知识” \",\"有主力建仓痕迹的股票有什么共同点呢 \",\"阳高阴低\",\"阳多阴少\",\"阳密阴疏\",\"特别提醒的是：不要把阳区的形态和放量振荡的形态混淆。放量振荡无论在低位还是高位都是很难上涨的，上涨即是穷途末路。这本来是本门情绪流关于多空分析的一个常识，但对于许多技术派的股民，总是屡屡中招。诚为可叹！\",\"K线形态的表现，主要也表现为以下几点 \",\"1.K线形态简洁优美 \",\"简洁优美的K线，表现为以下两个特点 \",\"价区洗盘调整时，总有一段显得“开盘价和收盘价十分接近，K线不松散杂乱”，称之为紧盘，对应量区缩量。价区微微下行，或平行调整。也有微微上行的，这种显示控盘程度较高。\",\"价区呈现出或明或隐的N字结构。实际上，量区的阳高阴低也形成了N字结构。\",\"2.波段逆势或部分K线形态异常 \",\"通过日K线和多日K线组合与大盘逆势来发现主力痕迹\",\"将较长时间的K线组合（波段）与大盘进行对比，并结合题材进行综合分析\",\"通过涨停板、上影线、十字星线等日K线异常来辨识主力运作痕迹\",\"9.通过涨停板、上影线、十字星线等日K线异常来辨识主力运作痕迹\",\"10.股票反转的常见走势及实际应用 \",\"1.挖坑逆转的形态及特征 \",\"特点 \",\"整体来看，呈现对称起涨的特点\",\"一般说来，EF比AB略短，但不绝对\",\"有时EF紧盘缩量，反转意味更强烈\",\"D处往往放量。F处再次起涨时，也会放量\"]},\"399\":{\"h\":\"6.择时间\"},\"400\":{\"h\":\"1.关于“时机”的哲理探源\",\"t\":[\"“机”——事物精微变化之理\",\"“机”的三层含义\",\"机是事物在运动变化过程中呈现出的特殊细微变化和现象，或者说是事物内部正在向相反方向转化的细微征兆。\",\"机是事物发展变化过程中的某一个关键节点或临界点，过了这个临界点，事物逐渐的量变，将会起起质变，可能引导事物走向另外的方向。\",\"机是事物发展变化过程中的某一个关键节点或临界点，过了这个临界点，事物逐渐的量变，将会起起质变，可能引导事物走向另外的方向。\",\"2.周期与情绪周期 \",\"1.什么是周期\",\"短线选手是根据哪些指标来感知市场的呢？主要有以下几个指标 \",\"涨停家数\",\"跌停家数\",\"涨跌比（上涨家数与下跌家数的比值）\",\"连板家数\",\"市场高度\",\"封板率\",\"昨日涨停指数\",\"昨日连板指数\",\"冰点和高潮 \",\"本门情绪流把“涨停家数、涨跌比、连板家数、市场高度、封板率”等的综合表现统称为短线情绪值。其中最重要的参数是涨停家数、跌停家数、连板家数、市场高度。当短线情绪值处于近段时间以来的相对低点时，我们称之为短线情绪冰点。冰点之后还可以有冰点。这段时间称为短线情绪低迷（反复）期。\",\"短期情绪的冰点，不一定就是指数情绪周期的冰点。但指数周期的冰点，往往就是短线情绪的冰点。指数情绪和短线情绪二者互相影响，很难说谁决定谁。但可以这样说，指数情绪是短线情绪的助推器。当短线情绪退潮时，指数情绪的退潮将助推短线情绪迅速降至冰点。反之，当短线情绪由冰点开始复苏，指数情绪的回暖将助推短线情绪向高潮演进。\",\"我们把指数情绪冰点与短线情绪的冰点的重合，称为共振冰点。本门情绪流一般指的冰点，就是指共振冰点。一般来说，共振冰点时，短线情绪值急剧降低，市场高度往往也在4板甚至3板以下。亏钱效应非常明显，整个市场犹如秋风扫落叶，一片肃杀。反之，当短线情绪急剧升温，情绪值变大。盘面表现为：涨停家数多，连数家数多，涨跌比大，封板率高而市场高度板也达到近段时间的高点。我们把此时短线情绪所处的状态称之为：高潮。\"]},\"401\":{\"h\":\"7.综合篇\"},\"402\":{\"h\":\"1.情绪流的情报收集系统\",\"t\":[\"三个方面 \",\"1.每日必读 \",\"央视一台，央视二台 \",\"央视一台的新联联播，有人开玩笑说，央视的新闻联播每天就是重复讲三件事。第一句话是领导们都很忙，第二句话是国内形势一片大好，第三句话是国外水深火热。玩笑归玩笑，但却充分反映了央视新闻联播的重要性：高层动向、国内重要政策和经济形势、国际重大事件，这恰恰是短线选手需要时时捕捉的重要信息。每天看看新联联播，既是一种休息，也是工作需要。建议初学者养成每天看新闻联播的习惯。虽然现在信息发达，新闻联播的内容也能通过其他形式获取，但毕竟不如电视生动，另外，坚持看新闻，了解国家政策，可以预防短线选手把旧闻当成新闻。\",\"视二台的财经类节目，如《经济半小时》《中国经济大讲堂》《经济信息联播》《对话》等也可以有选择地收看。个人觉得比花同样的时间看某些哗众取宠的公号靠谱得多。\",\"财联社、选股宝、四大证券报及外盘走势 \",\"财联社和选股宝大同小异，通过财联社或选股宝我们了解7*24小时资讯，国际国内各种消息差不多都在里面了。一般晚上和第二天早上浏览一次。内容主要分两个方面：一是重大政策或信息，二是个股公告。公告方面笔者主要看选股宝。选股宝专门有一栏集中反映了过去一天个股的公告信息\",\"四大证券报是指中国证券报、上海证券报、证券时报、证券日报，为什么这四只报纸这么重要？因为四大报相当于是官方的喉舌。笔者一般是看看四大报要点的汇总，各大网站都有，比如同花顺首页中间位置。\",\"外围走势，主要是指美国股市，美帝目前还是很牛的，美股涨，A股未必跟涨，但美股跌，A股一般跟着跌，但一般影响的是开盘。另外，开盘前，笔者会留意一下A50期指和人民币汇率走势。\",\"做股票时要关注商品期货的走势，不要只看股票，现在的股票软件基本都包含了一些商品期货的走势图，通达信、同花顺都有这个功能，为我们提供了很大的便利。\",\"2.重要政策来源及解读 \",\"重要的政策，一般在首页上。点击政策一栏，可以详细了解各项政策，此外，还有政策解读。总之国家领导人的讲话、国家重大政策、重要的经济数据及解读上面都有，但一般短线选手都忽略了中央人民政府网站的重要作用。\",\"其他信息渠道\",\"如论坛、股吧、雪球、淘股吧等，可以了解其他股民朋友对题材的预期，太过一致，有时候反而不是好事。但笔者本人，除了参看部分复盘博客的复盘，几乎都不去。龙头战法，关键还是在于独立思考。但对于初学者来说，见多识广总是一件好事。\"]},\"403\":{\"h\":\"2.情绪流看盘的四大原则\",\"t\":[\"1.短线看盘第一原则：观大局 \",\"消息层面上是否有大的利空或者利好\",\"昨日涨停股的今日表现，这是市场短线情绪的重要体现 \",\"如果昨日涨停的票今天能够有不错的溢价，或者有一些强势连板票，那代表着市场看好的人还很多，接力情绪良好。如果昨日涨停今日普遍溢价不高，甚至很多还出现了低开，那么说明市场不看好接力，风险往往就来临\",\"盘面主流题材的表现情况 \",\"如果主流题材一开盘，跌多涨少，甚至有几个股票出现大跌，就要小心了。情绪传递规律我们反复讲过，上涨的股票对下跌的股票有向上牵引作用，下跌的股票也对上涨的股票同样也有向下牵引的作用。但一般说来，后者比前者的力度要大。打个不恰当的比方，所谓的“跟好人，学好人”，其实“好人”的向上牵引力，远不如“坏人”的向下牵引力。\",\"盘面主流题材的表现情况，我们还要注意涨停板是不是越来越多，如果是，那么说明这个题材方向还有机会，如果主流题材进入到高位分歧阶段或者临近炒作结束阶段，那么就要慎重，可能风险就来临，这个时候就不能贸然进攻。\",\"留意板块间资金流动情况 \",\"通常在盘面上，板块之间会形成资金的争夺。所以一定要清楚各自板块运动到了什么阶段，哪个是新题材，哪个是老题材，看懂哪个题材是高位，哪个题材是低位，是否有可能高位开始补跌，资金流向低位题材\",\"关注盘面上涨家数以及下跌家数的数量对比，涨停家数以及跌停家数的数量变化 \",\"如果前一天上涨家数少、下跌家数多，第二天突然发生变化，下跌的少了，上涨的多起来，指数情绪会助推短线情绪由弱转强，这时候出击往往安全性更高。\",\"2.短线看盘第二原则：察联动 \",\"个股与个股之间会相互影响。某些个股大涨，会带动其同属性的股票上涨。比如当年炒作四川双马的时候，带动了股权转让的票大涨，形成了巨大的赚钱效应。资金的本质都是逐利的，但某些类型的股票产生了重大的赚钱效应的时候，跟风的股票就会越来越多，所以如果市场上出现了大涨的票，我们就要认真观察，是否会带动相关类型的股票，是否能形成板块效应，有时需要在盘中及时寻找机会上车。但多数时候是通过盘中观察和盘后静态复盘后，再制定交易计划。\",\"盘面上有时存在多个并列的主流题材炒作。若是盘面赚钱效应良好，市场资金充沛，那么通常情况下多个题材能够同时炒作。但若是某个题材的个股已经炒作到了高位，或者该题材的龙头已经运行到高位有风险的时候，通常也会对平行板块的龙头产生影响，这样的情况在盘面上经常可以看到，这就是规避风险的时候，通过横向的对比来判断机会和风向，利用市场的情绪传递规律来进行预判。\",\"市场领涨股对整个盘面的影响。龙头股对市场短线炒作的影响力巨大，这是毋庸置疑的。当某个题材的某只股票强势领涨的时候，市场上往往会有很多同属性的跟风票一起涨，盘面比较活跃；当这只龙头股涨不动的时候，跟风股往往已经开始下跌，高位龙头股出现滞涨的信号对高位的跟风或者题材分支龙头都会产生负面影响。\",\"3.短线看盘第三原则：抓重点 \",\"反映市场氛围的数据变化。比如开盘就涨停和跌停的家数，上涨家数和下跌家数的数据变化，跌停家数和涨停家数的数据变化。总之，我们力图在大盘环境好的时候出手，才是正确之道。道理很简单，大盘环境好，市场氛围好，封板率高，最起码当天是安全的。\",\"主流板块及板块龙头。当然这里的主流板块，往往是前一天的热点，我们要重点观察其持续性。同时注意领涨板块与领跌板块的演变，一般来说，领跌板块只注意其龙头，龙头倒了，板块基本就也那样了。就像2019年10月8日业绩预增题材开始炒作，龙头是天顺股份，到了10月15日天顺股份开盘就下杀，龙头倒，那这个板块大概率就结束了。\",\"4.短线看盘第四原则：重细节 \",\"龙头股的走势。跟预期比较起来，他的开盘幅度，量价情况是否符合预期。如果跟预期相差太大，那么就要谨慎小心。如果手里持有龙头，就要准备好对策，是继续持有观察还是准备卖出。如果手里持有的是跟风股，那么更要根据龙头的情况，来决定自己的操作。\",\"手中昨日涨停股的开盘情况。如果符合预期，那么可以继续观望，如果出现比较极端状况，那么第一时间就应该出局，保住胜利果实。这个道理好多初学者开始都不太懂，总是上当。明明前一天进场还不错的票，到第二天总是没有赚到钱，这就需要根据板块整体表现来进行判断，不符合预期的时候，甚至竞价就直接卖出，往往能卖在最高点，虽然收益不是很大，但尽量保证了每次出手的胜率大幅提高。\",\"个股的承接问题。如果某只个股承接出现很大问题，就要及时处理。比如分时出现瀑布线下跌，充分说明个股承接无力，就要非常谨慎。相反，如果某只票前面两天还炸板，但是接下来的承接却非常好，则体现出某些资金的意图。这一条，对于做龙头股的人比较管用。一般说来，龙头涨到一定高度，分时承接无力，表现比较凌乱时，就可以出场而无需犹豫。\"]},\"404\":{\"h\":\"3.情绪流看盘的主要内容\",\"t\":[\"1.涨停板家数，跌停板家数，上涨家数，下跌家数 \",\"涨停板数量代表市场短线投机资金的活跃程度，涨停家数越多，市场越活跃。红盘个股越多，代表市场行情越好，这些都是最基本的数据。试想：如果市场的个股大多是绿色的，红盘的很少，那说明盘面跌的股票多，肯定投机情绪不大好。而涨停板比较多，则说明短线资金的活跃程度很高，我们做短线的，一般都是以做涨停板为主，显然在涨停家数多的局面下，机会才更多，相对更安全。\",\"跌停板的数量对市场投机情绪的影响同样非常重要，如果市场上出现了超过5家以上的跌停板，那么市场的做多情绪会受到一定程度的打击。这个时候就要谨慎。道理很简单，红彤彤的涨停让人兴奋喜悦，绿油油的跌停让人心生恐惧，市场一旦出现了较多的跌停，短线选手自然会想，这是怎么了？会不会跌停的越来越多？股市惨跌的场面会自然浮现在脑子里，这样一来，卖的人多了，买的人少了。如果这时候不谨慎，买了票以后，谁来接盘呢？\",\"总之，市场的情绪本来就是相互传递、相互影响的，如果涨停的家数不断增多，那么跌停的或者大跌的就会减少。相反，如果大跌的票增多，那么涨的就会减少，我们在实际的操盘过程之中，要时刻关注着上涨家数、下跌家数对比情况，涨停家数、跌停家数的对比情况，时刻了解市场的情绪变化状态。\",\"2.昨日涨停个股今日表现 \",\"昨日涨停的票第二天多数平开无溢价，甚至出现多只低开的情况，则说明短线接力情绪出现了很大问题，出现这种情况的话需要立马引起我们的警觉，脑海中的第一反应就是风险来临，如果昨晚上做的操盘计划里面准备今天要接力相关股票的，需要根据当下的情况做出改变，停止昨晚的买入计划或者减小仓位。 \",\"为什么会出现这种情况呢，原因主要有以下几点。 \",\"题材太小没有影响力，不受大众欢迎，接力的资金看不上这个题材，导致今日无新的资金进场接力，所以个股表现为无承接，昨日的涨停题材成为一日游题材。这种情况很多，尤其是在盘面不好的时候，没有较好影响力的题材经常出现一日游的情况，通过观察这个题材相关个股早盘开盘时候的表现，大致就能判断出今日这个题材的延续性。对于经验丰富的投资者来说，看到承接不足，很多高手第一时间都会选择卖出。\",\"受到大盘下跌的负面情绪影响而出现盘面恐慌，多数投资者出于避险的本能便不再出手。人的本性都是趋利避害的，尤其是在股票这种金融投资领域，当出现大盘下跌情况时，很多理性的投资者都会管住自己的手，不买了。所以昨日涨停的票也就缺乏接力资金，自然会出现没有溢价或者低开的情况。\",\"受到国际、国内等大局势不稳的影响而产生大盘可能下跌的预期。比如2018～2019年，在中美贸易战不断斗法的过程中，在一些关键的时间节点位置，如：双方即将公布一些措施、举措等时间点，聪明的资金都在等消息落地，所以在这些时候起来的题材，出现个股的平开或者低开也是常见的状况。\",\"3.题材板块今日表现 \",\"昨日某个题材板块爆发涨停潮，结果第二天，多只前排品种被顶一字，而后排品种大多数低开，而且普遍竞价无量。在这种局面下，昨天进场的人看到后排没有支撑，都会选择兑现利润，落袋为安。我也建议读者朋友根据这个开局情况赶紧兑现利润为主，出现这种状况的原因在哪里呢？因为后排个股无溢价（甚至低开）反映出今天接力的资金承接出了问题，前排被顶一字是因为龙头战法的强者恒强，导致大家都去追击最强者，所以才会顶一字，但资金看到后排多只个股掉队的时候，大多数人肯定以兑现利润为主。这种情况出现后要立马兑现利润。在笔者多次的实战经验中，遇到这种情况，竞价卖出一般都是最高点。\",\"题材板块内多数个股出现大幅低开，尤其是昨日比较强势的涨停板或者一字板，出现了低开或者高开仅仅在1～2个点以下。这种情况就更加糟糕了，很有可能预示着今日风险的来临，也预示着题材的持续性难以为继，基本宣告题材的炒作结束。但有时候，也有低开后被资金继续强势攻击的情况，这个就需要对题材进行综合性的分析，一般大、新、强的题材可以高看一眼，否则都应该将题材当作小级别的题材来看待。我们做投资，要做一个保守的投资者，而不是一个激进的投资者，只有保守，才能在这个市场上活得久。正常来说，当昨日涨停板块内多数个股出现大低开的局面时，应该快速果断地止损出局。\",\"4.盘面人气股的表现 \",\"这里的人气股包含盘面的高标、题材龙头以及在某段时间引领盘面情绪的个股。当然，这也需要对盘面的情绪板、人气股有一定的判断能力。\",\"一般情况下，短线炒作都将盘面的高标股当作是市场的龙头（不管你认可不认可，但是市场上就是有这么一大批短线客会这样看），龙头的高度代表着市场短线资金的情绪，龙头高度越高，短线投机的情绪越亢奋。龙头对市场的影响是巨大的，大多数短线投机者都将龙头视为影响情绪的重要参考指标，所以我们需要顺从这个法则，重视这个法则，因为这个法则会影响到很多短线投资者的心理状态。\",\"我们在市场上参与短线投机，有时候不要过于认真，要理解大多人的心理状态，因为他们可能会是我们的盟友，也有可能是我们的对手盘，所谓知己知彼百战不殆，对于市场上这些活跃短线资金的心理状态的了解是我们必须要去把握的。每一次高位龙头倒下，意味着一轮题材炒作的结束。贸易战的丰乐种业、国产系统的实达集团、稀土反制的金力永磁，等等，每一波行情一定会出现一只领涨股，他们的表现对市场短线情绪的影响是巨大的，他们结束的时候，市场也会做出剧烈的反应，务必要重视他们对短线市场的情绪影响。\",\"关于人气股，举一个比较特别的例子，有些股票前一天比较弱，或者涨停时间比较晚，但第二天却强势快速涨停，这些票我们定义为超预期的股票，也是挺有人气的。但这样的人气股，如果第二天走得不太好，反过来又会打击人气。\",\"一旦出现2只以上的人气股崩溃，盘面大概率好不到哪里去，风险大大增加！试想：既然叫人气股，说明是众望所归，大家都看着呢。如果人气股第二天表现不好，对人气的打击是巨大的，还有多少短线资金愿意冒着巨大的风险继续追击呢？短线资金都是很聪明的，但同时也是相当敏感的，一旦盘面出现风险和亏钱效应，躲避风险是他们的第一本能反应，这从投资者的心理层面反映出人气股对整个市场情绪的影响。\",\"5.封板率、炸板率的表现 \",\"所谓封板率，是指今天成功封住涨停的股票跟所有触及涨停的股票的比值。封板率+炸板率=1。封板率高，自然炸板率就低，封板率低，炸板率就高。封板率、炸板率是短线选手关注的重要指标，如果封板率低，说明打板后容易炸板，人的恐惧心理就会油然而生。所以，这种情况下还是要控制情绪，不要冲动。一般来说，封板率在70%以上才比较正常。\",\"6.前期强势股的表现 \",\"前期强势股，比如前期市场总龙头，一些因为公告利好而上涨的高位板，前期各板块的龙头股，比较强势的跟风股。这些股票虽然好像是“过去时”了，但毕竟在前期给人留下了深刻的印象，人是有记忆的。就跟美国前总统奥巴马、前国务卿希拉里一样，虽然下台了，但他们的一言一行，还是相当有影响力的。\"]},\"405\":{\"h\":\"4.情绪流复盘的三大类型\",\"t\":[\"复盘的重要作用在于，在没有人师的情况下，我们就只有跟市场学习，通过跟市场学习后，提炼出规律、方法、技巧，来纠正自己的错误，并指导今后的行动。总之，复盘就是学习总结，是以市场为师，以自己为师。\",\"复盘有以下好处 \",\"复盘可以帮助我们提炼事物发展的规律。反映在股票上，就是“强者恒强”“物极必反，否极泰来”“共振”“龙头倒下，大概率变盘”等规律，以及板块运动的类型及规律。\",\"复盘可以帮助我们熟悉具体事物发展的可能变化。反映在股票上，就是要通过复盘了解当时的市场环境，及板块运动的各种变化。\",\"复盘可以让我们从经历中提炼出经验，并指导今后的行动。反映在股票上，除了包括上述好处外，还可以提醒我们总结失败教训，尽量杜绝再犯同样的错误，绝不在一个坑里跌倒两次。\",\"复盘可以让我们优化工作流程，提高工作效率。反映在股票上，就是让我们优化情报收集、盘前准备、看盘复盘的流程，做有用功，有高效率。最终提高我们决策的胜率和实际绩效。\",\"1.每月复盘 \",\"回顾总结在过去一个月发生的板块运动，并提炼规律。本书第三部分《股市天经》中，王求道就是在“磨剑楼”客栈，通过七天的复盘，向市场学习，最后提炼出了“独孤九剑”。不过小说毕竟是小说，七天的时间肯定夸张了。当然，对于板块运动的总结每周一次总结回顾也是可以的，甚至是每次板块运动结束后就开始总结，也是可以的。笔者发明了一个新名词叫“倒推复盘”，意思就是，如果时间倒流回去，正确的交易应该是怎样的，然后多问几个为什么。\",\"每月复盘的内容，除了对板块运动进行总结提炼外，另外就是对市场情绪周期进行一个梳理回顾。有时候，离事发时间太近，容易当局者迷，过一小段时间回顾总结，就旁观者清了。\",\"2.盘后复盘 \",\"一般人说的复盘，就是指每天都必须坚持的盘后复盘，就是股市收盘后再静态地看一遍市场全貌。白天动态盯盘时肯定有好多情况来不及观察、来不及总结，在收盘后或者晚上某个时间，需要你重新对市场重描一遍，更了解市场的整个变化，从而对第二天的交易做出计划。盘后复盘主要分两个环节。一是盘面回顾，观察记录；二是沙盘推演，初定计划。\",\"3.盘中复盘 \",\"在实战中，很多短线选手，尤其是初学者，虽然全天坐在电脑前，但很容易被盘中突发的涨跌所吸引，甚至只是紧张兮兮地盯着自己买过的股票，往往只见树木，不见森林。这样下去，时间一天天过去，而股艺长进很是缓慢。所以，要有意识地训练自己在观大局的前提下，再抓局部重点。\"]},\"406\":{\"h\":\"5.情绪流每日复盘的主要内容\",\"t\":[\"1.感知环境 \",\"运动员玩帆板冲浪，往往是以大海没有恶劣气候为前提的。一个人经商做生意，往往是以国家安定这个大环境为前提的，国家安定，未必生意就做得好，但如果国家不安定，兵荒马乱，生意不好做，做不好，这是大概率的事情。所以说，当今世界，哪儿有动乱，那儿的资本就要跑路。股票也是如此，在短线生态中，游资私募就像猎人，聪明的猎人，总是喜欢揣摩猎物的行为心理，市场环境不好，多数猎物是不出来活动的，猎人自然降低了预期，出猎次数也减少了。跟随猎人出击的精明散户，也减少了。所以，如果市场环境不妙，就算是有题材，其高度也会大打折扣。\",\"2.盘面回顾，总结记录 \",\"大盘指数的复盘 \",\"上证指数、深圳成指、创业板指、中小板指数、上证50、中证500、沪深300，这七个指数，基本上包括了市场上最核心的指数概况。笔者在实战中一般重点关心三个指数：上证50指数、上证指数、创业板指数（注：创业板综合指数399102，比创业板指数更能反映小盘股的表现情况）。对指数，主要是了解最近市场的重心在哪里，是在大票上，还是在一些小票上面，大票小票是都在涨还是都在跌，还是它们之间有明显的分化，如果有分化，那么还要看看是否有外力护盘的情况。同时还要关注成交量，是处于放量状态还是处于缩量状态。大致预判一下大盘的走势。\",\"相关题材板块的复盘 \",\"板块的复盘需要花费一定的时间，涨幅最高的板块代表了当日最主流的做多力量，只有跟随主流的做多力量，我们才有机会，才能在这样的板块里面寻找到符合我们要求的个股。而且板块之间有时候会出现轮动，今天这个板块涨得多，明天这个板块可以继续强势，但也有可能不再继续强势，而换作另外的板块强势。所以每天的复盘，我们都需要对热点板块、涨幅较大的板块、跌幅较大的板块进行复盘，以便第二日做出相应的决策。那么怎么来看板块呢？我们只需要在板块指数（通达信软件里，板块指数快捷键是15）里面按照排序点击涨幅最高的，或者跌幅最高的，就能将所有板块一目了然地看清楚，而在板块指数里面，还能看到里面涨幅最高的个股。\",\"那么涨停的股票怎么复盘呢？当日涨停的股票，除去次新股的一字板以外，凡是自然涨停的板，全部都要认真仔细地看，要把这些票涨停的原因弄清楚，是因为公告利好涨停的独立股票？还是因为响应题材涨停的？如果是响应题材的，是哪个题材？这只股票是跟风呢，还是龙头？许多股票都有多重属性，那这只股票涨停的主要原因是什么？自己有所思考后，再参照同花顺复盘或者某些复盘公号，有必要的话还可以做个备注（注：快捷键ctrl+Q可以在个股里面进行备注）\",\"同一个题材板块的股票，K线形态、流通盘、涨停时间、分时形态以及跟题材的关联度（我们把个股跟题材的关联度称为题材硬度）最好有所熟悉，然后填入类似下图的电子表格。\",\"昨日涨停指数的复盘 \",\"通达信昨日涨停指数（880863）或者同花顺昨日涨停指数（883900）这两个指数。能把昨日涨停的股票，在今天的整体表现情况呈现出来，使得我们能够直观感知市场情绪的变化。此外，昨日涨停板块里相关个股今天的表现，也能清晰地反映出来。\",\"跌停板的复盘 \",\"市场上由于某个利空而出现的偶尔的跌停还不足以伤害市场人气，但是，一旦出现多只跌停，或者多只大跌，就有点像“三人成虎”的故事，那么市场的炒作情绪就会受到影响，而情绪是会传递的，我们要见微知著，通过对跌停板的分析，快速地去判断风险是否来临，所以跌停板复盘很重要，能够帮我们快速甄别风险并且预防风险。\",\"异动复盘 \",\"这里的异动复盘，主要指针对振幅、换手率、量比、成交额等进行复盘。每天进行复盘的时候，振幅最大的前30名、换手率最大的前30名、量比最大的前30名的都要看看。因为这些反映了资金参与的活跃度。\",\"对成交额大的股票进行复盘，主要看资金集中在哪些票上面，是题材股还是白马股身上。如果体现在权重股身上，而且是大跌，就要注意，个股所在的位置，如果位置偏高或破位，就可以初步判断对指数可能有负面影响，进而影响市场情绪。\",\"反映市场情绪的数据的复盘 \",\"哪些是反映市场情绪的数据呢？市场高度、涨跌比、涨停家数、跌停家数、连板数量、封板率、一进二成功率、连板存活率等。其目的就是要对市场的情绪和市场环境有清楚的认识。\",\"“当日冲回”的复盘 \",\"当日冲回，就是指当天的冲击波和回头波，初学者基本上没听说过，就笔者所知，许多短线选手也不知道这个。笔者觉得，这是感知市场情绪非常好用的一个工具。虽然在对“振幅、换手率、量比”复盘中，也能感知市场情绪，但不如这个更直观。市场情绪要回暖，有时候，往往需要“反包股”“大长腿”“地天板”来体现。而市场情绪变坏，往往是“瀑布杀”“天地板”“大阴棒”。通过“当日冲回”，很能直观地感知发现。\",\"龙虎榜数据的复盘 \",\"龙虎榜复盘是很重要的复盘，龙虎榜数据代表着市场上最活跃资金的身影，他们是市场上最强势的资金，这部分内容是数据复盘里面很重要的一部分内容。在这里我们可以看到哪些游资席位上榜了哪些股票，他们买入的金额多少，如果有很多的游资席位都上了很大仓位，那代表着近期市场行情比较活跃，这都是能给我们启发的。\",\"龙虎榜怎么看呢？ \",\"看买卖双方的力量对比。买方的总金额要大于卖方的总金额比较好，这样股票上涨的动力更加充足一些。买方的力量平均一些比较好，最好不要出现一家独大的局面，否则第二天的抛压会比较大，但也不是绝对的。\",\"观察龙虎榜资金在第二天的情况，他们是加仓，还是锁仓，还是一日游，通过这样的分析来判断他们对这个题材的认可度。如果几个席位在第一天的涨停中进场，但是在第二天涨停板的龙虎榜中没有见到他们卖出的身影，那么说明他们可能锁仓了，如果是这样，第三天来接力的资金可能就会很谨慎了，因为越涨到后面，这些锁仓的资金就是潜在的抛盘资金。一只活跃的股票，最好是每天换手充分，大家有进有出，这样比较好。\",\"观察常见游资、知名游资的身份和操盘的行为风格。这个市场上的游资有很多种类型，有的喜欢一日游，有的喜欢砸盘，有的喜欢持续加仓做波段，有的口碑好有格局，有的是过街老鼠人人喊打，所以，在平常我们就应该多搜集一些相关的信息，并进行特别的记忆，下次再碰到他们上榜的股票的时候，就能大致清楚他们的风格，并做出相应的决策了。\",\"初学者复盘龙虎榜数据的意义，不在于游资买了什么第二天去跟着买，而是学习游资买股的逻辑。时间久了，有了自己的交易系统，胜率提高后，龙虎榜看不看也就无所谓了。那时候，你和游资就有了“英雄所见略同”的感觉。\",\"盘面回顾主要体现在对“大盘指数”“题材板块”“昨日涨停”“跌停板”“异动复盘”“当日冲回”“反映市场情绪的数据”“龙虎榜”等8个方面进行复盘，然后还要把相关的数据进行记录，好记性不如烂笔头啊。\",\"3.沙盘推演，制定计划 \",\"行成于思毁于随。冲动随意是股票交易之大敌。沙盘推演是必要的，初学者没有这个思维还情有可原。但我发现好多短线选手，也没有这个习惯。须知短线这一行是一个“不成功，就成仁”的智力游戏。所以，如果您是一位有短线基础的读者，建议您养成“盘前推演”的习惯。\",\"盘前推演，我个人认为除了市场环境的预判，主要在两个方面：一是板块资金可能的流动方向，即资金往哪儿去；二对龙头个股“上车条件”的推演分析。\"]},\"407\":{\"c\":[\"金融\"]},\"408\":{\"h\":\"北京炒家\"},\"409\":{\"h\":\"2018-09-19\"},\"410\":{\"h\":\"买入\"},\"411\":{\"h\":\"中天能源600856\"},\"412\":{\"h\":\"K线\",\"t\":[\"均线发散向上\",\"成交量保持不变\"]},\"413\":{\"h\":\"分时图\",\"t\":[\"分时图出现多次大资金买入\"]},\"414\":{\"h\":\"2018-09-21\"},\"415\":{\"h\":\"买入\"},\"416\":{\"h\":\"北讯集团002359\"},\"417\":{\"h\":\"K线\",\"t\":[\"五日均线、十日均线发散向上（节点位置）\",\"MACD金叉\",\"成交量基本保持不变\",\"五日成交量大于十日成交量\"]},\"418\":{\"h\":\"分时图\",\"t\":[\"量升价涨\",\"一直在均价线上\"]},\"419\":{\"h\":\"卖出\"},\"420\":{\"h\":\"中天能源600856\",\"t\":[\"冲击涨停失败\",\"分时图下降趋势明显\",\"应在大于日内成本均线卖出\",\"涨停无法封住也可直接卖出（滚动做T，若后面转强再次封板可再次买入）\"]},\"421\":{\"h\":\"2018-09-25\"},\"422\":{\"h\":\"买入\"},\"423\":{\"h\":\"金财互联002530\"},\"424\":{\"h\":\"K线\",\"t\":[\"MACD金叉\",\"五日十日均线分散向上\",\"五日成交量大于十日成交量\"]},\"425\":{\"h\":\"分时图\",\"t\":[\"量升价涨\",\"一直在均价线上\"]},\"426\":{\"h\":\"卖出\"},\"427\":{\"h\":\"北讯集团0002359\",\"t\":[\"符合预期，但是上涨迅速下跌，跌破均价线\",\"应该再均价线附近卖出，其次是0轴附近，降低回撤\"]},\"428\":{\"h\":\"2018-08-26\"},\"429\":{\"h\":\"买入\"},\"430\":{\"h\":\"山东墨龙032490\"},\"431\":{\"h\":\"K线\",\"t\":[\"MACD属于金叉之后\",\"五日均线十日均线发散向上\",\"五日成交量大于十日成交量\",\"引入KDJ（查看亏钱是否因为J太高导致的）\"]},\"432\":{\"h\":\"分时图\",\"t\":[\"量升价涨\",\"跌破成本价快速上涨\"]},\"433\":{\"h\":\"卖出\"},\"434\":{\"h\":\"金财互联002530\",\"t\":[\"开盘迅速下跌，但是未到0轴\",\"若是均价线卖出则会导致未能获取后面收益\",\"应该查看承接情况，若承接情况查直接卖出，若承接可以则可等待0轴附近再去操作\"]},\"435\":{\"h\":\"2018-09-27\"},\"436\":{\"h\":\"买入\"},\"437\":{\"h\":\"明星电力600101\"},\"438\":{\"h\":\"K线\",\"t\":[\"MACD金叉后\",\"五日均线和十日均线发散向上\",\"五日成交量大于十日程佳亮\",\"KDJ的J为99\",\"筹码越过第一个峰，90%筹码区间集中度24%，70%筹码集中区间集中度19%\"]},\"439\":{\"h\":\"分时图\",\"t\":[\"量升价涨\",\"价格一直在均价线之上，即使低于也会迅速超过，涨停时间十点之前\"]},\"440\":{\"h\":\"卖出\"},\"441\":{\"h\":\"山东墨龙032490\",\"t\":[\"低开不及预期，考虑均价线卖出\",\"迅速上升则可以等待，查看承接情况\"]},\"442\":{\"h\":\"2018-09-28\"},\"443\":{\"h\":\"买入\"},\"444\":{\"h\":\"江泉实业600212\"},\"445\":{\"h\":\"K线\",\"t\":[\"五日均线和十日均线发散向上\",\"五日成交量大于十日成交量\",\"KDJ的J在69\",\"MACD面积顶背离\"]},\"446\":{\"h\":\"分时图\",\"t\":[\"量升价涨\",\"价格一直在均价线之上，也迅速涨停，但是后面开板\"]},\"447\":{\"h\":\"银之杰300085\"},\"448\":{\"h\":\"K线\",\"t\":[\"五日均线和十日均线发散向上\",\"五日成交量大于十日成交量\",\"KDJ的J在76\",\"MACD金叉\",\"筹码越过第一个筹码峰\"]},\"449\":{\"h\":\"分时图\",\"t\":[\"量升价涨\",\"价格一直在均价线之上\",\"涨停时间13：32\"]},\"450\":{\"h\":\"卖出\"},\"451\":{\"h\":\"明星电力600101\",\"t\":[\"竞价可以看出买方较强\",\"开盘超预期，等待封单大幅度减少时应卖出\"]},\"452\":{\"h\":\"2018-10-08\"},\"453\":{\"h\":\"买入\"},\"454\":{\"h\":\"中远海能600026\"},\"455\":{\"h\":\"K线\",\"t\":[\"五日十日二十二日均线发散向上\",\"五日成交量大于十日成交量\",\"KDJ的J91\",\"MACD未背离\"]},\"456\":{\"h\":\"分时图\",\"t\":[\"跳空高开\",\"涨停迅速\",\"承接情况应该是较好\"]},\"457\":{\"h\":\"卖出\"},\"458\":{\"h\":\"江泉实业600212\",\"t\":[\"开盘不及预期，竞价也是卖盘较多，开盘直接卖出\"]},\"459\":{\"h\":\"银之杰300085\",\"t\":[\"开盘迅速下跌，不及预期\",\"不及预期开盘卖出\"]},\"460\":{\"h\":\"2018-10-09\"},\"461\":{\"h\":\"买入\"},\"462\":{\"h\":\"龙头股份600630\"},\"463\":{\"h\":\"K线\",\"t\":[\"五日十日二十二日均线发散向上\",\"五日成交量大于十日成交量\",\"KDJ的J 72\",\"MACD未背离\"]},\"464\":{\"h\":\"分时图\",\"t\":[\"价格基本都在均价线之上\"]},\"465\":{\"h\":\"卖出\"},\"466\":{\"h\":\"中远海能600026\",\"t\":[\"集合竞价若存在大买单可以等一等\",\"价格未跌均价线\",\"若封单大量减少则直接卖出\"]},\"467\":{\"h\":\"2019-10-10\"},\"468\":{\"h\":\"买入\"},\"469\":{\"h\":\"仁智股份002629\"},\"470\":{\"h\":\"K线\",\"t\":[\"突破前高\",\"五日十日二十二日均线发散向上\",\"五日成交量大于十日成交量\",\"KDJ的J 97\"]},\"471\":{\"h\":\"分时图\",\"t\":[\"在均价线之下的时间较少\",\"涨停时间10点之后（后续说连板不做十点之后的）\"]},\"472\":{\"h\":\"卖出\"},\"473\":{\"h\":\"龙头股份600630\",\"t\":[\"开盘不及预期，但是集合竞价有大量买单\",\"水下跌回均价线时，以均价线价格卖出\"]},\"474\":{\"h\":\"涅槃重升\"},\"475\":{\"h\":\"职业炒手\"},\"476\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"477\":{\"h\":\"中间件\"},\"478\":{\"h\":\"框架\"},\"479\":{\"h\":\"理财\"},\"480\":{\"h\":\"运维\"},\"481\":{\"h\":\"读书\"},\"482\":{\"h\":\"个股信息\"},\"483\":{\"h\":\"游资\"}},\"dirtCount\":0,\"index\":[[\"理财\",{\"0\":{\"479\":1}}],[\"理论其实是\",{\"1\":{\"325\":1}}],[\"理论是忽略网络延迟的\",{\"1\":{\"325\":1}}],[\"理论\",{\"0\":{\"321\":1}}],[\"职业炒手\",{\"0\":{\"475\":1}}],[\"涅槃重升\",{\"0\":{\"474\":1}}],[\"突破前高\",{\"1\":{\"470\":1}}],[\"突然一只个股\",{\"1\":{\"398\":1}}],[\"突然主机不可修复\",{\"1\":{\"332\":1}}],[\"突然的长阴杀跌\",{\"1\":{\"243\":1}}],[\"仁智股份002629\",{\"0\":{\"469\":1}}],[\"承接情况应该是较好\",{\"1\":{\"456\":1}}],[\"承载着操作系统和应用程序的实时运行\",{\"1\":{\"70\":1}}],[\"银之杰300085\",{\"0\":{\"447\":1,\"459\":1}}],[\"江泉实业600212\",{\"0\":{\"444\":1,\"458\":1}}],[\"迅速上升则可以等待\",{\"1\":{\"441\":1}}],[\"山东墨龙032490\",{\"0\":{\"430\":1,\"441\":1}}],[\"符合预期\",{\"1\":{\"427\":1}}],[\"符合这种特点的应用并不少见\",{\"1\":{\"131\":1}}],[\"金财互联002530\",{\"0\":{\"423\":1,\"434\":1}}],[\"金融\",{\"2\":{\"407\":1}}],[\"滚动做t\",{\"1\":{\"420\":1}}],[\"冲击涨停失败\",{\"1\":{\"420\":1}}],[\"冲动随意是股票交易之大敌\",{\"1\":{\"406\":1}}],[\"五日十日二十二日均线发散向上\",{\"1\":{\"455\":1,\"463\":1,\"470\":1}}],[\"五日十日均线分散向上\",{\"1\":{\"424\":1}}],[\"五日成交量大于十日程佳亮\",{\"1\":{\"438\":1}}],[\"五日成交量大于十日成交量\",{\"1\":{\"417\":1,\"424\":1,\"431\":1,\"445\":1,\"448\":1,\"455\":1,\"463\":1,\"470\":1}}],[\"五日均线和十日均线发散向上\",{\"1\":{\"438\":1,\"445\":1,\"448\":1}}],[\"五日均线十日均线发散向上\",{\"1\":{\"431\":1}}],[\"五日均线\",{\"1\":{\"417\":1}}],[\"十日均线发散向上\",{\"1\":{\"417\":1}}],[\"十字星线等日k线异常来辨识主力运作痕迹\",{\"1\":{\"398\":2}}],[\"北讯集团0002359\",{\"0\":{\"427\":1}}],[\"北讯集团002359\",{\"0\":{\"416\":1}}],[\"北京炒家\",{\"0\":{\"408\":1}}],[\"建议您养成\",{\"1\":{\"406\":1}}],[\"建议初学者养成每天看新闻联播的习惯\",{\"1\":{\"402\":1}}],[\"建议初学者开始还是要通过打板确认进场比较好\",{\"1\":{\"398\":1}}],[\"须知短线这一行是一个\",{\"1\":{\"406\":1}}],[\"制定计划\",{\"1\":{\"406\":1}}],[\"制作镜像\",{\"1\":{\"291\":1}}],[\"沙盘推演是必要的\",{\"1\":{\"406\":1}}],[\"沙盘推演\",{\"1\":{\"406\":1}}],[\"英雄所见略同\",{\"1\":{\"406\":1}}],[\"英飞拓\",{\"1\":{\"244\":1}}],[\"英飞拓卡位南天信息\",{\"1\":{\"244\":1}}],[\"胜率提高后\",{\"1\":{\"406\":1}}],[\"知名游资的身份和操盘的行为风格\",{\"1\":{\"406\":1}}],[\"瀑布杀\",{\"1\":{\"406\":1}}],[\"地天板\",{\"1\":{\"406\":1}}],[\"振幅\",{\"1\":{\"406\":1}}],[\"振幅最大的前30名\",{\"1\":{\"406\":1}}],[\"许多短线选手也不知道这个\",{\"1\":{\"406\":1}}],[\"许多股票都有多重属性\",{\"1\":{\"406\":1}}],[\"许多时候\",{\"1\":{\"398\":1}}],[\"凡是自然涨停的板\",{\"1\":{\"406\":1}}],[\"除去次新股的一字板以外\",{\"1\":{\"406\":1}}],[\"除了对板块运动进行总结提炼外\",{\"1\":{\"405\":1}}],[\"除了包括上述好处外\",{\"1\":{\"405\":1}}],[\"除了参看部分复盘博客的复盘\",{\"1\":{\"402\":1}}],[\"除了八种基础类型外都是封装类型\",{\"1\":{\"203\":1}}],[\"除了类的信息外\",{\"1\":{\"65\":1}}],[\"里面按照排序点击涨幅最高的\",{\"1\":{\"406\":1}}],[\"里面有\",{\"0\":{\"222\":1}}],[\"沪深300\",{\"1\":{\"406\":1}}],[\"猎人自然降低了预期\",{\"1\":{\"406\":1}}],[\"兵荒马乱\",{\"1\":{\"406\":1}}],[\"未必生意就做得好\",{\"1\":{\"406\":1}}],[\"白天动态盯盘时肯定有好多情况来不及观察\",{\"1\":{\"405\":1}}],[\"离事发时间太近\",{\"1\":{\"405\":1}}],[\"离牢似箭\",{\"1\":{\"398\":1}}],[\"意思就是\",{\"1\":{\"405\":1}}],[\"意味着一轮题材炒作的结束\",{\"1\":{\"404\":1}}],[\"倒推复盘\",{\"1\":{\"405\":1}}],[\"倒换策略\",{\"1\":{\"334\":1}}],[\"倒换时机\",{\"1\":{\"334\":1}}],[\"倒换决策\",{\"1\":{\"334\":1}}],[\"七天的时间肯定夸张了\",{\"1\":{\"405\":1}}],[\"七个阶段\",{\"1\":{\"398\":1}}],[\"向市场学习\",{\"1\":{\"405\":1}}],[\"向当前单列数据集合中添加该数据结合\",{\"1\":{\"14\":1}}],[\"客栈\",{\"1\":{\"405\":1}}],[\"客户端无需分辨不同角色的主机\",{\"1\":{\"335\":1}}],[\"客户端无感知\",{\"1\":{\"332\":1}}],[\"客户端继续访问两台主机\",{\"1\":{\"335\":1}}],[\"客户端只需要把读写操作发送给另一个主机\",{\"1\":{\"335\":1}}],[\"客户端可以将读写操作发送给任意一台主机\",{\"1\":{\"335\":1}}],[\"客户端左右做修改\",{\"1\":{\"334\":1}}],[\"客户端需要感知主从\",{\"1\":{\"333\":1}}],[\"客户端不可写入数据\",{\"1\":{\"333\":1}}],[\"磨剑楼\",{\"1\":{\"405\":1}}],[\"王求道就是在\",{\"1\":{\"405\":1}}],[\"及板块运动的各种变化\",{\"1\":{\"405\":1}}],[\"及时上车\",{\"1\":{\"398\":1}}],[\"及时跟进\",{\"1\":{\"398\":1}}],[\"躲避风险是他们的第一本能反应\",{\"1\":{\"404\":1}}],[\"举一个比较特别的例子\",{\"1\":{\"404\":1}}],[\"举措等时间点\",{\"1\":{\"404\":1}}],[\"务必要重视他们对短线市场的情绪影响\",{\"1\":{\"404\":1}}],[\"贸易战的丰乐种业\",{\"1\":{\"404\":1}}],[\"遇到这种情况\",{\"1\":{\"404\":1}}],[\"昨天进场的人看到后排没有支撑\",{\"1\":{\"404\":1}}],[\"昨日某个题材板块爆发涨停潮\",{\"1\":{\"404\":1}}],[\"昨日的涨停题材成为一日游题材\",{\"1\":{\"404\":1}}],[\"昨日连板指数\",{\"1\":{\"400\":1}}],[\"昨日涨停\",{\"1\":{\"406\":1}}],[\"昨日涨停板块里相关个股今天的表现\",{\"1\":{\"406\":1}}],[\"昨日涨停板块今日表现\",{\"1\":{\"398\":1}}],[\"昨日涨停的票第二天多数平开无溢价\",{\"1\":{\"404\":1}}],[\"昨日涨停个股今日表现\",{\"1\":{\"404\":1}}],[\"昨日涨停股的今日表现\",{\"1\":{\"403\":1}}],[\"昨日涨停指数的复盘\",{\"1\":{\"406\":1}}],[\"昨日涨停指数\",{\"1\":{\"400\":1}}],[\"昨日外盘\",{\"1\":{\"248\":1}}],[\"昨日期货\",{\"1\":{\"248\":1}}],[\"受到国际\",{\"1\":{\"404\":1}}],[\"受到大盘下跌的负面情绪影响而出现盘面恐慌\",{\"1\":{\"404\":1}}],[\"受不了割肉\",{\"1\":{\"395\":1}}],[\"停止昨晚的买入计划或者减小仓位\",{\"1\":{\"404\":1}}],[\"停止防火墙\",{\"1\":{\"263\":1}}],[\"脑海中的第一反应就是风险来临\",{\"1\":{\"404\":1}}],[\"谁来接盘呢\",{\"1\":{\"404\":1}}],[\"绿油油的跌停让人心生恐惧\",{\"1\":{\"404\":1}}],[\"肯定投机情绪不大好\",{\"1\":{\"404\":1}}],[\"试想\",{\"1\":{\"404\":2}}],[\"红彤彤的涨停让人兴奋喜悦\",{\"1\":{\"404\":1}}],[\"红盘的很少\",{\"1\":{\"404\":1}}],[\"红盘个股越多\",{\"1\":{\"404\":1}}],[\"红黑树\",{\"0\":{\"239\":1}}],[\"充分说明个股承接无力\",{\"1\":{\"403\":1}}],[\"明星电力600101\",{\"0\":{\"437\":1,\"451\":1}}],[\"明天这个板块可以继续强势\",{\"1\":{\"406\":1}}],[\"明天大概也是涨\",{\"1\":{\"398\":1}}],[\"明明前一天进场还不错的票\",{\"1\":{\"403\":1}}],[\"手中昨日涨停股的开盘情况\",{\"1\":{\"403\":1}}],[\"道理很简单\",{\"1\":{\"403\":1,\"404\":1}}],[\"抓重点\",{\"1\":{\"403\":1}}],[\"带动了股权转让的票大涨\",{\"1\":{\"403\":1}}],[\"察联动\",{\"1\":{\"403\":1}}],[\"留意板块间资金流动情况\",{\"1\":{\"403\":1}}],[\"坏人\",{\"1\":{\"403\":1}}],[\"远不如\",{\"1\":{\"403\":1}}],[\"学好人\",{\"1\":{\"403\":1}}],[\"学习龙头战法\",{\"1\":{\"398\":1}}],[\"观大局\",{\"1\":{\"403\":1}}],[\"观察常见游资\",{\"1\":{\"406\":1}}],[\"观察龙虎榜资金在第二天的情况\",{\"1\":{\"406\":1}}],[\"观察记录\",{\"1\":{\"405\":1}}],[\"观察板块效应\",{\"1\":{\"398\":1}}],[\"观察热点板块\",{\"1\":{\"255\":1}}],[\"观察资金情况\",{\"0\":{\"252\":1}}],[\"见多识广总是一件好事\",{\"1\":{\"402\":1}}],[\"淘股吧等\",{\"1\":{\"402\":1}}],[\"淘宝的\",{\"1\":{\"314\":1}}],[\"雪球\",{\"1\":{\"402\":1}}],[\"现在的股票软件基本都包含了一些商品期货的走势图\",{\"1\":{\"402\":1}}],[\"现代处理器采用了指令级并行技术\",{\"1\":{\"108\":1}}],[\"美股涨\",{\"1\":{\"402\":1}}],[\"美帝目前还是很牛的\",{\"1\":{\"402\":1}}],[\"外围走势\",{\"1\":{\"402\":1}}],[\"外部依赖的系统存在故障时\",{\"1\":{\"345\":1}}],[\"笔者觉得\",{\"1\":{\"406\":1}}],[\"笔者在实战中一般重点关心三个指数\",{\"1\":{\"406\":1}}],[\"笔者发明了一个新名词叫\",{\"1\":{\"405\":1}}],[\"笔者会留意一下a50期指和人民币汇率走势\",{\"1\":{\"402\":1}}],[\"笔者一般是看看四大报要点的汇总\",{\"1\":{\"402\":1}}],[\"笔记本合盖\",{\"0\":{\"274\":1}}],[\"证券日报\",{\"1\":{\"402\":1}}],[\"证券时报\",{\"1\":{\"402\":1}}],[\"证明今天竞价就有更加多的人愿意做多\",{\"1\":{\"244\":1}}],[\"财联社和选股宝大同小异\",{\"1\":{\"402\":1}}],[\"财联社\",{\"1\":{\"402\":1}}],[\"视二台的财经类节目\",{\"1\":{\"402\":1}}],[\"坚持看新闻\",{\"1\":{\"402\":1}}],[\"坚决不当无脑接盘侠\",{\"1\":{\"398\":1}}],[\"玩笑归玩笑\",{\"1\":{\"402\":1}}],[\"央视的新闻联播每天就是重复讲三件事\",{\"1\":{\"402\":1}}],[\"央视二台\",{\"1\":{\"402\":1}}],[\"央视一台的新联联播\",{\"1\":{\"402\":1}}],[\"央视一台\",{\"1\":{\"402\":1}}],[\"综合篇\",{\"0\":{\"401\":1}}],[\"亏钱效应非常明显\",{\"1\":{\"400\":1}}],[\"短期情绪的冰点\",{\"1\":{\"400\":1}}],[\"短线资金都是很聪明的\",{\"1\":{\"404\":1}}],[\"短线投机的情绪越亢奋\",{\"1\":{\"404\":1}}],[\"短线炒作都将盘面的高标股当作是市场的龙头\",{\"1\":{\"404\":1}}],[\"短线选手自然会想\",{\"1\":{\"404\":1}}],[\"短线选手是根据哪些指标来感知市场的呢\",{\"1\":{\"400\":1}}],[\"短线看盘第四原则\",{\"1\":{\"403\":1}}],[\"短线看盘第三原则\",{\"1\":{\"403\":1}}],[\"短线看盘第二原则\",{\"1\":{\"403\":1}}],[\"短线看盘第一原则\",{\"1\":{\"403\":1}}],[\"短线情绪值急剧降低\",{\"1\":{\"400\":1}}],[\"短线情绪最后一次共振冰点的时刻\",{\"1\":{\"398\":1}}],[\"短线的基本面\",{\"1\":{\"398\":1}}],[\"短线总结\",{\"0\":{\"245\":1}}],[\"期\",{\"1\":{\"400\":1}}],[\"期间的转换过程\",{\"1\":{\"243\":1}}],[\"冰点之后还可以有冰点\",{\"1\":{\"400\":1}}],[\"冰点和高潮\",{\"1\":{\"400\":1}}],[\"封板率在70\",{\"1\":{\"404\":1}}],[\"封板率低\",{\"1\":{\"404\":1}}],[\"封板率+炸板率=1\",{\"1\":{\"404\":1}}],[\"封板率高\",{\"1\":{\"403\":1,\"404\":1}}],[\"封板率高而市场高度板也达到近段时间的高点\",{\"1\":{\"400\":1}}],[\"封板率\",{\"1\":{\"400\":2,\"404\":2,\"406\":1}}],[\"封装类型\",{\"1\":{\"203\":7}}],[\"封装类\",{\"1\":{\"203\":1}}],[\"封装了部分方法\",{\"1\":{\"15\":1}}],[\"跌破成本价快速上涨\",{\"1\":{\"432\":1}}],[\"跌破均价线\",{\"1\":{\"427\":1}}],[\"跌幅较大的板块进行复盘\",{\"1\":{\"406\":1}}],[\"跌停板\",{\"1\":{\"406\":1}}],[\"跌停板的复盘\",{\"1\":{\"406\":1}}],[\"跌停板的数量对市场投机情绪的影响同样非常重要\",{\"1\":{\"404\":1}}],[\"跌停板家数\",{\"1\":{\"404\":1}}],[\"跌停家数的对比情况\",{\"1\":{\"404\":1}}],[\"跌停家数和涨停家数的数据变化\",{\"1\":{\"403\":1}}],[\"跌停家数\",{\"1\":{\"400\":2,\"406\":1}}],[\"跌多涨少\",{\"1\":{\"403\":1}}],[\"跌到25\",{\"1\":{\"398\":1}}],[\"跌到9\",{\"1\":{\"398\":1}}],[\"跌到7\",{\"1\":{\"398\":1}}],[\"跌到5\",{\"1\":{\"398\":1}}],[\"周期与情绪周期\",{\"1\":{\"400\":1}}],[\"周k线\",{\"1\":{\"398\":1}}],[\"事物逐渐的量变\",{\"1\":{\"400\":2}}],[\"事物精微变化之理\",{\"1\":{\"400\":1}}],[\"事务处理结束后\",{\"1\":{\"324\":1}}],[\"事务问题\",{\"1\":{\"314\":1}}],[\"择时间\",{\"0\":{\"399\":1}}],[\"呈现对称起涨的特点\",{\"1\":{\"398\":1}}],[\"挖坑逆转的形态及特征\",{\"1\":{\"398\":1}}],[\"波段\",{\"1\":{\"398\":1}}],[\"波段逆势或部分k线形态异常\",{\"1\":{\"398\":1}}],[\"量升价涨\",{\"1\":{\"418\":1,\"425\":1,\"432\":1,\"439\":1,\"446\":1,\"449\":1}}],[\"量比最大的前30名的都要看看\",{\"1\":{\"406\":1}}],[\"量比\",{\"1\":{\"406\":2}}],[\"量价情况是否符合预期\",{\"1\":{\"403\":1}}],[\"量区的阳高阴低也形成了n字结构\",{\"1\":{\"398\":1}}],[\"量能是不能具体量化\",{\"1\":{\"244\":1}}],[\"诚为可叹\",{\"1\":{\"398\":1}}],[\"阳密阴疏\",{\"1\":{\"398\":1}}],[\"阳多阴少\",{\"1\":{\"398\":1}}],[\"阳高阴低\",{\"1\":{\"398\":1}}],[\"少数派知识\",{\"1\":{\"398\":1}}],[\"健康的筹码结构是\",{\"1\":{\"398\":1}}],[\"恐慌盘其实也是套牢盘和获利盘的一部分\",{\"1\":{\"398\":1}}],[\"避为上策\",{\"1\":{\"398\":1}}],[\"避免非核心业务影响核心业务\",{\"1\":{\"359\":1}}],[\"避免添加或修改功能时改动内容过多\",{\"1\":{\"347\":1}}],[\"避免少量数据导致整体业务不可用\",{\"1\":{\"344\":1}}],[\"避免线程阻塞和唤醒而影响性能\",{\"1\":{\"160\":1}}],[\"避免执行cas操作\",{\"1\":{\"160\":1}}],[\"藏身于f10里的股东结构里\",{\"1\":{\"398\":1}}],[\"跳空高开\",{\"1\":{\"456\":1}}],[\"跳空缺口\",{\"1\":{\"398\":1}}],[\"跳转\",{\"1\":{\"69\":1}}],[\"刑满出狱\",{\"1\":{\"398\":1}}],[\"请读者揣摩一下被套牢的人一朝\",{\"1\":{\"398\":1}}],[\"请求重试\",{\"1\":{\"359\":1}}],[\"坐牢的牢与套牢的牢完全一样\",{\"1\":{\"398\":1}}],[\"迫不及待地抛出\",{\"1\":{\"398\":1}}],[\"厌恶损失\",{\"1\":{\"398\":1}}],[\"终于某天股价涨至成本价附近\",{\"1\":{\"398\":1}}],[\"终于按捺不住\",{\"1\":{\"398\":1}}],[\"套牢盘主要体现在三个地方\",{\"1\":{\"398\":1}}],[\"套牢盘的抛压往往会不约而同的一致\",{\"1\":{\"398\":1}}],[\"套牢盘\",{\"1\":{\"398\":1}}],[\"套了这么久\",{\"1\":{\"398\":1}}],[\"得到后怕失去\",{\"1\":{\"398\":1}}],[\"密集成交带\",{\"1\":{\"398\":2}}],[\"密码\",{\"1\":{\"284\":1}}],[\"莫不如是\",{\"1\":{\"398\":1}}],[\"月k线\",{\"1\":{\"398\":1}}],[\"河宽就是主力预想中的\",{\"1\":{\"398\":1}}],[\"河宽\",{\"1\":{\"398\":1}}],[\"蓄势待时\",{\"1\":{\"398\":1}}],[\"打个不恰当的比方\",{\"1\":{\"403\":1}}],[\"打出股价上行空间\",{\"1\":{\"398\":1}}],[\"打包\",{\"0\":{\"290\":1}}],[\"顶背离现象一般是股价在高位即将反转转势的信号\",{\"1\":{\"398\":1}}],[\"表现比较凌乱时\",{\"1\":{\"403\":1}}],[\"表现为以下两个特点\",{\"1\":{\"398\":1}}],[\"表现出抗跌\",{\"1\":{\"398\":1}}],[\"表明股价短期内即将下跌\",{\"1\":{\"398\":1}}],[\"表示正在运行对象的类\",{\"1\":{\"229\":1}}],[\"表示禁止重排序\",{\"1\":{\"190\":1}}],[\"联动性怎么样\",{\"1\":{\"398\":1}}],[\"联盟\",{\"1\":{\"301\":1}}],[\"想象空间怎么样\",{\"1\":{\"398\":1}}],[\"⑥李总和张总之间个人魅力也有差异\",{\"1\":{\"398\":1}}],[\"⑤李总的项目是夕阳产业\",{\"1\":{\"398\":1}}],[\"④做企业的老板\",{\"1\":{\"398\":1}}],[\"抗跌\",{\"1\":{\"398\":1}}],[\"抗跌吗\",{\"1\":{\"398\":1}}],[\"③在企业经营中\",{\"1\":{\"398\":1}}],[\"团结互助\",{\"1\":{\"398\":1}}],[\"团队骨干跑到张总那去了\",{\"1\":{\"398\":1}}],[\"团队之间上行下效\",{\"1\":{\"398\":1}}],[\"团队效率下降\",{\"1\":{\"358\":1}}],[\"团队等排出优先级\",{\"1\":{\"309\":1}}],[\"员工有去有留\",{\"1\":{\"398\":1}}],[\"②铁打的营盘流水的兵\",{\"1\":{\"398\":1}}],[\"寓意\",{\"1\":{\"398\":6}}],[\"①项目要好\",{\"1\":{\"398\":1}}],[\"挥剑斩仓莫迟疑\",{\"1\":{\"398\":1}}],[\"政策打压\",{\"1\":{\"398\":1}}],[\"政府\",{\"0\":{\"390\":1}}],[\"统统不值一看\",{\"1\":{\"398\":1}}],[\"至少板块中有3只以上涨停\",{\"1\":{\"398\":1}}],[\"至于信息题材的收集渠道\",{\"1\":{\"398\":1}}],[\"至于它是否可以运行\",{\"1\":{\"56\":1}}],[\"盘前推演\",{\"1\":{\"406\":2}}],[\"盘前准备\",{\"1\":{\"405\":1}}],[\"盘中复盘\",{\"1\":{\"405\":1}}],[\"盘后复盘主要分两个环节\",{\"1\":{\"405\":1}}],[\"盘后复盘\",{\"1\":{\"405\":1}}],[\"盘面回顾主要体现在对\",{\"1\":{\"406\":1}}],[\"盘面回顾\",{\"1\":{\"406\":1}}],[\"盘面大概率好不到哪里去\",{\"1\":{\"404\":1}}],[\"盘面人气股的表现\",{\"1\":{\"404\":1}}],[\"盘面比较活跃\",{\"1\":{\"403\":1}}],[\"盘面上有时存在多个并列的主流题材炒作\",{\"1\":{\"403\":1}}],[\"盘面主流题材的表现情况\",{\"1\":{\"403\":2}}],[\"盘面表现为\",{\"1\":{\"400\":1}}],[\"盘面表现强\",{\"1\":{\"398\":1}}],[\"盘子小\",{\"1\":{\"398\":2}}],[\"盘子大小\",{\"1\":{\"398\":1}}],[\"级别怎么样\",{\"1\":{\"398\":1}}],[\"既是一种休息\",{\"1\":{\"402\":1}}],[\"既是指挥官\",{\"1\":{\"398\":1}}],[\"既然叫人气股\",{\"1\":{\"404\":1}}],[\"既然是龙头\",{\"1\":{\"398\":1}}],[\"既然是要做高位的弱转强\",{\"1\":{\"244\":1}}],[\"既然有了高度\",{\"1\":{\"398\":1}}],[\"既然号称保险资金\",{\"1\":{\"391\":1}}],[\"甚至只是紧张兮兮地盯着自己买过的股票\",{\"1\":{\"405\":1}}],[\"甚至是每次板块运动结束后就开始总结\",{\"1\":{\"405\":1}}],[\"甚至是100\",{\"1\":{\"398\":1}}],[\"甚至低开\",{\"1\":{\"404\":1}}],[\"甚至出现多只低开的情况\",{\"1\":{\"404\":1}}],[\"甚至竞价就直接卖出\",{\"1\":{\"403\":1}}],[\"甚至有几个股票出现大跌\",{\"1\":{\"403\":1}}],[\"甚至很多还出现了低开\",{\"1\":{\"403\":1}}],[\"甚至强势的情况下断板了\",{\"1\":{\"244\":1}}],[\"首板晋级为二板的胜率18\",{\"1\":{\"398\":1}}],[\"首先也必须知道在情绪流选手中各个层级的地位\",{\"1\":{\"398\":1}}],[\"首先你得明白这三个字是什么意思\",{\"1\":{\"244\":1}}],[\"首先于大盘而言\",{\"1\":{\"243\":1}}],[\"首先标记出所有需要回收的对象\",{\"1\":{\"77\":1}}],[\"博傻者接棒\",{\"1\":{\"398\":1}}],[\"聪明者跟随\",{\"1\":{\"398\":1}}],[\"聪明的猎人\",{\"1\":{\"406\":1}}],[\"聪明的资金都在等消息落地\",{\"1\":{\"404\":1}}],[\"聪明的选手就要懂得预判\",{\"1\":{\"398\":1}}],[\"聪明的跟随者\",{\"1\":{\"398\":2}}],[\"送给谁也不知道\",{\"1\":{\"398\":1}}],[\"忙着给股市送钱\",{\"1\":{\"398\":1}}],[\"辛苦辛苦地忙\",{\"1\":{\"398\":1}}],[\"家里有矿也抵不住\",{\"1\":{\"398\":1}}],[\"早晚失败\",{\"1\":{\"398\":1}}],[\"早间\",{\"0\":{\"248\":1}}],[\"长期不思考\",{\"1\":{\"398\":1}}],[\"长度是否相同\",{\"1\":{\"98\":1}}],[\"尤其在市场环境好\",{\"1\":{\"398\":1}}],[\"尤其是初学者\",{\"1\":{\"405\":1}}],[\"尤其是昨日比较强势的涨停板或者一字板\",{\"1\":{\"404\":1}}],[\"尤其是在股票这种金融投资领域\",{\"1\":{\"404\":1}}],[\"尤其是在盘面不好的时候\",{\"1\":{\"404\":1}}],[\"尤其是在大盘至暗时刻\",{\"1\":{\"398\":1}}],[\"尤其是后者\",{\"1\":{\"398\":1}}],[\"尤其是分时呈现颓势\",{\"1\":{\"398\":1}}],[\"尤其是大盘表现\",{\"1\":{\"398\":1}}],[\"尤其是龙头股还未成为龙头股之前\",{\"1\":{\"398\":1}}],[\"乱买似乎也对\",{\"1\":{\"398\":1}}],[\"推动到我们面前\",{\"1\":{\"398\":1}}],[\"潜在的龙头股在真正成为龙头股之前\",{\"1\":{\"398\":1}}],[\"奋发图强\",{\"1\":{\"398\":1}}],[\"形成了巨大的赚钱效应\",{\"1\":{\"403\":1}}],[\"形成一致性情绪不利于个股走高\",{\"1\":{\"398\":1}}],[\"形态\",{\"1\":{\"398\":1}}],[\"补涨可以在总龙头结束之后启动\",{\"1\":{\"398\":1}}],[\"补涨股里面也会诞生当下的市场环境下的龙头\",{\"1\":{\"398\":1}}],[\"补涨股的高度一般不及龙头\",{\"1\":{\"398\":1}}],[\"补涨龙头\",{\"1\":{\"398\":1}}],[\"抢夺资金\",{\"1\":{\"398\":1}}],[\"卡位的核心是分流\",{\"1\":{\"398\":1}}],[\"卡位龙头\",{\"1\":{\"398\":1}}],[\"越强的个股越有可能走成龙头\",{\"1\":{\"398\":1}}],[\"西安旅游就是支线龙头\",{\"1\":{\"398\":1}}],[\"西方爆发资产阶级革命和工业革命\",{\"1\":{\"385\":1}}],[\"支线龙头\",{\"1\":{\"398\":1}}],[\"支持安全防护\",{\"1\":{\"319\":1}}],[\"支持完整的数据库协议和\",{\"1\":{\"314\":1}}],[\"支持多种编程语言\",{\"1\":{\"314\":1}}],[\"支持多线程\",{\"1\":{\"201\":1}}],[\"住那一根k线一样的形态\",{\"1\":{\"398\":1}}],[\"好记性不如烂笔头啊\",{\"1\":{\"406\":1}}],[\"好人\",{\"1\":{\"403\":1}}],[\"好像\",{\"1\":{\"398\":1}}],[\"好不容易快回到成本位置\",{\"1\":{\"398\":1}}],[\"共振\",{\"1\":{\"405\":1}}],[\"共振冰点时\",{\"1\":{\"400\":1}}],[\"共同特点是散户有可能买到\",{\"1\":{\"398\":1}}],[\"共享的long和double变量的为什么要用volatile\",{\"0\":{\"185\":1}}],[\"共享锁是指该锁可被多个线程所持有\",{\"1\":{\"163\":1}}],[\"共享锁\",{\"0\":{\"163\":1}}],[\"换手率最大的前30名\",{\"1\":{\"406\":1}}],[\"换手率\",{\"1\":{\"406\":2}}],[\"换手龙头是从另一个维度来谈市场地位\",{\"1\":{\"398\":1}}],[\"换手龙头\",{\"1\":{\"398\":1}}],[\"换手板的龙头走得更长远\",{\"1\":{\"398\":1}}],[\"换手板\",{\"1\":{\"398\":1}}],[\"换手不充分转强\",{\"1\":{\"244\":1}}],[\"游资\",{\"0\":{\"483\":1}}],[\"游资私募就像猎人\",{\"1\":{\"406\":1}}],[\"游资或超短选手往往是半路\",{\"1\":{\"398\":1}}],[\"游戏接入系统重构\",{\"1\":{\"379\":1}}],[\"点火\",{\"1\":{\"398\":1}}],[\"点击政策一栏\",{\"1\":{\"402\":1}}],[\"点击历史可进入正在运行的流水线\",{\"1\":{\"292\":1}}],[\"点击\",{\"1\":{\"292\":1}}],[\"点击应用\",{\"1\":{\"291\":1}}],[\"点击下一步\",{\"1\":{\"271\":1}}],[\"称为共振冰点\",{\"1\":{\"400\":1}}],[\"称为秒板\",{\"1\":{\"398\":1}}],[\"称为半路买入\",{\"1\":{\"398\":1}}],[\"称之为紧盘\",{\"1\":{\"398\":1}}],[\"称之为\",{\"1\":{\"108\":1}}],[\"显然在涨停家数多的局面下\",{\"1\":{\"404\":1}}],[\"显然不大\",{\"1\":{\"244\":1}}],[\"显示存在筹码交换\",{\"1\":{\"398\":1}}],[\"显得盘口很有气势\",{\"1\":{\"398\":1}}],[\"半路\",{\"1\":{\"398\":1}}],[\"往上翘\",{\"1\":{\"398\":1}}],[\"往往需要\",{\"1\":{\"406\":1}}],[\"往往只见树木\",{\"1\":{\"405\":1}}],[\"往往能卖在最高点\",{\"1\":{\"403\":1}}],[\"往往就是短线情绪的冰点\",{\"1\":{\"400\":1}}],[\"往往决定于题材的级别\",{\"1\":{\"398\":1}}],[\"往往买不到\",{\"1\":{\"398\":1}}],[\"往往是\",{\"1\":{\"406\":1}}],[\"往往是以国家安定这个大环境为前提的\",{\"1\":{\"406\":1}}],[\"往往是以大海没有恶劣气候为前提的\",{\"1\":{\"406\":1}}],[\"往往是以独立个股的形式出现\",{\"1\":{\"398\":1}}],[\"往往是前一天的热点\",{\"1\":{\"403\":1}}],[\"往往是90\",{\"1\":{\"398\":1}}],[\"往往是行业龙头股和低价蓝筹股\",{\"1\":{\"393\":1}}],[\"往往行稳致远\",{\"1\":{\"393\":1}}],[\"翘这个词\",{\"1\":{\"398\":1}}],[\"翘板往往是大资金所为\",{\"1\":{\"398\":1}}],[\"翘板\",{\"1\":{\"398\":1}}],[\"扫板或排板买入\",{\"1\":{\"398\":1}}],[\"扫板\",{\"1\":{\"398\":1}}],[\"估计有没有希望成交\",{\"1\":{\"398\":1}}],[\"估值高低\",{\"1\":{\"243\":1}}],[\"找出跟信息题材相呼应的股票\",{\"1\":{\"398\":1}}],[\"找出异动个股\",{\"1\":{\"398\":1}}],[\"找出长度最短的字符串长度\",{\"1\":{\"99\":1}}],[\"找到自己单子的位置\",{\"1\":{\"398\":1}}],[\"继而割肉或者死拿\",{\"1\":{\"398\":1}}],[\"继承自\",{\"1\":{\"211\":2}}],[\"继承整个\",{\"1\":{\"141\":1}}],[\"继承\",{\"0\":{\"141\":1},\"1\":{\"140\":1,\"202\":1}}],[\"继承了\",{\"1\":{\"15\":1}}],[\"吃不得亏\",{\"1\":{\"398\":1}}],[\"落袋为安\",{\"1\":{\"398\":2,\"404\":1}}],[\"赚了就跑\",{\"1\":{\"398\":2}}],[\"赚取蝇头小利\",{\"1\":{\"395\":1}}],[\"算了卖了\",{\"1\":{\"398\":1}}],[\"算法选举或者简单的\",{\"1\":{\"342\":1}}],[\"算法\",{\"1\":{\"78\":1}}],[\"算法来进行回收\",{\"1\":{\"77\":1}}],[\"算法一样\",{\"1\":{\"77\":1}}],[\"算法分为\",{\"1\":{\"77\":1}}],[\"妈呀\",{\"1\":{\"398\":1}}],[\"快速地去判断风险是否来临\",{\"1\":{\"406\":1}}],[\"快速回到0轴\",{\"1\":{\"244\":1}}],[\"快捷键ctrl+q可以在个股里面进行备注\",{\"1\":{\"406\":1}}],[\"快跌停了\",{\"1\":{\"398\":1}}],[\"啊\",{\"1\":{\"398\":4}}],[\"气人\",{\"1\":{\"398\":1}}],[\"哎\",{\"1\":{\"398\":3}}],[\"干脆卖了再说\",{\"1\":{\"398\":1}}],[\"卖出\",{\"0\":{\"419\":1,\"426\":1,\"433\":1,\"440\":1,\"450\":1,\"457\":1,\"465\":1,\"472\":1}}],[\"卖的人多了\",{\"1\":{\"404\":1}}],[\"卖\",{\"1\":{\"398\":1}}],[\"卖还是不卖呢\",{\"1\":{\"398\":1}}],[\"卖了跌的去买涨的\",{\"1\":{\"398\":1}}],[\"卖了算了\",{\"1\":{\"398\":1}}],[\"卖了算啦\",{\"1\":{\"398\":1}}],[\"卖了先\",{\"1\":{\"398\":1}}],[\"卖股票的原因\",{\"1\":{\"398\":1}}],[\"哇\",{\"1\":{\"398\":1}}],[\"朋友也说还可以\",{\"1\":{\"398\":1}}],[\"电视上这位大师都说这只股票不错\",{\"1\":{\"398\":1}}],[\"马上就止跌了\",{\"1\":{\"398\":1}}],[\"感知环境\",{\"1\":{\"406\":1}}],[\"感觉已到支撑位\",{\"1\":{\"398\":1}}],[\"感悟市场\",{\"1\":{\"253\":1}}],[\"市面上有些人主张不要预判\",{\"1\":{\"398\":1}}],[\"市北高新是主线题材龙头\",{\"1\":{\"398\":1}}],[\"市盈率不高\",{\"1\":{\"398\":1}}],[\"市场上由于某个利空而出现的偶尔的跌停还不足以伤害市场人气\",{\"1\":{\"406\":1}}],[\"市场上往往会有很多同属性的跟风票一起涨\",{\"1\":{\"403\":1}}],[\"市场也会做出剧烈的反应\",{\"1\":{\"404\":1}}],[\"市场的情绪本来就是相互传递\",{\"1\":{\"404\":1}}],[\"市场一旦出现了较多的跌停\",{\"1\":{\"404\":1}}],[\"市场越活跃\",{\"1\":{\"404\":1}}],[\"市场氛围好\",{\"1\":{\"403\":1}}],[\"市场领涨股对整个盘面的影响\",{\"1\":{\"403\":1}}],[\"市场资金充沛\",{\"1\":{\"403\":1}}],[\"市场资金有无明显攻击方向\",{\"1\":{\"249\":1}}],[\"市场高度往往也在4板甚至3板以下\",{\"1\":{\"400\":1}}],[\"市场高度\",{\"1\":{\"400\":3,\"406\":1}}],[\"市场错了还是对的\",{\"1\":{\"398\":1}}],[\"市场对的是对的\",{\"1\":{\"398\":1}}],[\"市场环境不好\",{\"1\":{\"406\":1}}],[\"市场环境好时\",{\"1\":{\"398\":1}}],[\"市场环境及情绪周期\",{\"1\":{\"398\":1}}],[\"市场地位高则高矣\",{\"1\":{\"398\":1}}],[\"市场地位篇\",{\"1\":{\"398\":1}}],[\"市场总龙头是当前市场身位最高的\",{\"1\":{\"398\":1}}],[\"市场总龙头\",{\"1\":{\"398\":1}}],[\"市场选择它的各个分支属性进行炒作\",{\"1\":{\"398\":1}}],[\"市场情绪要回暖\",{\"1\":{\"406\":1}}],[\"市场情绪\",{\"1\":{\"398\":1}}],[\"市场底部的可能性大大增加\",{\"1\":{\"391\":1}}],[\"市场合力中\",{\"1\":{\"387\":1}}],[\"市场合力拉升股价至涨停\",{\"1\":{\"386\":1}}],[\"市场隔夜单\",{\"1\":{\"249\":1}}],[\"均线发散向上\",{\"1\":{\"412\":1}}],[\"均线归位\",{\"1\":{\"398\":1}}],[\"均衡性\",{\"1\":{\"336\":1}}],[\"任何题材\",{\"1\":{\"398\":1}}],[\"任何一个人都曾经是无脑接盘侠\",{\"1\":{\"398\":1}}],[\"任何人都不可能有什么独创\",{\"1\":{\"398\":1}}],[\"任由亏损放大\",{\"1\":{\"398\":1}}],[\"任务将再次分配给该机器\",{\"1\":{\"342\":1}}],[\"任务不再将任务分配给该机器\",{\"1\":{\"342\":1}}],[\"任务采取某种策略\",{\"1\":{\"342\":1}}],[\"任务如何重新执行\",{\"1\":{\"339\":1}}],[\"任务平分类\",{\"1\":{\"319\":1}}],[\"任务分解\",{\"1\":{\"303\":1}}],[\"任务分配的策略更加复杂\",{\"1\":{\"342\":1}}],[\"任务分配器将不同的任务分配给不同的角色\",{\"1\":{\"342\":1}}],[\"任务分配器会更复杂一些\",{\"1\":{\"341\":1}}],[\"任务分配器不会自动的将原来发给主机的任务发给从机\",{\"1\":{\"341\":1}}],[\"任务分配器继续将任务发送给主机\",{\"1\":{\"340\":1,\"341\":1}}],[\"任务分配其不会自动将任务发送给备机\",{\"1\":{\"340\":1}}],[\"任务分配\",{\"1\":{\"303\":1}}],[\"太过一致\",{\"1\":{\"402\":1}}],[\"太阳底下没有新鲜事物\",{\"1\":{\"398\":1}}],[\"太多的人期望高回报\",{\"1\":{\"395\":1}}],[\"投机像山岳一样古老\",{\"1\":{\"398\":1}}],[\"投资目标与游资高度近似\",{\"1\":{\"394\":1}}],[\"真理的颗粒\",{\"1\":{\"398\":1}}],[\"真正实现\",{\"1\":{\"59\":1}}],[\"做不好\",{\"1\":{\"406\":1}}],[\"做有用功\",{\"1\":{\"405\":1}}],[\"做股票时要关注商品期货的走势\",{\"1\":{\"402\":1}}],[\"做好准备要出局\",{\"1\":{\"398\":1}}],[\"做一个清醒的博傻者\",{\"1\":{\"398\":1}}],[\"做一个聪明的跟随者\",{\"1\":{\"398\":2}}],[\"做龙头为主\",{\"1\":{\"398\":1}}],[\"做自己熟悉的看得懂的就行\",{\"1\":{\"244\":1}}],[\"改变交易策略\",{\"1\":{\"398\":1}}],[\"改用传统的互斥同步可能会比原子类更高效\",{\"1\":{\"128\":1}}],[\"讲\",{\"1\":{\"398\":1}}],[\"信息题材和市场情绪\",{\"1\":{\"398\":1}}],[\"信息题材\",{\"1\":{\"398\":1}}],[\"信创明确的情况下\",{\"1\":{\"244\":1}}],[\"完了\",{\"1\":{\"398\":1}}],[\"完全不同于一般技术派脱离\",{\"1\":{\"398\":1}}],[\"完成事务\",{\"1\":{\"336\":2}}],[\"完成了一次卡位\",{\"1\":{\"244\":1}}],[\"筹码越过第一个筹码峰\",{\"1\":{\"448\":1}}],[\"筹码越过第一个峰\",{\"1\":{\"438\":1}}],[\"筹码集中区间集中度19\",{\"1\":{\"438\":1}}],[\"筹码区间集中度24\",{\"1\":{\"438\":1}}],[\"筹码均匀分散\",{\"1\":{\"398\":1}}],[\"筹码结构健康\",{\"1\":{\"398\":1}}],[\"筹码结构分析\",{\"1\":{\"398\":1}}],[\"筹码惜售\",{\"1\":{\"244\":1}}],[\"鲜少见诸市面\",{\"1\":{\"398\":1}}],[\"龙虎榜\",{\"1\":{\"406\":1}}],[\"龙虎榜看不看也就无所谓了\",{\"1\":{\"406\":1}}],[\"龙虎榜怎么看呢\",{\"1\":{\"406\":1}}],[\"龙虎榜数据代表着市场上最活跃资金的身影\",{\"1\":{\"406\":1}}],[\"龙虎榜数据的复盘\",{\"1\":{\"406\":1}}],[\"龙虎榜复盘是很重要的复盘\",{\"1\":{\"406\":1}}],[\"龙回头\",{\"1\":{\"398\":1}}],[\"龙头对市场的影响是巨大的\",{\"1\":{\"404\":1}}],[\"龙头高度越高\",{\"1\":{\"404\":1}}],[\"龙头涨到一定高度\",{\"1\":{\"403\":1}}],[\"龙头涨停\",{\"1\":{\"398\":1}}],[\"龙头倒下\",{\"1\":{\"405\":1}}],[\"龙头倒\",{\"1\":{\"403\":1}}],[\"龙头倒了\",{\"1\":{\"403\":1}}],[\"龙头是天顺股份\",{\"1\":{\"403\":1}}],[\"龙头是强者\",{\"1\":{\"398\":1}}],[\"龙头分时明显无力\",{\"1\":{\"398\":1}}],[\"龙头分时现颓势\",{\"1\":{\"398\":1}}],[\"龙头分歧的结果\",{\"1\":{\"398\":1}}],[\"龙头能否带起板块效应\",{\"1\":{\"398\":1}}],[\"龙头能领涨\",{\"1\":{\"398\":1}}],[\"龙头的高度代表着市场短线资金的情绪\",{\"1\":{\"404\":1}}],[\"龙头的高度会刺激还未启动的个股走强\",{\"1\":{\"398\":1}}],[\"龙头的特点是领涨\",{\"1\":{\"398\":1}}],[\"龙头的背后是板块\",{\"1\":{\"398\":1}}],[\"龙头k线形态篇\",{\"1\":{\"398\":1}}],[\"龙头战法\",{\"1\":{\"402\":1}}],[\"龙头战法要诀\",{\"1\":{\"398\":3}}],[\"龙头战法的\",{\"1\":{\"398\":2}}],[\"龙头战法的重要思维\",{\"1\":{\"398\":1}}],[\"龙头战法基础知识\",{\"1\":{\"398\":1}}],[\"龙头战法效率最高\",{\"1\":{\"395\":1}}],[\"龙头一倒\",{\"1\":{\"398\":1}}],[\"龙头上涨\",{\"1\":{\"398\":1}}],[\"龙头\",{\"1\":{\"398\":2}}],[\"龙头股份600630\",{\"0\":{\"462\":1,\"473\":1}}],[\"龙头股对市场短线炒作的影响力巨大\",{\"1\":{\"403\":1}}],[\"龙头股表示出强势没有\",{\"1\":{\"398\":1}}],[\"龙头股k线形态怎么样\",{\"1\":{\"398\":1}}],[\"龙头股连板的概率最高\",{\"1\":{\"398\":1}}],[\"龙头股自然往往是一字板\",{\"1\":{\"398\":1}}],[\"龙头股总是最后倒下的\",{\"1\":{\"398\":1}}],[\"龙头股的走势\",{\"1\":{\"403\":1}}],[\"龙头股的价格怎么样\",{\"1\":{\"398\":1}}],[\"龙头股的重要特性是要有板块跟随\",{\"1\":{\"398\":1}}],[\"龙头股的演进过程\",{\"1\":{\"398\":1}}],[\"龙头股的领涨也是这样\",{\"1\":{\"398\":1}}],[\"龙头股的六大特征\",{\"1\":{\"398\":1}}],[\"龙头股尤其如此\",{\"1\":{\"398\":1}}],[\"龙头股\",{\"1\":{\"387\":1}}],[\"龙头前期阶段的烂板\",{\"1\":{\"244\":1}}],[\"龙头放出大量换手\",{\"1\":{\"244\":1}}],[\"龙头缩量加速\",{\"1\":{\"244\":1}}],[\"底部大量获利的资金\",{\"1\":{\"398\":1}}],[\"鹤立鸡群\",{\"1\":{\"398\":1}}],[\"毫无疑问\",{\"1\":{\"398\":1}}],[\"毫无章法\",{\"1\":{\"395\":1}}],[\"世人不识凌云木\",{\"1\":{\"398\":1}}],[\"世界上大部分事情\",{\"1\":{\"395\":1}}],[\"混杂在杂草间\",{\"1\":{\"398\":1}}],[\"混沌的世界\",{\"1\":{\"386\":1}}],[\"春寒料峭\",{\"1\":{\"398\":1}}],[\"孤龙难立金字塔\",{\"1\":{\"398\":1}}],[\"众星捧月金字塔\",{\"1\":{\"398\":1}}],[\"没过多久\",{\"1\":{\"398\":1}}],[\"没人信没人跟\",{\"1\":{\"398\":1}}],[\"没有较好影响力的题材经常出现一日游的情况\",{\"1\":{\"404\":1}}],[\"没有他们\",{\"1\":{\"398\":1}}],[\"没有经过学习修炼的人\",{\"1\":{\"398\":1}}],[\"没有预判的跟随是瞎跟随\",{\"1\":{\"398\":1}}],[\"没有一样技术完全是自己的独创\",{\"1\":{\"398\":1}}],[\"没有板块不成龙头\",{\"1\":{\"398\":1}}],[\"没有组织纪律\",{\"1\":{\"395\":1}}],[\"没有微服务治理\",{\"1\":{\"358\":1}}],[\"没有自动化支持\",{\"1\":{\"358\":1}}],[\"没有进程竞争\",{\"1\":{\"318\":1}}],[\"没有进程间通信\",{\"1\":{\"318\":1}}],[\"没有成功获得锁\",{\"1\":{\"159\":1}}],[\"没有设置\",{\"1\":{\"137\":2}}],[\"没有额外空间对它进行分配担保\",{\"1\":{\"77\":1}}],[\"老板抗压力能力强\",{\"1\":{\"398\":1}}],[\"老大说话做事\",{\"1\":{\"398\":1}}],[\"老年老代gc策略\",{\"1\":{\"78\":1}}],[\"老年代串行\",{\"1\":{\"78\":1}}],[\"老年代标记\",{\"1\":{\"78\":3}}],[\"老年代使用串行回收\",{\"1\":{\"78\":1}}],[\"老年代\",{\"1\":{\"71\":2}}],[\"树倒猢狲散\",{\"1\":{\"398\":1}}],[\"树退化为链表\",{\"1\":{\"41\":1}}],[\"树退化成链表的最大元素数量\",{\"1\":{\"41\":1}}],[\"领跌板块只注意其龙头\",{\"1\":{\"403\":1}}],[\"领跌的特性往往比领涨更灵验\",{\"1\":{\"398\":1}}],[\"领跌品种严重超跌\",{\"1\":{\"243\":1}}],[\"领涨气质没有\",{\"1\":{\"398\":1}}],[\"领涨是龙头的特性\",{\"1\":{\"398\":1}}],[\"领涨吗\",{\"1\":{\"398\":1}}],[\"领涨\",{\"1\":{\"398\":1}}],[\"狂飙突进\",{\"1\":{\"398\":1}}],[\"万马齐喑\",{\"1\":{\"398\":1}}],[\"风云变幻\",{\"1\":{\"398\":1}}],[\"风险大大增加\",{\"1\":{\"404\":1}}],[\"风险往往就来临\",{\"1\":{\"403\":1}}],[\"风险较小\",{\"1\":{\"395\":1}}],[\"风险程度\",{\"1\":{\"328\":1}}],[\"逆势是强势股的重要特征\",{\"1\":{\"398\":1}}],[\"逆势是指与大盘大势相反\",{\"1\":{\"398\":1}}],[\"逆势的特征表现有分时逆势\",{\"1\":{\"398\":1}}],[\"逆势也可称之抗跌\",{\"1\":{\"398\":1}}],[\"逆势\",{\"1\":{\"398\":1}}],[\"逆势建仓\",{\"1\":{\"395\":1}}],[\"小富即安\",{\"1\":{\"398\":1}}],[\"小树苗继续生长\",{\"1\":{\"398\":1}}],[\"小资金=蜗牛\",{\"1\":{\"398\":1}}],[\"小题材\",{\"1\":{\"398\":1}}],[\"小文件\",{\"1\":{\"370\":1}}],[\"鸡犬升天\",{\"1\":{\"398\":1}}],[\"富有想象空间\",{\"1\":{\"398\":1}}],[\"处处比聪明的投资者要慢一步\",{\"1\":{\"398\":1}}],[\"处理资源线程池\",{\"1\":{\"318\":1}}],[\"处理流\",{\"1\":{\"227\":1}}],[\"处理器会在读final域操作的前面插入一个loadload屏障\",{\"1\":{\"173\":1}}],[\"处理器可以改变语句对应机器指令的执行顺序\",{\"1\":{\"108\":1}}],[\"似乎总是没有意识到这一点\",{\"1\":{\"398\":1}}],[\"已经套住15\",{\"1\":{\"398\":1}}],[\"已经赚了钱了\",{\"1\":{\"398\":1}}],[\"已经成为过气的题材\",{\"1\":{\"398\":1}}],[\"已有措施\",{\"1\":{\"328\":1}}],[\"过一小段时间回顾总结\",{\"1\":{\"405\":1}}],[\"过去时\",{\"1\":{\"404\":1}}],[\"过了这个临界点\",{\"1\":{\"400\":2}}],[\"过气之后\",{\"1\":{\"398\":1}}],[\"过于详细\",{\"1\":{\"310\":1}}],[\"具有较强时效性\",{\"1\":{\"398\":1}}],[\"具体方法\",{\"1\":{\"328\":1}}],[\"具体可以回看竞业达周期咱们在高位的操作\",{\"1\":{\"244\":1}}],[\"具体是否插入还是得看是什么处理器\",{\"1\":{\"178\":1}}],[\"具体原理在下一节讲述\",{\"1\":{\"116\":1}}],[\"具体来说\",{\"1\":{\"109\":1}}],[\"具体到对象原对象的操作则是需要代理对象处理的\",{\"1\":{\"1\":1}}],[\"创业板综合指数399102\",{\"1\":{\"406\":1}}],[\"创业板指数\",{\"1\":{\"406\":1}}],[\"创业板指\",{\"1\":{\"406\":1}}],[\"创新类\",{\"1\":{\"398\":1}}],[\"创建模版文件\",{\"0\":{\"297\":1}}],[\"创建文件\",{\"1\":{\"296\":1}}],[\"创建集群\",{\"0\":{\"271\":1}}],[\"创建对象\",{\"1\":{\"215\":1}}],[\"创建对象的方式\",{\"0\":{\"215\":1}}],[\"创建后尚未启动\",{\"1\":{\"134\":1}}],[\"创建代理类\",{\"1\":{\"3\":1,\"6\":1}}],[\"稀土反制的金力永磁\",{\"1\":{\"404\":1}}],[\"稀土反制\",{\"1\":{\"398\":1}}],[\"氢能源\",{\"1\":{\"398\":1}}],[\"泛在电力物联网\",{\"1\":{\"398\":1}}],[\"泛型常用特点\",{\"0\":{\"214\":1}}],[\"业绩预增\",{\"1\":{\"398\":1}}],[\"业绩增长\",{\"1\":{\"398\":2}}],[\"业务中台\",{\"1\":{\"380\":1}}],[\"业务降级\",{\"1\":{\"380\":1}}],[\"业务已经上线\",{\"1\":{\"378\":1}}],[\"业务层技术\",{\"0\":{\"375\":1}}],[\"业务发展推送技术的发展\",{\"0\":{\"367\":1}}],[\"业务人员根据业务需要\",{\"1\":{\"363\":1}}],[\"业务逻辑和业务系统分离\",{\"1\":{\"363\":1}}],[\"业务分级\",{\"1\":{\"344\":1}}],[\"业务分表\",{\"1\":{\"314\":1}}],[\"业务高可用\",{\"0\":{\"343\":1}}],[\"业务系统已经启动\",{\"1\":{\"340\":1}}],[\"业务也需要考虑改情况\",{\"1\":{\"332\":1,\"333\":1}}],[\"业务处理速度非常快的\",{\"1\":{\"318\":1}}],[\"业务同时读取多列效率较高\",{\"1\":{\"315\":1}}],[\"物联网\",{\"1\":{\"398\":1}}],[\"物极必反\",{\"1\":{\"388\":1,\"405\":1}}],[\"生意不好做\",{\"1\":{\"406\":1}}],[\"生物医药\",{\"1\":{\"398\":1}}],[\"生产者\",{\"1\":{\"131\":1}}],[\"国产系统的实达集团\",{\"1\":{\"404\":1}}],[\"国内等大局势不稳的影响而产生大盘可能下跌的预期\",{\"1\":{\"404\":1}}],[\"国内重要政策和经济形势\",{\"1\":{\"402\":1}}],[\"国家安定\",{\"1\":{\"406\":1}}],[\"国家重大政策\",{\"1\":{\"402\":1}}],[\"国家政策类\",{\"1\":{\"398\":1}}],[\"国际国内各种消息差不多都在里面了\",{\"1\":{\"402\":1}}],[\"国际重大事件\",{\"1\":{\"402\":1}}],[\"国防军工\",{\"1\":{\"398\":1}}],[\"国脉依旧缩量顶\",{\"1\":{\"244\":1}}],[\"国脉加速\",{\"1\":{\"244\":1}}],[\"环保\",{\"1\":{\"398\":1}}],[\"环境\",{\"0\":{\"384\":1}}],[\"环境准备\",{\"0\":{\"262\":1}}],[\"工业大麻\",{\"1\":{\"398\":1}}],[\"工业互联网\",{\"1\":{\"398\":1}}],[\"工具使用\",{\"0\":{\"276\":1}}],[\"工具类\",{\"0\":{\"197\":1},\"1\":{\"229\":1}}],[\"精明的散户\",{\"0\":{\"396\":1}}],[\"价区呈现出或明或隐的n字结构\",{\"1\":{\"398\":1}}],[\"价区微微下行\",{\"1\":{\"398\":1}}],[\"价区洗盘调整时\",{\"1\":{\"398\":1}}],[\"价值投机效率低些\",{\"1\":{\"395\":1}}],[\"价值投机\",{\"1\":{\"395\":1}}],[\"价值投资\",{\"1\":{\"395\":1}}],[\"价格未跌均价线\",{\"1\":{\"466\":1}}],[\"价格基本都在均价线之上\",{\"1\":{\"464\":1}}],[\"价格一直在均价线之上\",{\"1\":{\"439\":1,\"446\":1,\"449\":1}}],[\"价格低\",{\"1\":{\"398\":2}}],[\"价格高低\",{\"1\":{\"398\":1}}],[\"价格也便宜\",{\"1\":{\"398\":1}}],[\"价格昂贵\",{\"1\":{\"319\":1}}],[\"价格离当天涨停板的价格过于近\",{\"1\":{\"244\":1}}],[\"盈利的模式主要有三种\",{\"1\":{\"395\":1}}],[\"借鉴和总结\",{\"1\":{\"398\":1}}],[\"借力专业机构\",{\"1\":{\"395\":1}}],[\"借势洗盘\",{\"1\":{\"395\":1}}],[\"晋级成为精明散户\",{\"1\":{\"395\":1}}],[\"闪电战\",{\"1\":{\"395\":1}}],[\"擅长\",{\"1\":{\"395\":1}}],[\"群体心理\",{\"1\":{\"395\":1}}],[\"装死\",{\"1\":{\"395\":1}}],[\"装箱\",{\"1\":{\"205\":1}}],[\"左右\",{\"1\":{\"395\":1,\"398\":2}}],[\"顺势拉升\",{\"1\":{\"395\":1}}],[\"跟预期比较起来\",{\"1\":{\"403\":1}}],[\"跟好人\",{\"1\":{\"403\":1}}],[\"跟主力资金在底部吸筹高度相关\",{\"1\":{\"398\":1}}],[\"跟题材的关联度\",{\"1\":{\"398\":1}}],[\"跟随猎人出击的精明散户\",{\"1\":{\"406\":1}}],[\"跟随者\",{\"1\":{\"398\":1}}],[\"跟随买进\",{\"1\":{\"398\":1}}],[\"跟风股往往已经开始下跌\",{\"1\":{\"403\":1}}],[\"跟风股是望尘莫及\",{\"1\":{\"398\":1}}],[\"跟风的股票就会越来越多\",{\"1\":{\"403\":1}}],[\"跟风越来越多\",{\"1\":{\"398\":1}}],[\"跟风小弟出现了\",{\"1\":{\"398\":1}}],[\"跟这只领涨股相关的概念股大爆发\",{\"1\":{\"398\":1}}],[\"跟打仗似的有备而来\",{\"1\":{\"395\":1}}],[\"跟大盘有多弱转多强相关\",{\"1\":{\"243\":1}}],[\"跟大盘共振或者领先大盘弱转强的品种\",{\"1\":{\"243\":1}}],[\"账户里多数是绿油油的套牢盘\",{\"1\":{\"395\":1}}],[\"买入\",{\"0\":{\"410\":1,\"415\":1,\"422\":1,\"429\":1,\"436\":1,\"443\":1,\"453\":1,\"461\":1,\"468\":1}}],[\"买方的力量平均一些比较好\",{\"1\":{\"406\":1}}],[\"买方的总金额要大于卖方的总金额比较好\",{\"1\":{\"406\":1}}],[\"买了票以后\",{\"1\":{\"404\":1}}],[\"买的人少了\",{\"1\":{\"404\":1}}],[\"买的股票不少\",{\"1\":{\"395\":1}}],[\"买点思维\",{\"1\":{\"398\":1}}],[\"买股票的原因\",{\"1\":{\"398\":1}}],[\"买卖双方集体看好\",{\"1\":{\"244\":1}}],[\"心跳加速\",{\"1\":{\"398\":1}}],[\"心理\",{\"1\":{\"398\":1}}],[\"心理极限一般不超过2周\",{\"1\":{\"395\":1}}],[\"心类加载器\",{\"1\":{\"59\":1}}],[\"急躁\",{\"1\":{\"395\":1}}],[\"患得患失\",{\"1\":{\"395\":1}}],[\"天地板\",{\"1\":{\"406\":1}}],[\"天天盯着一只不涨的票\",{\"1\":{\"395\":1}}],[\"天天看消息\",{\"1\":{\"395\":1}}],[\"天保基建卡位同板位的苏州高新\",{\"1\":{\"244\":1}}],[\"立即卖出\",{\"1\":{\"395\":1}}],[\"立体化监控\",{\"1\":{\"380\":1}}],[\"涨幅较大的板块\",{\"1\":{\"406\":1}}],[\"涨幅最高的板块代表了当日最主流的做多力量\",{\"1\":{\"406\":1}}],[\"涨幅达到前龙附近\",{\"1\":{\"398\":1}}],[\"涨停迅速\",{\"1\":{\"456\":1}}],[\"涨停无法封住也可直接卖出\",{\"1\":{\"420\":1}}],[\"涨停时间10点之后\",{\"1\":{\"471\":1}}],[\"涨停时间13\",{\"1\":{\"449\":1}}],[\"涨停时间十点之前\",{\"1\":{\"439\":1}}],[\"涨停时间\",{\"1\":{\"406\":1}}],[\"涨停板数量代表市场短线投机资金的活跃程度\",{\"1\":{\"404\":1}}],[\"涨停板家数\",{\"1\":{\"404\":1}}],[\"涨停家数越多\",{\"1\":{\"404\":1}}],[\"涨停家数以及跌停家数的数量变化\",{\"1\":{\"403\":1}}],[\"涨停家数多\",{\"1\":{\"400\":1}}],[\"涨停家数\",{\"1\":{\"400\":2,\"404\":1,\"406\":1}}],[\"涨跌比大\",{\"1\":{\"400\":1}}],[\"涨跌比\",{\"1\":{\"400\":2,\"406\":1}}],[\"涨跌停个股的封单变大还是变小\",{\"1\":{\"249\":1}}],[\"涨跌停个股是哪些\",{\"1\":{\"249\":1}}],[\"涨了高兴\",{\"1\":{\"395\":1}}],[\"散户主要的交易心理是\",{\"1\":{\"398\":1}}],[\"散户交易心理分析\",{\"1\":{\"398\":1}}],[\"散户行为\",{\"1\":{\"395\":1}}],[\"散户亏钱原因分析及出路\",{\"1\":{\"395\":1}}],[\"粗略地讲\",{\"1\":{\"395\":1}}],[\"热情\",{\"1\":{\"395\":1}}],[\"热点指的是当下市场正在炒作的主流题材\",{\"1\":{\"398\":1}}],[\"热点数据进行缓存\",{\"1\":{\"316\":1}}],[\"热点板块分析\",{\"0\":{\"258\":1}}],[\"热点\",{\"0\":{\"255\":1}}],[\"城市里赚钱的小店\",{\"1\":{\"395\":1}}],[\"必涨形态和技术指标\",{\"1\":{\"398\":1}}],[\"必须要起引领作用\",{\"1\":{\"398\":1}}],[\"必须对信息题材进行收集解读\",{\"1\":{\"398\":1}}],[\"必须明白在哪个层级里生存才是安全又高效的\",{\"1\":{\"398\":1}}],[\"必须分析有没有大家认可的主题或题材\",{\"1\":{\"395\":1}}],[\"必须被装载到\",{\"1\":{\"54\":1}}],[\"必然是少数人赚多数人的钱\",{\"1\":{\"395\":1}}],[\"普通人请千万远离股市\",{\"1\":{\"395\":1}}],[\"咱们身边所有和理财有关的\",{\"1\":{\"395\":1}}],[\"摆脱不了被猎杀的命运\",{\"1\":{\"395\":1}}],[\"缺口\",{\"1\":{\"398\":1}}],[\"缺乏战略战术\",{\"1\":{\"395\":1}}],[\"缺点是即时成交无法撤单\",{\"1\":{\"398\":1}}],[\"缺点是排单的位置不好把握\",{\"1\":{\"398\":1}}],[\"缺点是处于等待队列中的线程可能会饿死\",{\"1\":{\"161\":1}}],[\"缺点是整体吞吐效率相对非公平锁要低\",{\"1\":{\"161\":1}}],[\"缺点\",{\"1\":{\"15\":1,\"77\":2,\"229\":1,\"318\":1,\"319\":3,\"332\":1,\"333\":1,\"334\":2,\"335\":1,\"336\":1,\"341\":1}}],[\"纪律管理等方面\",{\"1\":{\"394\":1}}],[\"仓位管理\",{\"1\":{\"394\":1}}],[\"研究几个厉害的席位\",{\"1\":{\"394\":1}}],[\"研究的内容包括他们的炒作风格\",{\"1\":{\"394\":1}}],[\"研究大盘的弱转强\",{\"1\":{\"244\":1}}],[\"骁勇善战\",{\"1\":{\"394\":1}}],[\"身形彪悍\",{\"1\":{\"394\":1}}],[\"私募基金的目标自然是追求超额收益\",{\"1\":{\"394\":1}}],[\"私募基金只有在业绩为正时才有收益\",{\"1\":{\"394\":1}}],[\"私募及游资\",{\"0\":{\"394\":1}}],[\"私有镜像仓库\",{\"1\":{\"261\":1}}],[\"券商集合理财产品的发起人和管理人是证券公司\",{\"1\":{\"393\":1}}],[\"券商集合理财不能公开宣传\",{\"1\":{\"393\":1}}],[\"券商集合理财指的是证券公司针对高端客户开发的理财服务产品\",{\"1\":{\"393\":1}}],[\"券商集合理财是另一类主力\",{\"1\":{\"393\":1}}],[\"券商集合理财等专业机构\",{\"0\":{\"393\":1}}],[\"于是乎\",{\"1\":{\"392\":1}}],[\"于任意后续对这个\",{\"0\":{\"189\":1}}],[\"几乎都不去\",{\"1\":{\"402\":1}}],[\"几乎在每一次板块运动中\",{\"1\":{\"398\":1}}],[\"几乎不可能成为在高位接最后一棒的人\",{\"1\":{\"391\":1}}],[\"几乎所有的对象实例都在这里分配内存\",{\"1\":{\"66\":1,\"71\":1}}],[\"顾名思义\",{\"1\":{\"391\":1,\"398\":1}}],[\"偏向中长期\",{\"1\":{\"391\":1}}],[\"偏向锁通过对比mark\",{\"1\":{\"160\":1}}],[\"偏向锁\",{\"0\":{\"160\":1}}],[\"逃顶抄底能力特别强\",{\"1\":{\"391\":1}}],[\"社保基金几无失手\",{\"1\":{\"391\":1}}],[\"社保基金对于政策的把握能力特别强\",{\"1\":{\"391\":1}}],[\"超华科技\",{\"1\":{\"398\":1}}],[\"超越了曾经比它顺位靠前的股票\",{\"1\":{\"398\":1}}],[\"超高清视频\",{\"1\":{\"398\":1}}],[\"超短中的龙头战法\",{\"1\":{\"395\":1}}],[\"超级风向标\",{\"1\":{\"391\":1}}],[\"超预期就是超出了正常的预期\",{\"1\":{\"244\":1}}],[\"汇金公司的出手\",{\"1\":{\"391\":1}}],[\"作为跟随者的短线选手\",{\"1\":{\"390\":1}}],[\"作用\",{\"0\":{\"208\":1}}],[\"炒作逻辑的源头\",{\"1\":{\"398\":1}}],[\"炒作喜好\",{\"1\":{\"394\":1}}],[\"炒作的长度和高度\",{\"1\":{\"243\":1}}],[\"炒股要听党的话\",{\"1\":{\"390\":1}}],[\"监管层\",{\"0\":{\"390\":1}}],[\"极简思维\",{\"1\":{\"387\":1}}],[\"利用市场的情绪传递规律来进行预判\",{\"1\":{\"403\":1}}],[\"利用asm开源包\",{\"1\":{\"8\":1}}],[\"利空公告\",{\"1\":{\"398\":1}}],[\"利润增长率还不错\",{\"1\":{\"398\":1}}],[\"利好消息刺激\",{\"1\":{\"386\":1}}],[\"赌徒心理\",{\"1\":{\"386\":1}}],[\"人是有记忆的\",{\"1\":{\"404\":1}}],[\"人的恐惧心理就会油然而生\",{\"1\":{\"404\":1}}],[\"人的本性都是趋利避害的\",{\"1\":{\"404\":1}}],[\"人气股有一定的判断能力\",{\"1\":{\"404\":1}}],[\"人气出于逻辑\",{\"1\":{\"398\":1}}],[\"人气这个特性\",{\"1\":{\"398\":1}}],[\"人气\",{\"1\":{\"398\":1}}],[\"人心的背后是题材\",{\"1\":{\"398\":1}}],[\"人民币升值\",{\"1\":{\"398\":1}}],[\"人无知时最自信\",{\"1\":{\"386\":1}}],[\"人工智能\",{\"1\":{\"398\":1}}],[\"人工效率低\",{\"1\":{\"342\":1}}],[\"人工确认\",{\"1\":{\"334\":1}}],[\"趋易避难心理\",{\"1\":{\"386\":1}}],[\"股吧\",{\"1\":{\"402\":1}}],[\"股民在获利后\",{\"1\":{\"398\":1}}],[\"股民应该把政府看作是好领导和好朋友\",{\"1\":{\"390\":1}}],[\"股价上行空间\",{\"1\":{\"398\":1}}],[\"股价总是沿着对主力有利的方向运行\",{\"1\":{\"387\":1}}],[\"股性\",{\"1\":{\"398\":1}}],[\"股票也是如此\",{\"1\":{\"406\":1}}],[\"股票反转的常见走势及实际应用\",{\"1\":{\"398\":1}}],[\"股票的阻力即空方来自何处\",{\"1\":{\"398\":1}}],[\"股票交易中\",{\"1\":{\"398\":1}}],[\"股票交易冲动随意\",{\"1\":{\"395\":1}}],[\"股票逐渐进入金融和工业领域\",{\"1\":{\"385\":1}}],[\"股票从弱到强他就是一个转变的过程\",{\"1\":{\"244\":1}}],[\"股市惨跌的场面会自然浮现在脑子里\",{\"1\":{\"404\":1}}],[\"股市中\",{\"1\":{\"398\":2}}],[\"股市天经\",{\"1\":{\"398\":1,\"405\":1}}],[\"股市不缺傻瓜\",{\"1\":{\"398\":1}}],[\"股市就不存在了\",{\"1\":{\"398\":1}}],[\"股市里没有任何人可以号称股神\",{\"1\":{\"398\":1}}],[\"股市里\",{\"1\":{\"395\":1}}],[\"股市生存的重要思维\",{\"0\":{\"387\":1}}],[\"股市是一个零和游戏\",{\"1\":{\"395\":1}}],[\"股市是国家设立的\",{\"1\":{\"390\":1}}],[\"股市是复杂\",{\"1\":{\"386\":1}}],[\"股市是人类固有弱点的孵化器\",{\"1\":{\"386\":1}}],[\"股市是天然具有波动性的大池塘\",{\"1\":{\"386\":1}}],[\"股市是零和博弈的战场\",{\"1\":{\"386\":1}}],[\"股市是政策的晴雨表\",{\"1\":{\"386\":1}}],[\"股市是服务经济建设的融资场所\",{\"1\":{\"386\":1}}],[\"股市的主要规律\",{\"0\":{\"388\":1}}],[\"股市的本质\",{\"0\":{\"386\":1}}],[\"股市的由来\",{\"0\":{\"385\":1}}],[\"股市作为筹集资金\",{\"1\":{\"385\":1}}],[\"股市\",{\"0\":{\"384\":1}}],[\"公告方面笔者主要看选股宝\",{\"1\":{\"402\":1}}],[\"公募基金的主流选股思路\",{\"1\":{\"393\":1}}],[\"公募基金\",{\"0\":{\"393\":1}}],[\"公共功能组件化\",{\"1\":{\"380\":1}}],[\"公平锁的优点是等待锁的线程不会饿死\",{\"1\":{\"161\":1}}],[\"公平锁是指多个线程按照申请锁的顺序来获取锁\",{\"1\":{\"161\":1}}],[\"公平锁\",{\"0\":{\"161\":1}}],[\"队列组件化\",{\"1\":{\"380\":1}}],[\"队列中的第一个线程才能获得锁\",{\"1\":{\"161\":1}}],[\"组件化\",{\"1\":{\"380\":1}}],[\"组合7\",{\"1\":{\"78\":1}}],[\"组合6\",{\"1\":{\"78\":1}}],[\"组合5\",{\"1\":{\"78\":1}}],[\"组合4\",{\"1\":{\"78\":1}}],[\"组合3\",{\"1\":{\"78\":1}}],[\"组合2\",{\"1\":{\"78\":1}}],[\"组合1\",{\"1\":{\"78\":1}}],[\"救火\",{\"1\":{\"380\":1}}],[\"阶段\",{\"0\":{\"380\":1}}],[\"牵一发动全身\",{\"1\":{\"378\":1}}],[\"运维\",{\"0\":{\"480\":1}}],[\"运维平台\",{\"1\":{\"376\":1}}],[\"运动员玩帆板冲浪\",{\"1\":{\"406\":1}}],[\"运行流水线\",{\"1\":{\"292\":1}}],[\"运行镜像\",{\"1\":{\"269\":1}}],[\"运行至消亡的过程\",{\"1\":{\"225\":1}}],[\"运行时异常\",{\"1\":{\"223\":1}}],[\"运行时数据区\",{\"0\":{\"66\":1},\"1\":{\"66\":1}}],[\"运行高效\",{\"1\":{\"77\":1}}],[\"平时说的隔夜排板就是排有一字板预期的\",{\"1\":{\"398\":1}}],[\"平台技术\",{\"0\":{\"376\":1}}],[\"平衡这三者的速度差异\",{\"1\":{\"104\":1}}],[\"产生了柔性屏\",{\"1\":{\"398\":1}}],[\"产生大量收入的业务\",{\"1\":{\"344\":1}}],[\"产业资本\",{\"0\":{\"392\":1}}],[\"产品类\",{\"0\":{\"366\":1}}],[\"降低回撤\",{\"1\":{\"427\":1}}],[\"降低高可用成本\",{\"1\":{\"359\":1}}],[\"降级\",{\"1\":{\"345\":1}}],[\"经济信息联播\",{\"1\":{\"402\":1}}],[\"经济半小时\",{\"1\":{\"402\":1}}],[\"经验多了以后\",{\"1\":{\"398\":1}}],[\"经过学习修行之后\",{\"1\":{\"398\":1}}],[\"经过多次试验\",{\"1\":{\"12\":1}}],[\"经常变动和迭代的分为变动服务\",{\"1\":{\"359\":1}}],[\"松耦合\",{\"1\":{\"355\":1}}],[\"企业各部门有独立的系统\",{\"1\":{\"354\":1}}],[\"历史证明\",{\"1\":{\"391\":1}}],[\"历史\",{\"0\":{\"354\":1}}],[\"历史数据不会出错\",{\"1\":{\"315\":1}}],[\"逻辑就是题材\",{\"1\":{\"398\":1}}],[\"逻辑\",{\"1\":{\"398\":1}}],[\"逻辑分层架构\",{\"1\":{\"351\":1}}],[\"逻辑越复杂\",{\"1\":{\"306\":1}}],[\"微服务的陷阱\",{\"0\":{\"358\":1}}],[\"微服务更适用轻量的互联网项目\",{\"1\":{\"357\":1}}],[\"微服务则是快速交付\",{\"1\":{\"357\":1}}],[\"微服务粒度更细\",{\"1\":{\"357\":1}}],[\"微服务和soa的关系\",{\"0\":{\"357\":1}}],[\"微服务\",{\"0\":{\"356\":1}}],[\"微服务架构\",{\"1\":{\"349\":1}}],[\"微内核架构\",{\"0\":{\"360\":1},\"1\":{\"349\":1}}],[\"思考和融合\",{\"1\":{\"398\":1}}],[\"思路\",{\"1\":{\"348\":1}}],[\"思是\",{\"1\":{\"301\":1}}],[\"拆分方法\",{\"1\":{\"359\":1}}],[\"拆\",{\"1\":{\"348\":1}}],[\"拆箱\",{\"1\":{\"205\":1}}],[\"概率思维\",{\"1\":{\"387\":1}}],[\"概述\",{\"0\":{\"347\":1}}],[\"概念之间轮动的节奏\",{\"1\":{\"244\":1}}],[\"概念板块弱转强\",{\"0\":{\"244\":1}}],[\"限流\",{\"1\":{\"345\":1}}],[\"限期等待或者无限期等待状态\",{\"1\":{\"148\":1}}],[\"限期等待\",{\"0\":{\"138\":1}}],[\"熔断\",{\"1\":{\"345\":1}}],[\"减少功能\",{\"1\":{\"345\":1}}],[\"减少异地多活的距离\",{\"1\":{\"344\":1}}],[\"日内最低价都为涨停\",{\"1\":{\"398\":1}}],[\"日内分时弱转强\",{\"1\":{\"244\":2}}],[\"日线逆势\",{\"1\":{\"398\":1}}],[\"日志异地保存\",{\"1\":{\"344\":1}}],[\"日志记录\",{\"1\":{\"344\":1}}],[\"措施\",{\"1\":{\"344\":1}}],[\"唯一性\",{\"1\":{\"344\":1}}],[\"回顾总结在过去一个月发生的板块运动\",{\"1\":{\"405\":1}}],[\"回过头看\",{\"1\":{\"398\":1}}],[\"回源读取方式\",{\"1\":{\"344\":1}}],[\"回封时间和回封封单\",{\"1\":{\"244\":1}}],[\"二对龙头个股\",{\"1\":{\"406\":1}}],[\"二是沙盘推演\",{\"1\":{\"405\":1}}],[\"二是个股公告\",{\"1\":{\"402\":1}}],[\"二是时间远离\",{\"1\":{\"398\":1}}],[\"二板是龙头的必由之路\",{\"1\":{\"398\":1}}],[\"二次读取\",{\"1\":{\"344\":1}}],[\"二级制兼容性的验证\",{\"1\":{\"62\":1}}],[\"采用多种数据同步手段\",{\"1\":{\"344\":1}}],[\"采取了保守的策略\",{\"1\":{\"190\":1}}],[\"尽量杜绝再犯同样的错误\",{\"1\":{\"405\":1}}],[\"尽量减少数据同步\",{\"1\":{\"344\":1}}],[\"尽量给出可量化指标\",{\"1\":{\"328\":2}}],[\"搭建高速网络\",{\"1\":{\"344\":1}}],[\"技巧四\",{\"1\":{\"344\":1}}],[\"技巧三\",{\"1\":{\"344\":1}}],[\"技巧二\",{\"1\":{\"344\":1}}],[\"技巧一\",{\"1\":{\"344\":1}}],[\"技巧\",{\"1\":{\"344\":1,\"405\":1}}],[\"技术指标之我见\",{\"1\":{\"398\":1}}],[\"技术指标也看涨\",{\"1\":{\"398\":1}}],[\"技术革新\",{\"1\":{\"398\":1}}],[\"技术创新推进业务发展\",{\"0\":{\"366\":1}}],[\"技术\",{\"1\":{\"309\":1,\"363\":1,\"398\":1}}],[\"跨国异地\",{\"1\":{\"344\":2}}],[\"跨城异地\",{\"1\":{\"344\":2}}],[\"跨平台的根本\",{\"1\":{\"201\":1}}],[\"某一个分支逻辑的龙头就叫支线龙头\",{\"1\":{\"398\":1}}],[\"某地异常的情况下\",{\"1\":{\"344\":1}}],[\"某些个股大涨\",{\"1\":{\"403\":1}}],[\"某些知识点来自长期的总结提炼\",{\"1\":{\"398\":1}}],[\"某些二级市场其他主力和某些上市公司\",{\"1\":{\"392\":1}}],[\"某些数据是\",{\"1\":{\"323\":1}}],[\"某些字段不行序列化怎么办\",{\"0\":{\"226\":1}}],[\"异动复盘\",{\"1\":{\"406\":2}}],[\"异地多活\",{\"0\":{\"344\":1}}],[\"异常处理\",{\"1\":{\"344\":1}}],[\"异常处理等等需要依赖它\",{\"1\":{\"69\":1}}],[\"异常\",{\"1\":{\"66\":2,\"68\":2,\"231\":1,\"234\":1}}],[\"角色分配更加复杂\",{\"1\":{\"342\":1}}],[\"资产重组类题材\",{\"1\":{\"398\":1}}],[\"资源价格类题材\",{\"1\":{\"398\":1}}],[\"资源\",{\"1\":{\"342\":1}}],[\"资金的本质都是逐利的\",{\"1\":{\"403\":1}}],[\"资金的背后是人心\",{\"1\":{\"398\":1}}],[\"资金流向低位题材\",{\"1\":{\"403\":1}}],[\"资金\",{\"1\":{\"398\":1}}],[\"资金量不大\",{\"1\":{\"395\":1}}],[\"资金推动是股价上涨的直接原因\",{\"1\":{\"386\":1}}],[\"资金分析\",{\"0\":{\"260\":1}}],[\"资金选择的方向拉起\",{\"1\":{\"243\":1}}],[\"权重\",{\"1\":{\"342\":1}}],[\"温备\",{\"1\":{\"340\":1}}],[\"冷备\",{\"1\":{\"340\":1}}],[\"哪些是反映市场情绪的数据呢\",{\"1\":{\"406\":1}}],[\"哪些服务器可以执行任务\",{\"1\":{\"339\":1}}],[\"哪儿有动乱\",{\"1\":{\"406\":1}}],[\"哪个题材是低位\",{\"1\":{\"403\":1}}],[\"哪个是老题材\",{\"1\":{\"403\":1}}],[\"哪个是新题材\",{\"1\":{\"403\":1}}],[\"哪里用到\",{\"1\":{\"229\":1}}],[\"难以支持高并发的应用场景\",{\"1\":{\"336\":1}}],[\"失败\",{\"1\":{\"336\":1}}],[\"失效模式与效应分析\",{\"1\":{\"327\":1}}],[\"参与者想向协调者发送ack信息\",{\"1\":{\"336\":1}}],[\"参与者利用之前写入的undo信息执行回滚\",{\"1\":{\"336\":1}}],[\"参与者向协调者发送ack消息\",{\"1\":{\"336\":1}}],[\"参与者完成commit操作\",{\"1\":{\"336\":1}}],[\"参与者执行询问发起为止的所有事务操作\",{\"1\":{\"336\":1}}],[\"参数设置\",{\"1\":{\"312\":1}}],[\"参数列表不一致\",{\"1\":{\"206\":1}}],[\"参数列表\",{\"1\":{\"206\":1}}],[\"参数的\",{\"1\":{\"137\":2,\"138\":2}}],[\"询问是否可以执行提交事务\",{\"1\":{\"336\":1}}],[\"消息层面上是否有大的利空或者利好\",{\"1\":{\"403\":1}}],[\"消息推送\",{\"1\":{\"374\":1}}],[\"消息队列\",{\"1\":{\"372\":1}}],[\"消息队列设计实战\",{\"0\":{\"364\":1}}],[\"消息队列方式\",{\"1\":{\"344\":2}}],[\"消息\",{\"1\":{\"336\":1}}],[\"消费者\",{\"1\":{\"131\":1}}],[\"协调者询问参与者是否可以提交事务\",{\"1\":{\"336\":1}}],[\"协调者出现问题参与者就会一直阻塞下去\",{\"1\":{\"336\":1}}],[\"协调者向参与者发送提交信息\",{\"1\":{\"336\":1}}],[\"协调者向参与者发送准备提交的信息\",{\"1\":{\"336\":1}}],[\"协调者向参与者发出rollback的请求\",{\"1\":{\"336\":1}}],[\"协调者向所有的参与者发出commit的请求\",{\"1\":{\"336\":1}}],[\"协调者接收到所有参与者反馈的ack消息后\",{\"1\":{\"336\":2}}],[\"协调者想所有的参会者发送query\",{\"1\":{\"336\":1}}],[\"协商式\",{\"1\":{\"303\":1}}],[\"成交量基本保持不变\",{\"1\":{\"417\":1}}],[\"成交量保持不变\",{\"1\":{\"412\":1}}],[\"成交额等进行复盘\",{\"1\":{\"406\":1}}],[\"成为被猎杀的对象\",{\"1\":{\"395\":1}}],[\"成熟和改动的不大的分为稳定服务\",{\"1\":{\"359\":1}}],[\"成功\",{\"1\":{\"336\":1}}],[\"成立的假设\",{\"1\":{\"336\":1}}],[\"成本最大\",{\"1\":{\"344\":1}}],[\"成本会上升\",{\"1\":{\"344\":1}}],[\"成本高\",{\"1\":{\"337\":1}}],[\"成本低\",{\"1\":{\"319\":1,\"337\":1}}],[\"成本问题\",{\"1\":{\"314\":1}}],[\"成本\",{\"1\":{\"311\":1}}],[\"两会题材\",{\"1\":{\"398\":1}}],[\"两阶段提交\",{\"1\":{\"336\":1}}],[\"两台都是主机\",{\"1\":{\"335\":1}}],[\"两台主机之间互相复制对方数据\",{\"1\":{\"335\":1}}],[\"两台主机都存储数据\",{\"1\":{\"335\":1}}],[\"两个代价\",{\"1\":{\"344\":1}}],[\"两个标准\",{\"1\":{\"344\":1}}],[\"两个关键实现点\",{\"1\":{\"318\":1}}],[\"两个阶段\",{\"1\":{\"77\":1}}],[\"互联网架构模版\",{\"0\":{\"368\":1}}],[\"互联网架构演进\",{\"0\":{\"365\":1}}],[\"互联式\",{\"1\":{\"334\":1}}],[\"互备式\",{\"1\":{\"337\":1}}],[\"互斥同步属于一种悲观的并发策略\",{\"1\":{\"124\":1}}],[\"互斥同步最主要的问题就是线程阻塞和唤醒所带来的性能问题\",{\"1\":{\"124\":1}}],[\"互斥同步\",{\"0\":{\"124\":1}}],[\"机会才更多\",{\"1\":{\"404\":1}}],[\"机会1\",{\"1\":{\"398\":1}}],[\"机是事物发展变化过程中的某一个关键节点或临界点\",{\"1\":{\"400\":2}}],[\"机是事物在运动变化过程中呈现出的特殊细微变化和现象\",{\"1\":{\"400\":1}}],[\"机\",{\"1\":{\"400\":2}}],[\"机器扩容\",{\"1\":{\"380\":1}}],[\"机器能够正常提供服务\",{\"1\":{\"334\":1}}],[\"机制的\",{\"1\":{\"59\":1}}],[\"状态不一致\",{\"1\":{\"336\":1}}],[\"状态检测的内容\",{\"1\":{\"334\":1}}],[\"状态传递渠道\",{\"1\":{\"334\":1}}],[\"状态判断\",{\"1\":{\"334\":1}}],[\"造成成本浪费\",{\"1\":{\"332\":1}}],[\"造成死锁\",{\"1\":{\"154\":1}}],[\"备\",{\"1\":{\"334\":1}}],[\"备机执行部分任务\",{\"1\":{\"341\":1}}],[\"备机启动状态\",{\"1\":{\"340\":1}}],[\"备机如何检测主机状态\",{\"1\":{\"336\":1}}],[\"备机数据不一致问题怎么处理\",{\"1\":{\"334\":1}}],[\"备机\",{\"1\":{\"334\":1}}],[\"备机只提供备份\",{\"1\":{\"332\":1}}],[\"备机只做数据的备份不提供任何的读写\",{\"1\":{\"332\":1}}],[\"备机还存在数据备份\",{\"1\":{\"332\":1}}],[\"备份和恢复时间过长\",{\"1\":{\"314\":1}}],[\"各大网站都有\",{\"1\":{\"402\":1}}],[\"各阶层\",{\"0\":{\"389\":1}}],[\"各系统的技术团队不一样\",{\"1\":{\"354\":1}}],[\"各分区互不影响\",{\"1\":{\"337\":1}}],[\"各个节点的职责是什么\",{\"1\":{\"331\":1}}],[\"各自局限\",{\"0\":{\"11\":1}}],[\"容易当局者迷\",{\"1\":{\"405\":1}}],[\"容器\",{\"1\":{\"371\":1}}],[\"容器出错\",{\"1\":{\"342\":1}}],[\"容器化编排工具\",{\"1\":{\"261\":1}}],[\"容错率高的时候\",{\"1\":{\"398\":1}}],[\"容错性\",{\"1\":{\"336\":1}}],[\"容错\",{\"1\":{\"328\":1}}],[\"严重程度\",{\"1\":{\"328\":1}}],[\"部分数据不能双向复制\",{\"1\":{\"335\":1}}],[\"部分不可用\",{\"1\":{\"328\":1}}],[\"部署文件的编写可能需要学习\",{\"1\":{\"294\":1}}],[\"部署文件的内容\",{\"1\":{\"289\":1}}],[\"部署\",{\"0\":{\"289\":1}}],[\"给政府交税而已\",{\"1\":{\"395\":1}}],[\"给出系统的初始架构图\",{\"1\":{\"328\":1}}],[\"给某一个对象提供一个代理\",{\"1\":{\"1\":1}}],[\"析\",{\"1\":{\"327\":1}}],[\"故障后需要人工干预\",{\"1\":{\"332\":1}}],[\"故障概率\",{\"1\":{\"328\":1}}],[\"故障原因\",{\"1\":{\"328\":1}}],[\"故障影响\",{\"1\":{\"328\":1}}],[\"故障模式\",{\"1\":{\"328\":1}}],[\"故障模式与后果分析等\",{\"1\":{\"327\":1}}],[\"故障模式与影响分析\",{\"1\":{\"327\":1}}],[\"故障问题不好处理\",{\"1\":{\"314\":1}}],[\"介绍\",{\"0\":{\"327\":1}}],[\"牺牲一致性是指系统出现分区时\",{\"1\":{\"325\":1}}],[\"允许系统出现中间状态\",{\"1\":{\"324\":1}}],[\"允许系统损失部分可用性\",{\"1\":{\"324\":1}}],[\"允许开发者在运行期创建接口的代理实例\",{\"1\":{\"2\":1}}],[\"持久性\",{\"1\":{\"324\":1}}],[\"持续性如何\",{\"1\":{\"398\":1}}],[\"持续集成工具\",{\"1\":{\"261\":1}}],[\"持续复制长生存期的对象则导致效率降低\",{\"1\":{\"77\":1}}],[\"串行化\",{\"1\":{\"324\":1}}],[\"串行收集器是最古老\",{\"1\":{\"78\":1}}],[\"隔离关注点\",{\"1\":{\"352\":1}}],[\"隔离级别\",{\"1\":{\"324\":1}}],[\"隔离性可以防止多个事务并\",{\"1\":{\"324\":1}}],[\"隔离性\",{\"1\":{\"324\":1}}],[\"隔日弱转强\",{\"1\":{\"244\":1}}],[\"隔日\",{\"1\":{\"242\":1}}],[\"放弃炒股\",{\"1\":{\"395\":1}}],[\"放弃并不等于什么都不做\",{\"1\":{\"323\":1}}],[\"放量振荡无论在低位还是高位都是很难上涨的\",{\"1\":{\"398\":1}}],[\"放量大阴柱\",{\"1\":{\"398\":1}}],[\"放量版的标准我是这么看的\",{\"1\":{\"244\":1}}],[\"放量高开\",{\"1\":{\"244\":1}}],[\"放量阴线\",{\"1\":{\"244\":1}}],[\"放量代表分歧\",{\"1\":{\"244\":1}}],[\"正确的交易应该是怎样的\",{\"1\":{\"405\":1}}],[\"正常来说\",{\"1\":{\"398\":1,\"404\":1}}],[\"正常情况下用户访问不管哪一地点的业务系统\",{\"1\":{\"344\":1}}],[\"正常情况下\",{\"1\":{\"332\":1,\"335\":1,\"342\":1}}],[\"正常情况下不存在cp\",{\"1\":{\"323\":1}}],[\"正因为市面上的技术分析脱离了\",{\"1\":{\"398\":1}}],[\"正所谓\",{\"1\":{\"398\":1}}],[\"正反馈风标\",{\"1\":{\"250\":1}}],[\"细分\",{\"1\":{\"340\":1}}],[\"细节\",{\"0\":{\"323\":1}}],[\"细化技术细节\",{\"1\":{\"312\":1}}],[\"违反了\",{\"1\":{\"322\":2}}],[\"履行职责\",{\"1\":{\"321\":1}}],[\"网络层技术\",{\"0\":{\"373\":1}}],[\"网络延迟较低可以不用考虑设计\",{\"1\":{\"344\":1}}],[\"网关\",{\"1\":{\"359\":1}}],[\"网卡吞吐量等来衡量系统的压力\",{\"1\":{\"319\":1}}],[\"网上有人对于不通版本的jdk进行测试\",{\"1\":{\"12\":1}}],[\"灵活\",{\"1\":{\"319\":1}}],[\"软状态\",{\"1\":{\"324\":1}}],[\"软件负载均衡实现机器级别的负载均衡\",{\"1\":{\"319\":1}}],[\"软件负载均衡\",{\"1\":{\"319\":1}}],[\"软引用\",{\"1\":{\"213\":1}}],[\"稳定取得胜利才有价值\",{\"1\":{\"398\":1}}],[\"稳定阶段\",{\"1\":{\"359\":1}}],[\"稳定性高\",{\"1\":{\"319\":1}}],[\"稳定和变化分层\",{\"1\":{\"303\":1}}],[\"硬件负载均衡\",{\"1\":{\"319\":1}}],[\"硬件支持的原子性操作最典型的是\",{\"1\":{\"126\":1}}],[\"全国社保基金及保险基金\",{\"0\":{\"391\":1}}],[\"全自动还是半自动\",{\"1\":{\"334\":1}}],[\"全部都要认真仔细地看\",{\"1\":{\"406\":1}}],[\"全部都在同一个进程中完成\",{\"1\":{\"318\":1}}],[\"全部可用等\",{\"1\":{\"328\":1}}],[\"全文搜索引擎\",{\"1\":{\"315\":2}}],[\"全文搜索的条件可以随意排列组合\",{\"1\":{\"315\":1}}],[\"收集解读题材\",{\"1\":{\"398\":1}}],[\"收集器是一种以获取最短回收停顿时间为目标的收集器\",{\"1\":{\"78\":1}}],[\"收集器\",{\"1\":{\"78\":1}}],[\"收盘价大于开盘价\",{\"1\":{\"398\":1}}],[\"收盘价为涨停价\",{\"1\":{\"398\":1}}],[\"收盘价\",{\"1\":{\"398\":1}}],[\"收盘就赚啦\",{\"1\":{\"398\":1}}],[\"收到事件后通过dispatch进行分发\",{\"1\":{\"318\":1}}],[\"收到事件通知后通过dispatch进行分发\",{\"1\":{\"318\":1}}],[\"轮询\",{\"1\":{\"342\":1}}],[\"轮询的效率也不高\",{\"1\":{\"318\":1}}],[\"轮询也是小号cpu的\",{\"1\":{\"318\":1}}],[\"虽然在对\",{\"1\":{\"406\":1}}],[\"虽然全天坐在电脑前\",{\"1\":{\"405\":1}}],[\"虽然下台了\",{\"1\":{\"404\":1}}],[\"虽然收益不是很大\",{\"1\":{\"403\":1}}],[\"虽然现在信息发达\",{\"1\":{\"402\":1}}],[\"虽然说情绪流喜欢讲市场合力\",{\"1\":{\"398\":1}}],[\"虽然眼睛看不见\",{\"1\":{\"398\":1}}],[\"虽然有延迟\",{\"1\":{\"323\":1}}],[\"虽然解决了线程通信复杂和fork\",{\"1\":{\"318\":1}}],[\"虽无需进程间通信了\",{\"1\":{\"318\":1}}],[\"浪费线程上下文切换\",{\"1\":{\"318\":1}}],[\"惊群\",{\"1\":{\"318\":1}}],[\"父子进程通信复杂\",{\"1\":{\"318\":1}}],[\"父进程创建子线程\",{\"1\":{\"318\":1}}],[\"父进程\",{\"1\":{\"318\":1}}],[\"父进程接受连接\",{\"1\":{\"318\":2}}],[\"弊端\",{\"1\":{\"318\":1}}],[\"子线程都尝试去accept\",{\"1\":{\"318\":1}}],[\"子线程关闭连接\",{\"1\":{\"318\":1}}],[\"子线程处理请求的读写\",{\"1\":{\"318\":1}}],[\"子进程关闭连接\",{\"1\":{\"318\":1}}],[\"子进程处理请求的读写\",{\"1\":{\"318\":1}}],[\"子进程\",{\"1\":{\"318\":1}}],[\"子类把父类中的方法进行重写\",{\"1\":{\"206\":1}}],[\"定位思维\",{\"1\":{\"398\":1}}],[\"定时任务或消息通知去更新缓存数据\",{\"1\":{\"316\":1}}],[\"定义\",{\"1\":{\"229\":1}}],[\"定义的目录和\",{\"1\":{\"59\":2}}],[\"列式数据库\",{\"1\":{\"315\":2}}],[\"列出复杂度问题\",{\"1\":{\"309\":1}}],[\"文档数据库\",{\"1\":{\"315\":2}}],[\"文件过大\",{\"1\":{\"314\":1}}],[\"文件很大\",{\"1\":{\"314\":1}}],[\"文件中常量池部分的内存映射\",{\"1\":{\"65\":1}}],[\"文件引入的错误\",{\"1\":{\"62\":1}}],[\"文件的加载\",{\"1\":{\"56\":1}}],[\"文件在文件开头有特定的文件标识\",{\"1\":{\"56\":1}}],[\"文件记录者整个源码的相关信息\",{\"1\":{\"55\":1}}],[\"文件\",{\"1\":{\"55\":1,\"56\":1,\"225\":1,\"283\":1}}],[\"文件由\",{\"1\":{\"55\":1}}],[\"方式\",{\"0\":{\"349\":1}}],[\"方案\",{\"1\":{\"314\":1}}],[\"方法名称一致\",{\"1\":{\"206\":1}}],[\"方法不过是属于son的新成员罢了\",{\"1\":{\"167\":1}}],[\"方法是隐式的final\",{\"1\":{\"167\":1}}],[\"方法唤醒等待的线程\",{\"1\":{\"156\":1}}],[\"方法使线程等待\",{\"1\":{\"156\":1}}],[\"方法使线程进入限期等待或者无限期等待时\",{\"1\":{\"138\":1}}],[\"方法使线程进入限期等待状态时\",{\"1\":{\"138\":1}}],[\"方法来判断线程是否处于中断状态\",{\"1\":{\"149\":1}}],[\"方法会等待线程都执行完毕之后再关闭\",{\"1\":{\"150\":1}}],[\"方法会返回\",{\"1\":{\"149\":1}}],[\"方法会设置线程的中断标记\",{\"1\":{\"149\":1}}],[\"方法会休眠当前正在执行的线程\",{\"1\":{\"145\":1}}],[\"方法就无法使线程提前结束\",{\"1\":{\"149\":1}}],[\"方法执行一个无限循环\",{\"1\":{\"149\":1}}],[\"方法执行的内存模型\",{\"1\":{\"66\":1,\"67\":1}}],[\"方法将一个线程设置为守护线程\",{\"1\":{\"144\":1}}],[\"方法检测到是否有中断发生\",{\"1\":{\"113\":1,\"218\":1}}],[\"方法返回\",{\"1\":{\"113\":1,\"218\":1}}],[\"方法调用先行发生于此线程的每一个动作\",{\"1\":{\"113\":1,\"218\":1}}],[\"方法区中常量引用的对象\",{\"1\":{\"76\":1}}],[\"方法区中类静态属性实体引用的对象\",{\"1\":{\"76\":1}}],[\"方法区中还会存放运行时常最池信息\",{\"1\":{\"65\":1}}],[\"方法区\",{\"0\":{\"70\":1},\"1\":{\"66\":1}}],[\"方法出口等信息\",{\"1\":{\"66\":1,\"67\":1}}],[\"方法服务的\",{\"1\":{\"66\":1,\"68\":1}}],[\"方法的开始\",{\"1\":{\"113\":1,\"218\":1}}],[\"方法的调用先行发生于被中断线程的代码检测到中断事件的发生\",{\"1\":{\"113\":1,\"218\":1}}],[\"方法的\",{\"1\":{\"66\":1,\"68\":1}}],[\"方法\",{\"0\":{\"328\":1},\"1\":{\"14\":1,\"137\":3,\"138\":5,\"150\":2,\"153\":1,\"184\":1,\"229\":1,\"231\":1,\"236\":1,\"405\":1}}],[\"记录数表\",{\"1\":{\"314\":1}}],[\"范围路由\",{\"1\":{\"314\":1}}],[\"路由\",{\"1\":{\"314\":2}}],[\"水下跌回均价线时\",{\"1\":{\"473\":1}}],[\"水下一笔直线拉起封板\",{\"1\":{\"244\":1}}],[\"水平分表\",{\"1\":{\"314\":1}}],[\"婚恋网站人物列表只需要有\",{\"1\":{\"314\":1}}],[\"垂直分表\",{\"1\":{\"314\":1}}],[\"丢失数据量大的风险高\",{\"1\":{\"314\":1}}],[\"选股宝专门有一栏集中反映了过去一天个股的公告信息\",{\"1\":{\"402\":1}}],[\"选股宝\",{\"1\":{\"402\":1}}],[\"选股\",{\"1\":{\"395\":1}}],[\"选型\",{\"1\":{\"312\":1}}],[\"选择创建任务的类型和名称\",{\"1\":{\"288\":1}}],[\"选择自定义\",{\"1\":{\"271\":1}}],[\"详细设计\",{\"1\":{\"332\":1,\"333\":1,\"335\":1,\"340\":1,\"341\":1,\"342\":2}}],[\"详细方案\",{\"0\":{\"312\":1}}],[\"详解\",{\"0\":{\"164\":1,\"179\":1,\"191\":1,\"352\":1,\"355\":1}}],[\"项目投入\",{\"1\":{\"311\":1}}],[\"项目中使用到了\",{\"1\":{\"291\":1}}],[\"质量属性\",{\"1\":{\"311\":1}}],[\"度环评\",{\"1\":{\"311\":1}}],[\"评估和选择备选方案\",{\"0\":{\"311\":1}}],[\"误区\",{\"1\":{\"310\":1}}],[\"识别复杂度\",{\"0\":{\"309\":1}}],[\"去其糟粕留其精华\",{\"1\":{\"307\":1}}],[\"去加载\",{\"1\":{\"60\":4}}],[\"演化优于一步到位\",{\"0\":{\"307\":1}}],[\"演化原则\",{\"0\":{\"307\":1}}],[\"排板的话\",{\"1\":{\"398\":1}}],[\"排板\",{\"1\":{\"398\":1}}],[\"排列组合规则组成流程\",{\"1\":{\"363\":1}}],[\"排队购买\",{\"1\":{\"345\":1}}],[\"排队\",{\"1\":{\"345\":1}}],[\"排查越慢\",{\"1\":{\"306\":1}}],[\"排他锁\",{\"0\":{\"163\":1}}],[\"罗马不是一天建成的\",{\"1\":{\"305\":1}}],[\"考虑均价线卖出\",{\"1\":{\"441\":1}}],[\"考虑的关键点\",{\"1\":{\"334\":1}}],[\"考虑时间成本\",{\"1\":{\"305\":1}}],[\"考虑人员多少\",{\"1\":{\"305\":1}}],[\"合适优于业界领先\",{\"0\":{\"305\":1}}],[\"合适原则\",{\"0\":{\"305\":1}}],[\"规避措施\",{\"1\":{\"328\":1}}],[\"规范\",{\"1\":{\"314\":1}}],[\"规模较大\",{\"1\":{\"391\":1}}],[\"规模\",{\"1\":{\"303\":1}}],[\"规则存储在规则库中\",{\"1\":{\"363\":1}}],[\"规则引擎的语言\",{\"1\":{\"363\":1}}],[\"规则引擎实现执行业务流程\",{\"1\":{\"363\":1}}],[\"规则引擎架构\",{\"0\":{\"363\":1}}],[\"规则语言接近自然语言\",{\"1\":{\"363\":1}}],[\"规则中有一条是\",{\"0\":{\"189\":1}}],[\"规则来保证有序性的\",{\"1\":{\"116\":1}}],[\"规则\",{\"1\":{\"109\":1,\"218\":1,\"301\":1}}],[\"功能点\",{\"1\":{\"328\":1}}],[\"功能没有硬件负载均衡那么强大\",{\"1\":{\"319\":1}}],[\"功能强大\",{\"1\":{\"319\":1}}],[\"功能安全\",{\"1\":{\"303\":1}}],[\"功能更加强大\",{\"1\":{\"15\":1}}],[\"安全性\",{\"1\":{\"311\":1}}],[\"安全\",{\"1\":{\"303\":1}}],[\"安装docker\",{\"1\":{\"266\":1}}],[\"安装\",{\"0\":{\"266\":1,\"269\":1,\"270\":1,\"272\":1,\"273\":1,\"279\":1,\"280\":1,\"284\":1,\"295\":1},\"1\":{\"272\":1}}],[\"安装工具\",{\"0\":{\"265\":1}}],[\"预判一下龙头可能的空间\",{\"1\":{\"398\":1}}],[\"预备资金\",{\"1\":{\"395\":1}}],[\"预测变化\",{\"1\":{\"303\":1}}],[\"预期差\",{\"1\":{\"242\":1}}],[\"民主式\",{\"1\":{\"303\":1}}],[\"框架\",{\"0\":{\"478\":1}}],[\"框架多是一种规范\",{\"1\":{\"301\":1}}],[\"框架和架构\",{\"1\":{\"301\":1}}],[\"框架中经常使用\",{\"1\":{\"229\":1}}],[\"划分优先级\",{\"1\":{\"381\":1}}],[\"划分组件是为了单元复用\",{\"1\":{\"301\":1}}],[\"划分模块是为了职责分离\",{\"1\":{\"301\":1}}],[\"模拟式\",{\"1\":{\"334\":1}}],[\"模型\",{\"1\":{\"318\":1}}],[\"模糊匹配的方式无法满足\",{\"1\":{\"315\":1}}],[\"模块和组件\",{\"1\":{\"301\":1}}],[\"模式的核心\",{\"1\":{\"318\":1}}],[\"模式\",{\"1\":{\"131\":1}}],[\"系统思维\",{\"1\":{\"387\":1}}],[\"系统合作完成流程\",{\"1\":{\"354\":1}}],[\"系统后门降级\",{\"1\":{\"345\":1}}],[\"系统的复杂度会发生质的变化\",{\"1\":{\"344\":1}}],[\"系统经过一段时间后所有的副本数据达到一致性\",{\"1\":{\"324\":1}}],[\"系统能够继续\",{\"1\":{\"321\":1}}],[\"系统无中断地执行其功能\",{\"1\":{\"303\":1}}],[\"系统结构\",{\"1\":{\"301\":1}}],[\"系统泛指由一群有关联的个体组成\",{\"1\":{\"301\":1}}],[\"系统与子系统\",{\"1\":{\"301\":1}}],[\"系统运行一个程序及时一个进程从创建\",{\"1\":{\"225\":1}}],[\"架构重构\",{\"0\":{\"377\":1}}],[\"架构是需要考虑\",{\"1\":{\"344\":1}}],[\"架构是什么\",{\"0\":{\"301\":1}}],[\"架构\",{\"0\":{\"353\":1},\"1\":{\"344\":1,\"351\":2}}],[\"架构需要随业务的变化而变化\",{\"1\":{\"307\":1}}],[\"架构设计流程\",{\"0\":{\"308\":1}}],[\"架构设计原则\",{\"0\":{\"304\":1}}],[\"架构设计的目的\",{\"0\":{\"302\":1}}],[\"架构安全\",{\"1\":{\"303\":1}}],[\"架构多是一种结构\",{\"1\":{\"301\":1}}],[\"架构基础\",{\"0\":{\"300\":1}}],[\"照着做\",{\"0\":{\"299\":1}}],[\"照葫芦画瓢的死板战法\",{\"1\":{\"242\":1}}],[\"编写配置文件\",{\"0\":{\"296\":1}}],[\"编译后是用\",{\"1\":{\"203\":1}}],[\"编译器会检查\",{\"1\":{\"204\":1}}],[\"编译器会在写入时插入一个\",{\"1\":{\"218\":1}}],[\"编译器会在生成指令系列时在适当的位置会插入内存屏障指令来禁止特定类型的处理器重排序\",{\"1\":{\"190\":1}}],[\"编译器会在final域写之后\",{\"1\":{\"172\":1}}],[\"编译器和处理器会对指令进行重排序\",{\"1\":{\"187\":1}}],[\"编译器和处理器常常会对指令做重排序\",{\"1\":{\"108\":1}}],[\"编译器在生成字节码时\",{\"1\":{\"190\":1}}],[\"编译器在生成指令序列时\",{\"1\":{\"108\":1}}],[\"编译器在不改变单线程程序语义的前提下\",{\"1\":{\"108\":1}}],[\"编译器优化的重排序\",{\"1\":{\"108\":1}}],[\"编译器的发展和逃逸分析技术的逐渐成熟\",{\"1\":{\"66\":1,\"71\":1}}],[\"编译程序优化指令执行次序\",{\"1\":{\"104\":1}}],[\"编译程序都做出了贡献\",{\"1\":{\"104\":1}}],[\"编译为\",{\"1\":{\"55\":1}}],[\"编译新生成的\",{\"1\":{\"4\":1}}],[\"集成电路\",{\"1\":{\"398\":1}}],[\"集中式\",{\"1\":{\"337\":1}}],[\"集中集群\",{\"1\":{\"336\":1}}],[\"集群会通过某种方式区分服务器的不同角色\",{\"1\":{\"342\":1}}],[\"集群高性能\",{\"0\":{\"319\":1}}],[\"集群复杂度\",{\"1\":{\"303\":1}}],[\"集群中是否部署成功\",{\"0\":{\"293\":1}}],[\"集合竞价若存在大买单可以等一等\",{\"1\":{\"466\":1}}],[\"集合竞价很高\",{\"1\":{\"398\":1}}],[\"集合竞价3要素\",{\"1\":{\"250\":1}}],[\"集合在操作的时候\",{\"1\":{\"234\":1}}],[\"集合的一种错误机制\",{\"1\":{\"234\":1}}],[\"集合\",{\"0\":{\"195\":1}}],[\"集合元素数据\",{\"1\":{\"41\":1}}],[\"集合树化的最小元素个数\",{\"1\":{\"41\":1}}],[\"集合将为空\",{\"1\":{\"14\":1}}],[\"集合框架是每一个入门开发者必会的内容\",{\"1\":{\"13\":1}}],[\"$tz\",{\"1\":{\"291\":2}}],[\"保住胜利果实\",{\"1\":{\"403\":1}}],[\"保险资金和社保基金类似\",{\"1\":{\"391\":1}}],[\"保存到业务系统中\",{\"1\":{\"363\":1}}],[\"保存该流水线\",{\"1\":{\"291\":1}}],[\"保证数据最终一致性\",{\"1\":{\"344\":1}}],[\"保证核心业务的异地多活\",{\"1\":{\"344\":1}}],[\"保证原子性\",{\"0\":{\"183\":1}}],[\"保证了\",{\"1\":{\"70\":1}}],[\"镜像测试\",{\"0\":{\"290\":1}}],[\"根据节点角色分类\",{\"0\":{\"342\":1}}],[\"根据结果分析架构是否需要优化\",{\"1\":{\"328\":1}}],[\"根据某些信息进行hash运算\",{\"1\":{\"319\":1}}],[\"根据某种规则运作\",{\"1\":{\"301\":1}}],[\"根据服务器的响应时间来进行任务分配\",{\"1\":{\"319\":1}}],[\"根据服务器的负载来进行分配\",{\"1\":{\"319\":1}}],[\"根据业务\",{\"1\":{\"309\":1}}],[\"根据安装的插件可添加很多功能\",{\"1\":{\"288\":1}}],[\"根据从上面的概念描述我们可以发现\",{\"1\":{\"158\":1}}],[\"命令进行构建打包\",{\"1\":{\"291\":1}}],[\"命令\",{\"1\":{\"288\":2}}],[\"触发构建\",{\"1\":{\"288\":1}}],[\"构建设置\",{\"1\":{\"288\":1}}],[\"构建环境\",{\"1\":{\"288\":1,\"291\":1}}],[\"构建触发器\",{\"1\":{\"288\":1}}],[\"构造函数返回前插入一个storestore屏障\",{\"1\":{\"178\":1}}],[\"构造函数return之前\",{\"1\":{\"172\":1}}],[\"构造函数执行结束\",{\"1\":{\"113\":1,\"218\":1}}],[\"构造方法可以传入初始容量和扩容自增的数量\",{\"1\":{\"29\":1}}],[\"构造方法\",{\"0\":{\"17\":1,\"23\":1,\"29\":1,\"86\":1},\"1\":{\"229\":1}}],[\"插件通信\",{\"1\":{\"361\":1,\"363\":1}}],[\"插件连接\",{\"1\":{\"361\":1,\"363\":1}}],[\"插件管理\",{\"1\":{\"361\":1,\"363\":1}}],[\"插件化架构\",{\"0\":{\"360\":1}}],[\"插件工具\",{\"0\":{\"287\":1}}],[\"插入一条内存屏障会告诉编译器和\",{\"1\":{\"187\":1}}],[\"插入一个storestore屏障\",{\"1\":{\"172\":1}}],[\"插入特定类型的内存屏障\",{\"1\":{\"108\":1}}],[\"行成于思毁于随\",{\"1\":{\"406\":1}}],[\"行动敏捷\",{\"1\":{\"394\":1}}],[\"行业龙头股持续性强\",{\"1\":{\"393\":1}}],[\"行业逻辑\",{\"1\":{\"243\":1}}],[\"行记录无法存储数据结构\",{\"1\":{\"315\":1}}],[\"行\",{\"1\":{\"283\":1}}],[\"~\",{\"1\":{\"283\":1}}],[\"报以下错误\",{\"1\":{\"283\":1}}],[\"认证方式\",{\"1\":{\"281\":1}}],[\"启动业务系统\",{\"1\":{\"340\":1}}],[\"启动\",{\"0\":{\"282\":1},\"1\":{\"284\":1,\"398\":1}}],[\"启动harbor后\",{\"1\":{\"281\":1}}],[\"启动docker\",{\"1\":{\"266\":1}}],[\"邮件设置\",{\"1\":{\"281\":1}}],[\"访问量大的业务\",{\"1\":{\"344\":1}}],[\"访问协议\",{\"1\":{\"281\":1}}],[\"访问修饰权限不�����小于父类\",{\"1\":{\"206\":1}}],[\"修改如下\",{\"1\":{\"283\":1}}],[\"修改harbor的配置文件\",{\"1\":{\"281\":1}}],[\"修饰变量\",{\"0\":{\"169\":1}}],[\"修饰参数\",{\"0\":{\"168\":1}}],[\"修饰方法\",{\"0\":{\"167\":1}}],[\"修饰类\",{\"0\":{\"166\":1}}],[\"修饰的变量值在被反序列化是也不会被持久化和回复\",{\"1\":{\"226\":1}}],[\"修饰的类不可被继承\",{\"1\":{\"218\":1}}],[\"修饰的字符数组\",{\"1\":{\"209\":1}}],[\"修饰的\",{\"1\":{\"85\":1}}],[\"zab算法\",{\"1\":{\"336\":1}}],[\"zookeeper\",{\"1\":{\"334\":1}}],[\"zoneinfo\",{\"1\":{\"291\":1}}],[\"zip\",{\"1\":{\"276\":1}}],[\"zero\",{\"1\":{\"99\":1}}],[\"节点位置\",{\"1\":{\"417\":1}}],[\"节点之间相互备份\",{\"1\":{\"337\":1}}],[\"节点时\",{\"1\":{\"322\":2}}],[\"节点数据在同步到\",{\"1\":{\"322\":2}}],[\"节点\",{\"1\":{\"272\":1}}],[\"节点流\",{\"1\":{\"227\":1}}],[\"拉升资金\",{\"1\":{\"395\":1}}],[\"拉取镜像\",{\"1\":{\"269\":1}}],[\"拉链法\",{\"1\":{\"216\":1}}],[\"qq\",{\"1\":{\"291\":1}}],[\"q47dgr1i\",{\"1\":{\"268\":1}}],[\"queue\",{\"0\":{\"48\":1}}],[\"yaml\",{\"1\":{\"291\":5,\"297\":2}}],[\"yml\",{\"1\":{\"283\":3}}],[\"y\",{\"1\":{\"265\":1,\"266\":2,\"279\":1}}],[\"yum\",{\"0\":{\"264\":1},\"1\":{\"264\":1,\"265\":2,\"266\":3,\"279\":3,\"284\":2}}],[\"yield\",{\"0\":{\"146\":1},\"1\":{\"146\":1}}],[\"云平台主要采用的技术如下\",{\"1\":{\"261\":1}}],[\"云平台搭建\",{\"0\":{\"261\":1}}],[\"复制规则\",{\"1\":{\"337\":1}}],[\"复制可能存在延迟\",{\"1\":{\"332\":1}}],[\"复制通道出现问题\",{\"1\":{\"322\":2}}],[\"复制算法\",{\"1\":{\"77\":1}}],[\"复杂度逐渐升高\",{\"1\":{\"354\":1}}],[\"复杂度的体现\",{\"1\":{\"342\":1}}],[\"复杂度\",{\"1\":{\"311\":1}}],[\"复杂度来源\",{\"0\":{\"303\":1}}],[\"复盘中\",{\"1\":{\"406\":1}}],[\"复盘可以让我们优化工作流程\",{\"1\":{\"405\":1}}],[\"复盘可以让我们从经历中提炼出经验\",{\"1\":{\"405\":1}}],[\"复盘可以帮助我们熟悉具体事物发展的可能变化\",{\"1\":{\"405\":1}}],[\"复盘可以帮助我们提炼事物发展的规律\",{\"1\":{\"405\":1}}],[\"复盘有以下好处\",{\"1\":{\"405\":1}}],[\"复盘就是学习总结\",{\"1\":{\"405\":1}}],[\"复盘的重要作用在于\",{\"1\":{\"405\":1}}],[\"复盘\",{\"0\":{\"256\":1}}],[\"购买旧人气或者涨幅最快\",{\"1\":{\"255\":1}}],[\"确认\",{\"1\":{\"398\":1}}],[\"确定热点题材的反馈\",{\"1\":{\"253\":1}}],[\"确保数据不会被别的线程修改\",{\"1\":{\"158\":1}}],[\"确保相互引用的类之间的协调一致\",{\"1\":{\"62\":1}}],[\"确保字节码流可以被\",{\"1\":{\"62\":1}}],[\"确保类本身符合\",{\"1\":{\"62\":1}}],[\"确保类文件遵从\",{\"1\":{\"62\":1}}],[\"旧架构的约束\",{\"1\":{\"378\":1}}],[\"旧热点\",{\"0\":{\"253\":1}}],[\"旧的预期值\",{\"1\":{\"126\":1}}],[\"交易你所见\",{\"1\":{\"398\":1}}],[\"交易\",{\"1\":{\"395\":1}}],[\"交易阶段\",{\"0\":{\"251\":1}}],[\"交互模型中的\",{\"1\":{\"131\":1}}],[\"情绪值变大\",{\"1\":{\"400\":1}}],[\"情绪周期\",{\"1\":{\"398\":1}}],[\"情绪流每日复盘的主要内容\",{\"0\":{\"406\":1}}],[\"情绪流复盘的三大类型\",{\"0\":{\"405\":1}}],[\"情绪流看盘的主要内容\",{\"0\":{\"404\":1}}],[\"情绪流看盘的四大原则\",{\"0\":{\"403\":1}}],[\"情绪流的情报收集系统\",{\"0\":{\"402\":1}}],[\"情绪流的技术分析也一样\",{\"1\":{\"398\":1}}],[\"情绪流的技术分析\",{\"1\":{\"398\":3}}],[\"情绪流和其他流派的不同之处\",{\"1\":{\"398\":1}}],[\"情绪流从不拒绝各门各派\",{\"1\":{\"398\":1}}],[\"情绪流是以题材信息为出发点\",{\"1\":{\"398\":1}}],[\"情绪流龙头战法的原理\",{\"1\":{\"398\":1}}],[\"情绪流龙头战法的六大步骤\",{\"1\":{\"398\":1}}],[\"情绪流龙头战法最关键的是安全上车\",{\"1\":{\"398\":1}}],[\"情绪流龙头战法\",{\"1\":{\"398\":1}}],[\"情绪传递规律我们反复讲过\",{\"1\":{\"403\":1}}],[\"情绪传递和从众心理在股市中的反映\",{\"1\":{\"388\":1}}],[\"情绪传递\",{\"1\":{\"388\":1}}],[\"情绪龙头战法\",{\"0\":{\"383\":1}}],[\"情绪风标\",{\"1\":{\"250\":1}}],[\"情绪和大盘共振加速赶底的时候\",{\"1\":{\"243\":1}}],[\"看买卖双方的力量对比\",{\"1\":{\"406\":1}}],[\"看盘复盘的流程\",{\"1\":{\"405\":1}}],[\"看盘与交易\",{\"0\":{\"246\":1}}],[\"看懂哪个题材是高位\",{\"1\":{\"403\":1}}],[\"看到承接不足\",{\"1\":{\"404\":1}}],[\"看到点火单后\",{\"1\":{\"398\":1}}],[\"看到别的股票噌噌地涨\",{\"1\":{\"398\":1}}],[\"看你拿我怎么办\",{\"1\":{\"398\":1}}],[\"看上去要跌\",{\"1\":{\"398\":1}}],[\"看上去要涨\",{\"1\":{\"398\":1}}],[\"看同题材个股开盘情况\",{\"1\":{\"254\":1}}],[\"看看持有锁的线程是否很快就会释放锁\",{\"1\":{\"159\":1}}],[\"出猎次数也减少了\",{\"1\":{\"406\":1}}],[\"出于\",{\"1\":{\"398\":2}}],[\"出场便简单多了\",{\"1\":{\"398\":1}}],[\"出场\",{\"1\":{\"398\":1}}],[\"出路\",{\"1\":{\"395\":1}}],[\"出色的运动员\",{\"1\":{\"395\":1}}],[\"出现了低开或者高开仅仅在1～2个点以下\",{\"1\":{\"404\":1}}],[\"出现这种状况的原因在哪里呢\",{\"1\":{\"404\":1}}],[\"出现这种情况的话需要立马引起我们的警觉\",{\"1\":{\"404\":1}}],[\"出现个股的平开或者低开也是常见的状况\",{\"1\":{\"404\":1}}],[\"出现状态不一致\",{\"1\":{\"336\":1}}],[\"出现故障时该功能点会受到什么影响\",{\"1\":{\"328\":1}}],[\"出现分时弱转强\",{\"1\":{\"244\":1}}],[\"出了幺蛾子容易跪下\",{\"1\":{\"244\":1}}],[\"题材龙头以及在某段时间引领盘面情绪的个股\",{\"1\":{\"404\":1}}],[\"题材板块\",{\"1\":{\"406\":1}}],[\"题材板块内多数个股出现大幅低开\",{\"1\":{\"404\":1}}],[\"题材板块今日表现\",{\"1\":{\"404\":1}}],[\"题材板块之间的影响\",{\"1\":{\"388\":1}}],[\"题材太小没有影响力\",{\"1\":{\"404\":1}}],[\"题材新颖吗\",{\"1\":{\"398\":1}}],[\"题材新颖度高\",{\"1\":{\"398\":1}}],[\"题材硬度好或者k线形态简洁优美等\",{\"1\":{\"398\":1}}],[\"题材级别怎么样\",{\"1\":{\"398\":1}}],[\"题材级别大\",{\"1\":{\"398\":1}}],[\"题材持续性\",{\"1\":{\"398\":1}}],[\"题材等\",{\"1\":{\"398\":1}}],[\"题材发酵以后\",{\"1\":{\"398\":1}}],[\"题材有朦胧美\",{\"1\":{\"398\":1}}],[\"题材的级别大吗\",{\"1\":{\"398\":1}}],[\"题材的级别和想象空间是产生龙头的前提条件\",{\"1\":{\"398\":1}}],[\"题材的关系\",{\"1\":{\"398\":1}}],[\"题材的价值衡量\",{\"1\":{\"398\":1}}],[\"题材的分类\",{\"1\":{\"398\":1}}],[\"题材具有生命周期\",{\"1\":{\"398\":1}}],[\"题材不等同于热点\",{\"1\":{\"398\":1}}],[\"题材与热点\",{\"1\":{\"398\":1}}],[\"题材是股市的第一生产力\",{\"1\":{\"398\":1}}],[\"题材\",{\"1\":{\"398\":1}}],[\"题材投机\",{\"1\":{\"394\":1,\"398\":1}}],[\"题材中有标的\",{\"1\":{\"244\":1}}],[\"题材分歧日\",{\"1\":{\"244\":1}}],[\"题材也有低位助攻\",{\"1\":{\"244\":1}}],[\"断板\",{\"1\":{\"244\":1}}],[\"指数情绪会助推短线情绪由弱转强\",{\"1\":{\"403\":1}}],[\"指数情绪的回暖将助推短线情绪向高潮演进\",{\"1\":{\"400\":1}}],[\"指数情绪的退潮将助推短线情绪迅速降至冰点\",{\"1\":{\"400\":1}}],[\"指数情绪是短线情绪的助推器\",{\"1\":{\"400\":1}}],[\"指数情绪和短线情绪二者互相影响\",{\"1\":{\"400\":1}}],[\"指数环境经历过冰点恐慌回暖\",{\"1\":{\"244\":1}}],[\"指的就是\",{\"1\":{\"398\":1}}],[\"指的是第一次仓位可以重些\",{\"1\":{\"398\":1}}],[\"指\",{\"1\":{\"303\":1}}],[\"指令重排序\",{\"1\":{\"187\":1}}],[\"指令需要有\",{\"1\":{\"126\":1}}],[\"指令级并行的重排序\",{\"1\":{\"108\":1}}],[\"指令\",{\"1\":{\"107\":1,\"108\":1,\"187\":1}}],[\"爆量太大\",{\"1\":{\"244\":1}}],[\"满足前面的1和2\",{\"1\":{\"244\":1}}],[\"毕竟不是每次弱转强都要去做的\",{\"1\":{\"244\":1}}],[\"错过最好放弃\",{\"1\":{\"398\":1}}],[\"错过就错过\",{\"1\":{\"244\":1}}],[\"错误\",{\"1\":{\"223\":1}}],[\"千万千万不要把他当做神仙指标\",{\"1\":{\"244\":1}}],[\"竞价也是卖盘较多\",{\"1\":{\"458\":1}}],[\"竞价可以看出买方较强\",{\"1\":{\"451\":1}}],[\"竞价卖出一般都是最高点\",{\"1\":{\"404\":1}}],[\"竞价的基础知识\",{\"1\":{\"250\":1}}],[\"竞价的量能最好要比昨天的竞价量能更大\",{\"1\":{\"244\":1}}],[\"竞价阶段\",{\"0\":{\"247\":1}}],[\"竞价量能只能辅助判断\",{\"1\":{\"244\":1}}],[\"竞价量能更大代表着今天竞价交易比昨日竞价的交易更加活跃\",{\"1\":{\"244\":1}}],[\"竞价满足第一条件后\",{\"1\":{\"244\":1}}],[\"竞价竞价最少要开在\",{\"1\":{\"244\":1}}],[\"竞业达\",{\"1\":{\"244\":1}}],[\"俗称烂板破板\",{\"1\":{\"244\":1}}],[\"取历史股性比较好的也就是有涨停和连板基因的\",{\"1\":{\"244\":1}}],[\"缩量板不考虑\",{\"1\":{\"244\":1}}],[\"缩量代表一致\",{\"1\":{\"244\":1}}],[\"针对低位的弱转强\",{\"1\":{\"244\":1}}],[\"针对引用数据类型\",{\"1\":{\"175\":1}}],[\"随机打板胜率\",{\"1\":{\"398\":1}}],[\"随机博弈模式\",{\"1\":{\"398\":1}}],[\"随机\",{\"1\":{\"386\":1}}],[\"随便将读写操作发送给哪台主机都行\",{\"1\":{\"335\":1}}],[\"随后一路下跌\",{\"1\":{\"244\":1}}],[\"随着硬件指令集的发展\",{\"1\":{\"126\":1}}],[\"随着\",{\"1\":{\"66\":1,\"71\":1}}],[\"接盘的无脑者\",{\"1\":{\"398\":1}}],[\"接棒的博傻者\",{\"1\":{\"398\":1}}],[\"接下来就该上涨了\",{\"1\":{\"398\":1}}],[\"接下来就比较尴尬你要保证在没有换手的情况下\",{\"1\":{\"244\":1}}],[\"接入服务中心化\",{\"1\":{\"380\":1}}],[\"接力的资金看不上这个题材\",{\"1\":{\"404\":1}}],[\"接力情绪良好\",{\"1\":{\"403\":1}}],[\"接力\",{\"0\":{\"254\":1}}],[\"接着跌这个就是正常的预期\",{\"1\":{\"244\":1}}],[\"接口框架\",{\"1\":{\"359\":1}}],[\"接口级的故障应对方案\",{\"0\":{\"345\":1}}],[\"接口访问和数据同步不要走同一个网络\",{\"1\":{\"344\":1}}],[\"接口才可以调用该方法\",{\"1\":{\"231\":1}}],[\"接口的类只能当做一个可以在线程中运行的任务\",{\"1\":{\"140\":1}}],[\"接口\",{\"1\":{\"140\":2,\"211\":2}}],[\"强的题材可以高看一眼\",{\"1\":{\"404\":1}}],[\"强者恒强龙头股\",{\"1\":{\"398\":1}}],[\"强者恒强\",{\"1\":{\"388\":1,\"405\":1}}],[\"强他强在哪里呢\",{\"1\":{\"244\":1}}],[\"强\",{\"1\":{\"244\":1}}],[\"强引用\",{\"1\":{\"213\":1}}],[\"转而分配给其他的服务器\",{\"1\":{\"342\":1}}],[\"转而去执行另外一段代码\",{\"1\":{\"132\":1}}],[\"转他代表着一个股性转变的一个过程\",{\"1\":{\"244\":1}}],[\"转\",{\"1\":{\"244\":1}}],[\"低开不及预期\",{\"1\":{\"441\":1}}],[\"低开低走毫无反弹的迹象\",{\"1\":{\"244\":1}}],[\"低成本\",{\"1\":{\"303\":1}}],[\"低位弱转强中优先选择主线内前一天放量板\",{\"1\":{\"244\":1}}],[\"低位弱转强\",{\"1\":{\"244\":1}}],[\"低位的英飞拓\",{\"1\":{\"244\":1}}],[\"高层动向\",{\"1\":{\"402\":1}}],[\"高潮\",{\"1\":{\"400\":1}}],[\"高度\",{\"1\":{\"398\":1}}],[\"高度板之后出现大烂板\",{\"1\":{\"244\":1}}],[\"高送转类题材\",{\"1\":{\"398\":1}}],[\"高送转\",{\"1\":{\"398\":1}}],[\"高效性\",{\"1\":{\"363\":1}}],[\"高并发情况下依然存在性能问题\",{\"1\":{\"318\":1}}],[\"高扩展\",{\"1\":{\"303\":1}}],[\"高可用状态决策\",{\"1\":{\"303\":1}}],[\"高可用\",{\"1\":{\"303\":1}}],[\"高性能\",{\"1\":{\"303\":1}}],[\"高位龙头股出现滞涨的信号对高位的跟风或者题材分支龙头都会产生负面影响\",{\"1\":{\"403\":1}}],[\"高位减持对于上市公司股东有着天然的吸引力\",{\"1\":{\"392\":1}}],[\"高位板和低位板之间的相互影响\",{\"1\":{\"388\":1}}],[\"高位的弱转强\",{\"1\":{\"244\":1}}],[\"高位弱转强\",{\"1\":{\"244\":1}}],[\"高很多\",{\"1\":{\"228\":1}}],[\"炸板率是短线选手关注的重要指标\",{\"1\":{\"404\":1}}],[\"炸板率就高\",{\"1\":{\"404\":1}}],[\"炸板率的表现\",{\"1\":{\"404\":1}}],[\"炸板后的封单增大\",{\"1\":{\"244\":1}}],[\"炸板回封失败\",{\"1\":{\"244\":1}}],[\"炸板回封板上弱转强\",{\"1\":{\"244\":1}}],[\"炸板回封封单大涨弱转强\",{\"1\":{\"244\":1}}],[\"震荡回板\",{\"1\":{\"244\":1}}],[\"杀破分时就是从强势区域跌到弱势区域\",{\"1\":{\"244\":1}}],[\"摸了跌停马上拉起来\",{\"1\":{\"244\":1}}],[\"浙江建投同理\",{\"1\":{\"244\":1}}],[\"浙江建投卡位同板位的重庆建工\",{\"1\":{\"244\":1}}],[\"便宜\",{\"1\":{\"319\":1}}],[\"便是引领资金回流主线的功臣\",{\"1\":{\"244\":1}}],[\"便是分时级别的弱转强\",{\"1\":{\"244\":1}}],[\"便成为弱转强\",{\"1\":{\"243\":1}}],[\"还能看到里面涨幅最高的个股\",{\"1\":{\"406\":1}}],[\"还可以提醒我们总结失败教训\",{\"1\":{\"405\":1}}],[\"还有多少短线资金愿意冒着巨大的风险继续追击呢\",{\"1\":{\"404\":1}}],[\"还有政策解读\",{\"1\":{\"402\":1}}],[\"还有一个空头是恐慌盘\",{\"1\":{\"398\":1}}],[\"还有业绩分成\",{\"1\":{\"393\":1}}],[\"还没有一个谢字\",{\"1\":{\"398\":1}}],[\"还在跌\",{\"1\":{\"398\":1}}],[\"还根据个股的k线形态进行多空分析\",{\"1\":{\"398\":1}}],[\"还体现在同一板块中\",{\"1\":{\"388\":1}}],[\"还是一日游\",{\"1\":{\"406\":1}}],[\"还是锁仓\",{\"1\":{\"406\":1}}],[\"还是龙头\",{\"1\":{\"406\":1}}],[\"还是因为响应题材涨停的\",{\"1\":{\"406\":1}}],[\"还是它们之间有明显的分化\",{\"1\":{\"406\":1}}],[\"还是在一些小票上面\",{\"1\":{\"406\":1}}],[\"还是相当有影响力的\",{\"1\":{\"404\":1}}],[\"还是\",{\"1\":{\"398\":1}}],[\"还是日k线\",{\"1\":{\"398\":1}}],[\"还是其他参数\",{\"1\":{\"334\":1}}],[\"还是存在\",{\"1\":{\"318\":1}}],[\"还是被第一只弱转强成功后被带起的表面形式的弱转强\",{\"1\":{\"244\":1}}],[\"还要看谁的封单比炸板之前更大些\",{\"1\":{\"244\":1}}],[\"还分为以下三点\",{\"1\":{\"244\":1}}],[\"还会执行吗\",{\"0\":{\"222\":1}}],[\"四大证券报是指中国证券报\",{\"1\":{\"402\":1}}],[\"四大证券报及外盘走势\",{\"1\":{\"402\":1}}],[\"四\",{\"1\":{\"244\":1}}],[\"四个层次给大家讲解\",{\"1\":{\"242\":1}}],[\"核心和非核心业务分离\",{\"1\":{\"380\":1}}],[\"核心服务高可用更方便\",{\"1\":{\"359\":1}}],[\"核心业务\",{\"1\":{\"344\":1}}],[\"核心数据最终一致性\",{\"1\":{\"344\":1}}],[\"核心地位的弱转强争夺\",{\"1\":{\"244\":1}}],[\"核心是通过重写被代理对象所实现的接口中的方法来重新生成代理类来实现的\",{\"1\":{\"8\":1}}],[\"走着走着市场发现了隐藏逻辑\",{\"1\":{\"398\":1}}],[\"走多了两个板冲高\",{\"1\":{\"244\":1}}],[\"走出来成为龙头\",{\"1\":{\"244\":1}}],[\"走出来成为大龙头\",{\"1\":{\"244\":1}}],[\"更了解市场的整个变化\",{\"1\":{\"405\":1}}],[\"更安全\",{\"1\":{\"398\":1}}],[\"更重要的是\",{\"1\":{\"398\":1}}],[\"更换端口即可\",{\"1\":{\"269\":1}}],[\"更新不及时\",{\"1\":{\"319\":1}}],[\"更新锁\",{\"1\":{\"316\":1}}],[\"更新yum\",{\"1\":{\"266\":1}}],[\"更新\",{\"0\":{\"264\":1}}],[\"更佳\",{\"1\":{\"244\":1}}],[\"更近一步转强\",{\"1\":{\"244\":1}}],[\"更进一步转弱\",{\"1\":{\"244\":1}}],[\"更能受到资金的青睐\",{\"1\":{\"244\":1}}],[\"更关键的是\",{\"1\":{\"77\":1}}],[\"能把昨日涨停的股票\",{\"1\":{\"406\":1}}],[\"能让我们的水平取得飞速的突破\",{\"1\":{\"394\":1}}],[\"能力\",{\"1\":{\"301\":1}}],[\"能完成个别元件不能单独完成的工作的群体\",{\"1\":{\"301\":1}}],[\"能提高识别度\",{\"1\":{\"244\":1}}],[\"能够帮我们快速甄别风险并且预防风险\",{\"1\":{\"406\":1}}],[\"能够发动趋势的大机构对党的政策从来认真听取\",{\"1\":{\"390\":1}}],[\"能够快速搭建高可用\",{\"1\":{\"261\":1}}],[\"能够实现容器化的集群部署\",{\"1\":{\"261\":1}}],[\"能够运行时动态获取类的实例\",{\"1\":{\"229\":1}}],[\"能够让两个或以上的线程同时并行执行\",{\"1\":{\"159\":1}}],[\"今天这个板块涨得多\",{\"1\":{\"406\":1}}],[\"今天的涨停时间确实dabc\",{\"1\":{\"244\":1}}],[\"今天从宏观到微观\",{\"1\":{\"242\":1}}],[\"三人成虎\",{\"1\":{\"406\":1}}],[\"三人成众\",{\"1\":{\"398\":1}}],[\"三连板之后继续连板的概率高达45\",{\"1\":{\"398\":1}}],[\"三板\",{\"1\":{\"398\":1}}],[\"三个方面\",{\"1\":{\"402\":1}}],[\"三个阶段\",{\"1\":{\"398\":1}}],[\"三个人管理一个服务\",{\"1\":{\"359\":1}}],[\"三个概念\",{\"1\":{\"355\":1}}],[\"三个关键字\",{\"1\":{\"109\":1}}],[\"三阶段提交\",{\"1\":{\"336\":1}}],[\"三\",{\"1\":{\"244\":1}}],[\"次主线题材龙头就变成了最实际的选择\",{\"1\":{\"398\":1}}],[\"次主线题材龙头\",{\"1\":{\"398\":1}}],[\"次日的弱转强也比较容易成功\",{\"1\":{\"244\":1}}],[\"次日低位有强势的一字板助攻\",{\"1\":{\"244\":1}}],[\"次日主线要分歧\",{\"1\":{\"244\":1}}],[\"次方\",{\"0\":{\"237\":1},\"1\":{\"41\":1}}],[\"尝试转强\",{\"1\":{\"244\":1}}],[\"尝试用extclassloader\",{\"1\":{\"60\":1}}],[\"声迅高鸿加速\",{\"1\":{\"244\":1}}],[\"南天\",{\"1\":{\"244\":2}}],[\"叫一致\",{\"1\":{\"244\":1}}],[\"辅助判断主力踪迹\",{\"1\":{\"398\":1}}],[\"辅助判断指数或个股的顶底\",{\"1\":{\"398\":1}}],[\"辅助判断\",{\"1\":{\"243\":1}}],[\"总结记录\",{\"1\":{\"406\":1}}],[\"总结\",{\"1\":{\"398\":1}}],[\"总结经验\",{\"1\":{\"398\":1}}],[\"总之\",{\"1\":{\"403\":1,\"404\":1,\"405\":1}}],[\"总之国家领导人的讲话\",{\"1\":{\"402\":1}}],[\"总之是有资金在里面折腾\",{\"1\":{\"398\":1}}],[\"总之感觉公司基本面还可以\",{\"1\":{\"398\":1}}],[\"总收益+总损失=0\",{\"1\":{\"395\":1}}],[\"总有一段显得\",{\"1\":{\"398\":1}}],[\"总有一个主要的力\",{\"1\":{\"387\":1}}],[\"总有过气的时候\",{\"1\":{\"398\":1}}],[\"总有说不尽道不明的暧昧\",{\"1\":{\"392\":1}}],[\"总是喜欢揣摩猎物的行为心理\",{\"1\":{\"406\":1}}],[\"总是上当\",{\"1\":{\"403\":1}}],[\"总是屡屡中招\",{\"1\":{\"398\":1}}],[\"总是居于绝于领涨地位\",{\"1\":{\"398\":1}}],[\"总是担心\",{\"1\":{\"395\":1}}],[\"总是被各个击破\",{\"1\":{\"395\":1}}],[\"总是能够把握股市大势\",{\"1\":{\"391\":1}}],[\"总是认为只要不去做正确的同步措施\",{\"1\":{\"124\":1}}],[\"总体结构\",{\"0\":{\"369\":1}}],[\"总体\",{\"1\":{\"301\":1}}],[\"总能借势切换出主线\",{\"1\":{\"243\":1}}],[\"下次再碰到他们上榜的股票的时候\",{\"1\":{\"406\":1}}],[\"下次设个止损位\",{\"1\":{\"398\":1}}],[\"下跌家数对比情况\",{\"1\":{\"404\":1}}],[\"下跌家数\",{\"1\":{\"404\":1}}],[\"下跌家数多\",{\"1\":{\"403\":1}}],[\"下跌的少了\",{\"1\":{\"403\":1}}],[\"下跌的股票也对上涨的股票同样也有向下牵引的作用\",{\"1\":{\"403\":1}}],[\"下跌是刚性的\",{\"1\":{\"398\":1}}],[\"下跌无力的大盘\",{\"1\":{\"243\":1}}],[\"下载maven\",{\"1\":{\"286\":1}}],[\"下载java\",{\"1\":{\"286\":1}}],[\"下载安装文件\",{\"1\":{\"280\":1}}],[\"下载链接\",{\"1\":{\"276\":3}}],[\"下面给大家几个场景\",{\"1\":{\"244\":1}}],[\"下面给大家介绍一下我一般是怎么做的\",{\"1\":{\"244\":1}}],[\"下面给大家来个图例\",{\"1\":{\"243\":1}}],[\"下面说得更加详细一些\",{\"1\":{\"244\":1}}],[\"下午两笔直线上板\",{\"1\":{\"244\":1}}],[\"下一次扩容的容量\",{\"1\":{\"41\":1}}],[\"发生板块效应后\",{\"1\":{\"398\":1}}],[\"发酵\",{\"1\":{\"398\":1}}],[\"发现主力踪迹的\",{\"1\":{\"398\":1}}],[\"发现主力踪迹\",{\"1\":{\"398\":1}}],[\"发现了题材逻辑\",{\"1\":{\"398\":1}}],[\"发现一个最优布置来最小化插入屏障的总数几乎是不可能的\",{\"1\":{\"190\":1}}],[\"发挥了硬件的性能\",{\"1\":{\"333\":1,\"341\":1}}],[\"发执行时由于交叉执行而导致数据的不一致\",{\"1\":{\"324\":1}}],[\"发送重置密码邮件时使用\",{\"1\":{\"281\":1}}],[\"发动什么方向就要看政策\",{\"1\":{\"243\":1}}],[\"发动一波反弹行情\",{\"1\":{\"243\":1}}],[\"场外的资金想买\",{\"1\":{\"398\":1}}],[\"场外的资金也看到了这一点\",{\"1\":{\"243\":1}}],[\"场内的资金想卖\",{\"1\":{\"398\":1}}],[\"场内依然想卖出筹码的人越来越少了\",{\"1\":{\"243\":1}}],[\"场内不看好的筹码连续抛售\",{\"1\":{\"243\":1}}],[\"连板存活率等\",{\"1\":{\"406\":1}}],[\"连板数量\",{\"1\":{\"406\":1}}],[\"连板家数\",{\"1\":{\"400\":3}}],[\"连数家数多\",{\"1\":{\"400\":1}}],[\"连续下跌的企稳甚至拉起中长阳\",{\"1\":{\"243\":1}}],[\"连接通道出现问题就会出现多主或多从问题\",{\"1\":{\"334\":1}}],[\"连接就是将已经读入到内存的类的二进制数据合并到虚拟机的运行时环境中去\",{\"1\":{\"61\":1}}],[\"连接阶段\",{\"1\":{\"61\":1}}],[\"他的开盘幅度\",{\"1\":{\"403\":1}}],[\"他的原理是对指定的目标类生成一个子类\",{\"1\":{\"11\":1}}],[\"他们是加仓\",{\"1\":{\"406\":1}}],[\"他们是市场上最强势的资金\",{\"1\":{\"406\":1}}],[\"他们是市场合力中主要的力\",{\"1\":{\"398\":1}}],[\"他们买入的金额多少\",{\"1\":{\"406\":1}}],[\"他们结束的时候\",{\"1\":{\"404\":1}}],[\"他们的表现对市场短线情绪的影响是巨大的\",{\"1\":{\"404\":1}}],[\"他们的分水岭是什么呢\",{\"1\":{\"398\":1}}],[\"他们的高度就远不及第一波的龙头市北高新\",{\"1\":{\"398\":1}}],[\"他们就是前三者的对手盘\",{\"1\":{\"398\":1}}],[\"他们有意无意地发动股票\",{\"1\":{\"398\":1}}],[\"他们很像中国古代北方的游牧民族\",{\"1\":{\"394\":1}}],[\"他上涨\",{\"1\":{\"398\":1}}],[\"他主机名显示的都为\",{\"1\":{\"275\":1}}],[\"他反而大涨\",{\"1\":{\"244\":1}}],[\"他代表当天的走势是比较弱的\",{\"1\":{\"244\":1}}],[\"他是我们炒股赚钱的本质\",{\"1\":{\"242\":1}}],[\"之前也给你们详细讲过\",{\"1\":{\"244\":1}}],[\"之前我们天天讲的预期\",{\"1\":{\"242\":1}}],[\"之所以说它是最基础的收集算法\",{\"1\":{\"77\":1}}],[\"板块的复盘需要花费一定的时间\",{\"1\":{\"406\":1}}],[\"板块的背后是资金\",{\"1\":{\"398\":1}}],[\"板块基本就也那样了\",{\"1\":{\"403\":1}}],[\"板块之间会形成资金的争夺\",{\"1\":{\"403\":1}}],[\"板块始终要存在\",{\"1\":{\"398\":1}}],[\"板块明显衰弱\",{\"1\":{\"398\":1}}],[\"板块跟风难以为继\",{\"1\":{\"398\":1}}],[\"板块是很重要的\",{\"1\":{\"398\":1}}],[\"板块是龙头股的重要支撑\",{\"1\":{\"398\":1}}],[\"板块已成为全市场的主流板块\",{\"1\":{\"398\":1}}],[\"板块阵列扩大\",{\"1\":{\"398\":1}}],[\"板块效应一旦形成\",{\"1\":{\"398\":1}}],[\"板块联动前进\",{\"1\":{\"398\":1}}],[\"板块小弟才敢涨停\",{\"1\":{\"398\":1}}],[\"板块小弟纷纷上涨\",{\"1\":{\"398\":1}}],[\"板块整体进入高潮阶段\",{\"1\":{\"398\":1}}],[\"板块运动的倒三角模式\",{\"1\":{\"398\":1}}],[\"板块运动的正三角模式\",{\"1\":{\"398\":1}}],[\"板块运动的规律\",{\"1\":{\"398\":1}}],[\"板块及板块内个股联动性\",{\"1\":{\"398\":1}}],[\"板块\",{\"1\":{\"398\":3}}],[\"板块指数快捷键是15\",{\"1\":{\"406\":1}}],[\"板块指数\",{\"1\":{\"250\":1}}],[\"板块弱\",{\"1\":{\"244\":2}}],[\"板块强\",{\"1\":{\"244\":2}}],[\"板块内同身位弱转强\",{\"1\":{\"242\":1}}],[\"板上\",{\"1\":{\"242\":1}}],[\"主流板块及板块龙头\",{\"1\":{\"403\":1}}],[\"主动买入封住跌停的股票\",{\"1\":{\"398\":1}}],[\"主动性大买盘往上顶\",{\"1\":{\"244\":1}}],[\"主力耐心超级好\",{\"1\":{\"395\":1}}],[\"主力拉升方式各有不同\",{\"1\":{\"395\":1}}],[\"主力懂得借势而为\",{\"1\":{\"395\":1}}],[\"主力资金一般分为建仓资金\",{\"1\":{\"395\":1}}],[\"主力资金提前潜伏吸筹\",{\"1\":{\"386\":1}}],[\"主力操作某只股票\",{\"1\":{\"395\":1}}],[\"主力操盘也需顺应市场变化\",{\"1\":{\"387\":1}}],[\"主力行为\",{\"1\":{\"395\":1}}],[\"主主复制\",{\"0\":{\"335\":1}}],[\"主备\",{\"0\":{\"340\":1},\"1\":{\"334\":1}}],[\"主备的共性问题\",{\"1\":{\"334\":1}}],[\"主备倒换和主从倒换\",{\"0\":{\"334\":1}}],[\"主备复制\",{\"0\":{\"332\":1}}],[\"主机多的情况需要操作多次\",{\"1\":{\"345\":1}}],[\"主机执行部分任务\",{\"1\":{\"341\":1}}],[\"主机执行所有的计算任务\",{\"1\":{\"340\":1}}],[\"主机如何将数据复制给备机\",{\"1\":{\"336\":1}}],[\"主机故障后\",{\"1\":{\"336\":1}}],[\"主机故障不能写操作\",{\"1\":{\"334\":1}}],[\"主机故障的情况下\",{\"1\":{\"333\":1}}],[\"主机出现故障时读操作不会受到影响\",{\"1\":{\"333\":1}}],[\"主机出现故障的情况下\",{\"1\":{\"332\":1}}],[\"主机数据绩溪复制到从机\",{\"1\":{\"333\":1}}],[\"主机数据继续复制给备机\",{\"1\":{\"332\":1}}],[\"主机不可恢复情况下\",{\"1\":{\"332\":1,\"333\":1}}],[\"主机恢复后还是主机还是恢复后变为从\",{\"1\":{\"334\":1}}],[\"主机恢复后\",{\"1\":{\"332\":1}}],[\"主机存储数据\",{\"1\":{\"332\":1,\"333\":1}}],[\"主机名\",{\"0\":{\"275\":1}}],[\"主从或主备\",{\"1\":{\"342\":1}}],[\"主从架构需要对任务进行分类\",{\"1\":{\"341\":1}}],[\"主从架构的从机也执行任务\",{\"1\":{\"341\":1}}],[\"主从相互连接\",{\"1\":{\"334\":1}}],[\"主从\",{\"0\":{\"341\":1},\"1\":{\"334\":1}}],[\"主从之间可能存在同步延迟\",{\"1\":{\"333\":1}}],[\"主从复制\",{\"0\":{\"333\":1}}],[\"主从切换无感知\",{\"1\":{\"314\":1}}],[\"主从模式\",{\"1\":{\"314\":1}}],[\"主线题材往往被称为热点\",{\"1\":{\"398\":1}}],[\"主线题材龙头\",{\"1\":{\"398\":1}}],[\"主线题材内的经历过分歧\",{\"1\":{\"244\":1}}],[\"主线程中\",{\"1\":{\"318\":1}}],[\"主线程accept\",{\"1\":{\"318\":1}}],[\"主线修复或者加速的\",{\"1\":{\"244\":1}}],[\"主线内的标的\",{\"1\":{\"244\":1}}],[\"主线强得一批\",{\"1\":{\"244\":1}}],[\"主线也能诞生大龙头\",{\"1\":{\"243\":1}}],[\"主线板块\",{\"1\":{\"242\":1}}],[\"主要在两个方面\",{\"1\":{\"406\":1}}],[\"主要看资金集中在哪些票上面\",{\"1\":{\"406\":1}}],[\"主要指针对振幅\",{\"1\":{\"406\":1}}],[\"主要是了解最近市场的重心在哪里\",{\"1\":{\"406\":1}}],[\"主要是指美国股市\",{\"1\":{\"402\":1}}],[\"主要是副本冗余实现高可用\",{\"0\":{\"331\":1}}],[\"主要有以下几个指标\",{\"1\":{\"400\":1}}],[\"主要有三种\",{\"1\":{\"143\":1}}],[\"主要也表现为以下几点\",{\"1\":{\"398\":1}}],[\"主要网络延迟导致的数据不一致问题\",{\"1\":{\"344\":1}}],[\"主要原因\",{\"1\":{\"328\":1}}],[\"主要体现为\",{\"1\":{\"104\":1}}],[\"主要\",{\"1\":{\"59\":1}}],[\"大阴棒\",{\"1\":{\"406\":1}}],[\"大阴柱\",{\"1\":{\"398\":1}}],[\"大长腿\",{\"1\":{\"406\":1}}],[\"大票小票是都在涨还是都在跌\",{\"1\":{\"406\":1}}],[\"大概率变盘\",{\"1\":{\"405\":1}}],[\"大多数短线投机者都将龙头视为影响情绪的重要参考指标\",{\"1\":{\"404\":1}}],[\"大多数人肯定以兑现利润为主\",{\"1\":{\"404\":1}}],[\"大致预判一下大盘的走势\",{\"1\":{\"406\":1}}],[\"大致就能判断出今日这个题材的延续性\",{\"1\":{\"404\":1}}],[\"大致说来\",{\"1\":{\"398\":2}}],[\"大凡在一轮题材炒作中能走出来的龙头\",{\"1\":{\"398\":1}}],[\"大阳线吞没昨天的阴线或上影线\",{\"1\":{\"398\":1}}],[\"大资金在关键价位用大买单主动扫掉压单\",{\"1\":{\"398\":1}}],[\"大题材+小资金=小牛\",{\"1\":{\"398\":1}}],[\"大题材+大资金=大牛\",{\"1\":{\"398\":1}}],[\"大金融\",{\"1\":{\"398\":1}}],[\"大文件\",{\"1\":{\"370\":1}}],[\"大港股份盘中摸跌停\",{\"1\":{\"244\":1}}],[\"大港股份\",{\"1\":{\"244\":1}}],[\"大家有进有出\",{\"1\":{\"406\":1}}],[\"大家能买到的龙头\",{\"1\":{\"398\":1}}],[\"大家都看着呢\",{\"1\":{\"404\":1}}],[\"大家都搞不清楚这个票为什么涨\",{\"1\":{\"398\":1}}],[\"大家都要做到心理有数\",{\"1\":{\"242\":1}}],[\"大家记住\",{\"1\":{\"243\":1}}],[\"大家也也是意识到领跌的品种超跌了应该暂时理智起来\",{\"1\":{\"243\":1}}],[\"大盘指数\",{\"1\":{\"406\":1}}],[\"大盘指数的复盘\",{\"1\":{\"406\":1}}],[\"大盘环境好\",{\"1\":{\"403\":1}}],[\"大盘分析\",{\"0\":{\"257\":1}}],[\"大盘继续扑街\",{\"1\":{\"244\":1}}],[\"大盘连续弱势\",{\"1\":{\"243\":1}}],[\"大盘的弱转强\",{\"0\":{\"243\":1}}],[\"大盘\",{\"1\":{\"242\":1}}],[\"大部分使用消费队列的架构模式\",{\"1\":{\"131\":1}}],[\"大部分情况下\",{\"1\":{\"128\":1}}],[\"怎么上车都是可以的\",{\"1\":{\"398\":1}}],[\"怎么离场\",{\"1\":{\"242\":1}}],[\"怎么介入\",{\"1\":{\"242\":1}}],[\"怎么样的弱转强是确定性高\",{\"1\":{\"242\":1}}],[\"怎么处理异常\",{\"0\":{\"240\":1}}],[\"希望借助挂单时间更早比其他人提前买到\",{\"1\":{\"398\":1}}],[\"希望能重塑你们的弱转强理解\",{\"1\":{\"242\":1}}],[\"希望系统停顿时间最短\",{\"1\":{\"78\":1}}],[\"说的是买卖双方的行为\",{\"1\":{\"244\":1}}],[\"说是浅谈\",{\"1\":{\"242\":1}}],[\"说明打板后容易炸板\",{\"1\":{\"404\":1}}],[\"说明是众望所归\",{\"1\":{\"404\":1}}],[\"说明同一个对象\",{\"1\":{\"98\":1}}],[\"说明\",{\"1\":{\"78\":1,\"190\":1}}],[\"说明核心类库中没有这个类\",{\"1\":{\"60\":1}}],[\"怕写深奥了你们理解不了\",{\"1\":{\"242\":1}}],[\"我也建议读者朋友根据这个开局情况赶紧兑现利润为主\",{\"1\":{\"404\":1}}],[\"我个人认为除了市场环境的预判\",{\"1\":{\"406\":1}}],[\"我个人以为\",{\"1\":{\"398\":1}}],[\"我个人在低位板中\",{\"1\":{\"244\":1}}],[\"我就不信你涨不上去\",{\"1\":{\"398\":1}}],[\"我就不卖\",{\"1\":{\"398\":1}}],[\"我就止损\",{\"1\":{\"398\":1}}],[\"我看你能跌哪儿去\",{\"1\":{\"398\":1}}],[\"我去\",{\"1\":{\"398\":2}}],[\"我一般就做龙头未见顶之前的分歧转一致\",{\"1\":{\"244\":1}}],[\"我一般就填好单子价格和数量等待最后一击了\",{\"1\":{\"244\":1}}],[\"我不去参与这种\",{\"1\":{\"244\":1}}],[\"我不认为今天的弱转强多大可能成功\",{\"1\":{\"244\":1}}],[\"我自己的实盘是没有太多的考究\",{\"1\":{\"244\":1}}],[\"我直接举两个例子\",{\"1\":{\"244\":1}}],[\"我想了很久\",{\"1\":{\"242\":1}}],[\"我们要见微知著\",{\"1\":{\"406\":1}}],[\"我们要重点观察其持续性\",{\"1\":{\"403\":1}}],[\"我们只需要在板块指数\",{\"1\":{\"406\":1}}],[\"我们都需要对热点板块\",{\"1\":{\"406\":1}}],[\"我们才有机会\",{\"1\":{\"406\":1}}],[\"我们做投资\",{\"1\":{\"404\":1}}],[\"我们做短线的\",{\"1\":{\"404\":1}}],[\"我们力图在大盘环境好的时候出手\",{\"1\":{\"403\":1}}],[\"我们就只有跟市场学习\",{\"1\":{\"405\":1}}],[\"我们就要认真观察\",{\"1\":{\"403\":1}}],[\"我们就可以通过macd的这种表现\",{\"1\":{\"398\":1}}],[\"我们就可以让后面那个请求锁的线程不放弃cpu的执行时间\",{\"1\":{\"159\":1}}],[\"我们就可以把共享数据的可见范围限制在同一个线程之内\",{\"1\":{\"131\":1}}],[\"我们还要注意涨停板是不是越来越多\",{\"1\":{\"403\":1}}],[\"我们把个股跟题材的关联度称为题材硬度\",{\"1\":{\"406\":1}}],[\"我们把此时短线情绪所处的状态称之为\",{\"1\":{\"400\":1}}],[\"我们把指数情绪冰点与短线情绪的冰点的重合\",{\"1\":{\"400\":1}}],[\"我们称之为短线情绪冰点\",{\"1\":{\"400\":1}}],[\"我们强调\",{\"1\":{\"398\":1}}],[\"我们再综合分析一下情绪周期处于什么阶段\",{\"1\":{\"398\":1}}],[\"我们在市场上参与短线投机\",{\"1\":{\"404\":1}}],[\"我们在实际的操盘过程之中\",{\"1\":{\"404\":1}}],[\"我们在前面已专门阐述\",{\"1\":{\"398\":1}}],[\"我们在方法执行前后打印的日志\",{\"1\":{\"2\":1}}],[\"我们很多初学者\",{\"1\":{\"398\":1}}],[\"我们生活在一个前所未有的新时代\",{\"1\":{\"398\":1}}],[\"我们也把这个主要的力简称为主力\",{\"1\":{\"387\":1}}],[\"我们叫做为主动性大买盘\",{\"1\":{\"244\":1}}],[\"我们去研究领涨的概念板块的分歧转一致弱转强到底有什么意义呢\",{\"1\":{\"244\":1}}],[\"我们不是为了去预判大盘的走势\",{\"1\":{\"243\":1}}],[\"我们可以通过atomicinteger或者synchronized来保证+1操作的原子性\",{\"1\":{\"184\":1}}],[\"我们可以使用基于冲突检测的乐观并发策略\",{\"1\":{\"126\":1}}],[\"我们需要将变量设置为volatile类型的变量\",{\"1\":{\"181\":1}}],[\"我们需让当前线程进行自旋\",{\"1\":{\"159\":1}}],[\"我们平常说一个类不是线程安全的\",{\"1\":{\"121\":1}}],[\"我们现在以使用最为流行的\",{\"1\":{\"70\":1}}],[\"弱的票他正常的预期就是会继续走低\",{\"1\":{\"244\":1}}],[\"弱\",{\"1\":{\"244\":1}}],[\"弱势区域转强势区域\",{\"1\":{\"244\":1}}],[\"弱势平台震荡突然突破向上\",{\"1\":{\"243\":1}}],[\"弱势震荡\",{\"1\":{\"243\":1}}],[\"弱转强低位板比高位弱转强板出现的几率更大\",{\"1\":{\"244\":1}}],[\"弱转强迹象\",{\"1\":{\"244\":1}}],[\"弱转强本质上就是利用了预期差做文章\",{\"1\":{\"242\":1}}],[\"弱转强是一个综合的局\",{\"1\":{\"242\":2}}],[\"弱转强\",{\"0\":{\"242\":1}}],[\"弱引用\",{\"1\":{\"213\":1}}],[\"你和游资就有了\",{\"1\":{\"406\":1}}],[\"你要清醒地知道你的位置\",{\"1\":{\"398\":1}}],[\"你也能成为架构师\",{\"0\":{\"299\":1}}],[\"你也不应该在\",{\"1\":{\"236\":1}}],[\"你们应该都是知道的\",{\"1\":{\"244\":1}}],[\"你好我好大家好\",{\"1\":{\"244\":1}}],[\"你手上的个股昨天掉队的个股今天要弱转强成功\",{\"1\":{\"244\":1}}],[\"你遇到过那些情况\",{\"0\":{\"224\":1}}],[\"你遇到过哪些情况\",{\"0\":{\"224\":1}}],[\"吗\",{\"0\":{\"236\":1}}],[\"存量博弈模式\",{\"1\":{\"398\":1}}],[\"存储云与图片云\",{\"1\":{\"374\":1}}],[\"存储层技术\",{\"0\":{\"370\":1}}],[\"存储数据不存在\",{\"1\":{\"316\":1}}],[\"存储系统同步方式\",{\"1\":{\"344\":2}}],[\"存储系统有心无力\",{\"1\":{\"316\":1}}],[\"存储系统也无能为力\",{\"1\":{\"316\":1}}],[\"存储\",{\"1\":{\"315\":1}}],[\"存储高性能\",{\"0\":{\"313\":1}}],[\"存储高可用\",{\"0\":{\"330\":1},\"1\":{\"303\":1}}],[\"存在安全问题\",{\"1\":{\"345\":1}}],[\"存在一个节点作为协调者\",{\"1\":{\"336\":1}}],[\"存在同步延迟\",{\"1\":{\"335\":1}}],[\"存在某个主机写入数据后还未同步至另一台主机\",{\"1\":{\"335\":1}}],[\"存在的问题\",{\"1\":{\"314\":1}}],[\"存在数组了为什么还要\",{\"0\":{\"233\":1}}],[\"存活的极端情况\",{\"1\":{\"77\":1}}],[\"键值对存储\",{\"1\":{\"230\":1}}],[\"破换了封装性\",{\"1\":{\"229\":1}}],[\"另一方面\",{\"1\":{\"388\":1}}],[\"另一套就是网络编程\",{\"1\":{\"228\":1}}],[\"另外就是对市场情绪周期进行一个梳理回顾\",{\"1\":{\"405\":1}}],[\"另外可以通过synchronized和lock来保证有序性\",{\"1\":{\"116\":1}}],[\"另外\",{\"1\":{\"78\":1,\"402\":2}}],[\"另外一个是空间问题\",{\"1\":{\"77\":1}}],[\"输赢的关键在棋士如何运筹帷幄\",{\"1\":{\"395\":1}}],[\"输出\",{\"1\":{\"227\":1}}],[\"输入\",{\"1\":{\"227\":1}}],[\"输入输出设备的使用权等等\",{\"1\":{\"225\":1}}],[\"流通盘\",{\"1\":{\"406\":1}}],[\"流通盘大不大\",{\"1\":{\"398\":1}}],[\"流控\",{\"1\":{\"359\":1}}],[\"流程\",{\"0\":{\"381\":1},\"1\":{\"318\":3}}],[\"流水线\",{\"0\":{\"291\":1}}],[\"流\",{\"0\":{\"227\":1}}],[\"阻止实例化中那些用此关键字修饰的变量序列化\",{\"1\":{\"226\":1}}],[\"阻塞和\",{\"1\":{\"148\":1}}],[\"阻塞和等待的区别在于\",{\"1\":{\"138\":1}}],[\"阻塞是被动的\",{\"1\":{\"138\":1}}],[\"阻塞\",{\"0\":{\"136\":1}}],[\"关注盘面上涨家数以及下跌家数的数量对比\",{\"1\":{\"403\":1}}],[\"关注的粒度是数据而不是系统\",{\"1\":{\"323\":1}}],[\"关键还是在于独立思考\",{\"1\":{\"402\":1}}],[\"关键之一是网络编程模型\",{\"1\":{\"318\":1}}],[\"关键数据可直接读取主节点\",{\"1\":{\"314\":1}}],[\"关键字\",{\"1\":{\"226\":1}}],[\"关系数据库大数据情况下\",{\"1\":{\"315\":1}}],[\"关系数据库的文档搜索能力较弱\",{\"1\":{\"315\":1}}],[\"关系数据库的\",{\"1\":{\"315\":1}}],[\"关系数据库的缺点\",{\"1\":{\"315\":1}}],[\"关系数据库\",{\"0\":{\"314\":1}}],[\"关联方众多\",{\"1\":{\"378\":1}}],[\"关联\",{\"1\":{\"301\":1}}],[\"关闭防火墙\",{\"0\":{\"263\":1}}],[\"关闭\",{\"1\":{\"229\":1}}],[\"关于人气股\",{\"1\":{\"404\":1}}],[\"关于\",{\"0\":{\"400\":1}}],[\"关于散户炒股的观点\",{\"1\":{\"395\":1}}],[\"关于个股弱转强\",{\"1\":{\"244\":1}}],[\"关于final重排序的总结\",{\"0\":{\"177\":1}}],[\"关于两者之间的性能的话\",{\"1\":{\"12\":1}}],[\"含有指令和数据的文件\",{\"1\":{\"225\":1}}],[\"含有参数的构造方法\",{\"1\":{\"19\":1}}],[\"负载均衡\",{\"1\":{\"373\":1}}],[\"负载均衡集群\",{\"1\":{\"342\":1}}],[\"负载均衡类\",{\"1\":{\"319\":1}}],[\"负载均衡器算法\",{\"1\":{\"319\":1}}],[\"负载均衡器架构\",{\"1\":{\"319\":1}}],[\"负载均衡器的分类\",{\"1\":{\"319\":1}}],[\"负载因子\",{\"1\":{\"41\":1}}],[\"负责处理时间\",{\"1\":{\"318\":1}}],[\"负责监听和分配时间\",{\"1\":{\"318\":1}}],[\"负反馈风标\",{\"1\":{\"250\":1}}],[\"负担要比进程小得多\",{\"1\":{\"225\":1}}],[\"简洁优美的k线\",{\"1\":{\"398\":1}}],[\"简介\",{\"1\":{\"261\":1}}],[\"简单\",{\"1\":{\"318\":1,\"319\":2,\"336\":1}}],[\"简单优于复杂\",{\"0\":{\"306\":1}}],[\"简单原则\",{\"0\":{\"306\":1}}],[\"简单来说\",{\"1\":{\"225\":1}}],[\"简单易学\",{\"1\":{\"201\":1}}],[\"简述线程\",{\"0\":{\"225\":1}}],[\"检查时异常\",{\"1\":{\"223\":1}}],[\"检测是否为空时未检测对象是否为\",{\"1\":{\"95\":1}}],[\"前国务卿希拉里一样\",{\"1\":{\"404\":1}}],[\"前期各板块的龙头股\",{\"1\":{\"404\":1}}],[\"前期强势股\",{\"1\":{\"404\":1}}],[\"前期强势股的表现\",{\"1\":{\"404\":1}}],[\"前排被顶一字是因为龙头战法的强者恒强\",{\"1\":{\"404\":1}}],[\"前十大股东基金持股太多\",{\"1\":{\"398\":1}}],[\"前面说过\",{\"1\":{\"398\":1}}],[\"前瞻者策动\",{\"1\":{\"398\":1}}],[\"前瞻思维的策动者\",{\"1\":{\"398\":1}}],[\"前一天的资金一定是锁筹而开的\",{\"1\":{\"244\":1}}],[\"前两天的涨停时间abcd\",{\"1\":{\"244\":1}}],[\"前会执行\",{\"1\":{\"222\":1}}],[\"前提锁对象得是同一个对象或者class\",{\"1\":{\"162\":1}}],[\"静态导包\",{\"1\":{\"219\":1}}],[\"静态代码快\",{\"1\":{\"219\":1}}],[\"静态方法\",{\"1\":{\"219\":1}}],[\"静态常量\",{\"1\":{\"219\":1}}],[\"静态变量\",{\"1\":{\"66\":1,\"70\":1}}],[\"域名\",{\"1\":{\"281\":1}}],[\"域时进行过度的指令重排序\",{\"1\":{\"218\":1}}],[\"域时会插入\",{\"1\":{\"218\":1}}],[\"域\",{\"1\":{\"218\":2}}],[\"域的对象的引用\",{\"1\":{\"218\":1}}],[\"域的读\",{\"0\":{\"189\":1}}],[\"域的写入\",{\"1\":{\"218\":1}}],[\"域的写\",{\"0\":{\"189\":1}}],[\"遵守两个重排序规则\",{\"1\":{\"218\":1}}],[\"被套牢的感觉度日如年\",{\"1\":{\"398\":1}}],[\"被套以后\",{\"1\":{\"395\":1}}],[\"被存在磁盘或其他的数据存储设备中\",{\"1\":{\"225\":1}}],[\"被修饰的常量\",{\"1\":{\"218\":1}}],[\"被修饰的方法\",{\"1\":{\"218\":1}}],[\"被修饰的方法不可被重写\",{\"1\":{\"218\":1}}],[\"被修饰的变量不可被变更\",{\"1\":{\"218\":1}}],[\"被调用的线程执行完毕\",{\"1\":{\"137\":1,\"138\":1}}],[\"浅拷贝\",{\"1\":{\"217\":1}}],[\"深圳成指\",{\"1\":{\"406\":1}}],[\"深圳先行示范区\",{\"1\":{\"398\":1}}],[\"深度拷贝也需要实现\",{\"1\":{\"231\":1}}],[\"深拷贝\",{\"1\":{\"217\":1}}],[\"深拷贝和浅拷贝\",{\"0\":{\"217\":1}}],[\"深入的学习是十分有必要的\",{\"1\":{\"13\":1}}],[\"第2步中创建的hadnler\",{\"1\":{\"318\":1}}],[\"第二句话是国内形势一片大好\",{\"1\":{\"402\":1}}],[\"第二阶段\",{\"1\":{\"398\":1}}],[\"第二天突然发生变化\",{\"1\":{\"403\":1}}],[\"第二天在主线强烈转一致的预期之下\",{\"1\":{\"244\":1}}],[\"第二天有三个判定标准\",{\"1\":{\"244\":1}}],[\"第二只我个人一般是是放弃的\",{\"1\":{\"244\":1}}],[\"第二只直接放弃\",{\"1\":{\"244\":1}}],[\"第二个字是\",{\"1\":{\"244\":1}}],[\"第二次呢\",{\"1\":{\"398\":1}}],[\"第二次机会呢\",{\"1\":{\"398\":1}}],[\"第二次\",{\"1\":{\"244\":1}}],[\"第三天来接力的资金可能就会很谨慎了\",{\"1\":{\"406\":1}}],[\"第三天就不行了\",{\"1\":{\"398\":1}}],[\"第三句话是国外水深火热\",{\"1\":{\"402\":1}}],[\"第三阶段\",{\"1\":{\"398\":1}}],[\"第三次呢\",{\"1\":{\"244\":1}}],[\"第三个字\",{\"1\":{\"244\":1}}],[\"第三个\",{\"1\":{\"216\":1}}],[\"第一句话是领导们都很忙\",{\"1\":{\"402\":1}}],[\"第一阶段\",{\"1\":{\"398\":1}}],[\"第一个\",{\"1\":{\"244\":1}}],[\"第一个是\",{\"1\":{\"151\":1}}],[\"第一次分歧点的时候\",{\"1\":{\"244\":1}}],[\"第一次添加是会给\",{\"1\":{\"25\":1}}],[\"第一次则按照\",{\"1\":{\"19\":1}}],[\"第一次扩容时\",{\"1\":{\"19\":1}}],[\"哈希函数结果冲突就在用第二个\",{\"1\":{\"216\":1}}],[\"又是情报官\",{\"1\":{\"398\":1}}],[\"又跌下去了\",{\"1\":{\"398\":1}}],[\"又称为失效模式与后果分\",{\"1\":{\"327\":1}}],[\"又称内存栅栏\",{\"1\":{\"187\":1}}],[\"又或者是断板\",{\"1\":{\"244\":1}}],[\"又叫双哈希\",{\"1\":{\"216\":1}}],[\"空的散列地��总能找到\",{\"1\":{\"216\":1}}],[\"空间碎片太多可能会导致\",{\"1\":{\"77\":1}}],[\"开源中介\",{\"1\":{\"334\":1}}],[\"开源系统\",{\"0\":{\"382\":1},\"1\":{\"328\":1}}],[\"开源方案\",{\"1\":{\"314\":1}}],[\"开发框架\",{\"1\":{\"371\":1}}],[\"开发层技术\",{\"0\":{\"371\":1}}],[\"开发人员将业务功能提炼为多个规则\",{\"1\":{\"363\":1}}],[\"开发阶段\",{\"1\":{\"359\":1}}],[\"开发工作量大\",{\"1\":{\"314\":1}}],[\"开发越慢\",{\"1\":{\"306\":1}}],[\"开盘直接卖出\",{\"1\":{\"458\":1}}],[\"开盘不及预期\",{\"1\":{\"458\":1,\"473\":1}}],[\"开盘超预期\",{\"1\":{\"451\":1}}],[\"开盘迅速下跌\",{\"1\":{\"434\":1,\"459\":1}}],[\"开盘前\",{\"1\":{\"402\":1}}],[\"开盘就快速涨停的\",{\"1\":{\"398\":1}}],[\"开盘价和收盘价十分接近\",{\"1\":{\"398\":1}}],[\"开盘价\",{\"1\":{\"398\":2}}],[\"开盘\",{\"1\":{\"244\":1}}],[\"开放定址法\",{\"1\":{\"216\":1}}],[\"开始思考大港股份涨停的逻辑了\",{\"1\":{\"398\":1}}],[\"开始追逐\",{\"1\":{\"398\":1}}],[\"开始吸引市场的目光\",{\"1\":{\"398\":1}}],[\"开始进行业务处理\",{\"1\":{\"318\":1}}],[\"开始安装\",{\"1\":{\"279\":1}}],[\"开始位置\",{\"1\":{\"100\":1}}],[\"开始和结束的位置进行创建\",{\"1\":{\"90\":1}}],[\"开始事务\",{\"1\":{\"3\":2,\"6\":2}}],[\"克隆方法\",{\"1\":{\"231\":1}}],[\"克隆\",{\"1\":{\"215\":1}}],[\"反过来又会打击人气\",{\"1\":{\"404\":1}}],[\"反过来判断主力意图\",{\"1\":{\"398\":1}}],[\"反映市场情绪的数据\",{\"1\":{\"406\":1}}],[\"反映市场情绪的数据的复盘\",{\"1\":{\"406\":1}}],[\"反映市场氛围的数据变化\",{\"1\":{\"403\":1}}],[\"反映在股票上\",{\"1\":{\"405\":4}}],[\"反映出今天接力的资金承接出了问题\",{\"1\":{\"404\":1}}],[\"反复\",{\"1\":{\"400\":1}}],[\"反转意味更强烈\",{\"1\":{\"398\":1}}],[\"反正都套这么久\",{\"1\":{\"398\":1}}],[\"反包股\",{\"1\":{\"406\":1}}],[\"反包板就是个股反包动作形成的涨停板\",{\"1\":{\"398\":1}}],[\"反包板\",{\"1\":{\"398\":1}}],[\"反包\",{\"1\":{\"398\":1}}],[\"反射能够获取的信息\",{\"1\":{\"229\":1}}],[\"反射的实现方式\",{\"1\":{\"229\":1}}],[\"反射的作用与原理\",{\"0\":{\"229\":1}}],[\"反射机制是在运行时\",{\"1\":{\"229\":1}}],[\"反射\",{\"1\":{\"215\":1}}],[\"反之\",{\"1\":{\"159\":1,\"244\":1,\"400\":2}}],[\"虚引用\",{\"1\":{\"213\":1}}],[\"虚拟机中没有提供\",{\"1\":{\"203\":1}}],[\"虚拟机中内存最大的一块\",{\"1\":{\"66\":1,\"71\":1}}],[\"虚拟机堆转储快照分析工具\",{\"1\":{\"83\":1}}],[\"虚拟机统计信息监控工具\",{\"1\":{\"83\":1}}],[\"虚拟机进程状况工具\",{\"1\":{\"83\":1}}],[\"虚拟机会根据当前系统的运行情况收集性能监控信息\",{\"1\":{\"78\":1}}],[\"虚拟机会把类的二级制数据中的符号引用替换为直接引用\",{\"1\":{\"64\":1}}],[\"虚拟机为例讲解\",{\"1\":{\"70\":1}}],[\"虚拟机为类的静态变量分配内存\",{\"1\":{\"63\":1}}],[\"虚拟机栈中引用的对象\",{\"1\":{\"76\":1}}],[\"虚拟机栈\",{\"0\":{\"67\":1},\"1\":{\"66\":1}}],[\"虚拟机安全地执行\",{\"1\":{\"62\":1}}],[\"虚拟机上运行的目标代码\",{\"1\":{\"54\":1}}],[\"虚拟机包括一套字节码指令集\",{\"1\":{\"54\":1}}],[\"虚拟机\",{\"1\":{\"54\":1}}],[\"效率低\",{\"1\":{\"345\":1}}],[\"效率要比\",{\"1\":{\"228\":1}}],[\"效率较低\",{\"1\":{\"209\":1}}],[\"效率将会变低\",{\"1\":{\"77\":1}}],[\"97\",{\"1\":{\"470\":1}}],[\"90\",{\"1\":{\"438\":1}}],[\"961099916\",{\"1\":{\"291\":1}}],[\"9点几\",{\"1\":{\"244\":1}}],[\"9\",{\"0\":{\"209\":1,\"249\":1,\"250\":1,\"338\":1},\"1\":{\"398\":1}}],[\"返回yes消息给协调者\",{\"1\":{\"336\":1}}],[\"返回值是什么\",{\"0\":{\"220\":1}}],[\"返回的是对象根据内存地址算出的一个值\",{\"1\":{\"208\":1}}],[\"返回类型无要求\",{\"1\":{\"206\":1}}],[\"返回类型都相同\",{\"1\":{\"206\":1}}],[\"返回字符组\",{\"1\":{\"91\":1}}],[\"要把这些票涨停的原因弄清楚\",{\"1\":{\"406\":1}}],[\"要有意识地训练自己在观大局的前提下\",{\"1\":{\"405\":1}}],[\"要理解大多人的心理状态\",{\"1\":{\"404\":1}}],[\"要做一个保守的投资者\",{\"1\":{\"404\":1}}],[\"要时刻关注着上涨家数\",{\"1\":{\"404\":1}}],[\"要及时上车\",{\"1\":{\"398\":1}}],[\"要是再跌\",{\"1\":{\"398\":1}}],[\"要是不一致则说明存在别的线程在操作\",{\"1\":{\"234\":1}}],[\"要么有绝对的纪律\",{\"1\":{\"395\":1}}],[\"要么有顽强的天赋\",{\"1\":{\"395\":1}}],[\"要么有领先众人的独门手艺\",{\"1\":{\"395\":1}}],[\"要么异常的勤奋\",{\"1\":{\"395\":1}}],[\"要么全部失败\",{\"1\":{\"324\":1}}],[\"要熔断防止影响该系统\",{\"1\":{\"345\":1}}],[\"要用可量化的指标\",{\"1\":{\"328\":1}}],[\"要解决的问题\",{\"1\":{\"318\":1}}],[\"要从暴力拉起封板\",{\"1\":{\"244\":1}}],[\"要求方法名\",{\"1\":{\"206\":1}}],[\"要保证线程安全\",{\"1\":{\"129\":1}}],[\"双方即将公布一些措施\",{\"1\":{\"404\":1}}],[\"双目运算符\",{\"1\":{\"204\":1}}],[\"双亲委派\",{\"1\":{\"59\":2}}],[\"个人觉得比花同样的时间看某些哗众取宠的公号靠谱得多\",{\"1\":{\"402\":1}}],[\"个人加速器可更换\",{\"1\":{\"268\":1}}],[\"个方案\",{\"1\":{\"310\":1}}],[\"个股信息\",{\"0\":{\"482\":1}}],[\"个股所在的位置\",{\"1\":{\"406\":1}}],[\"个股与个股之间会相互影响\",{\"1\":{\"403\":1}}],[\"个股筹码结构\",{\"1\":{\"398\":1}}],[\"个股坐在这上面\",{\"1\":{\"398\":1}}],[\"个股将要打到涨停价时\",{\"1\":{\"398\":1}}],[\"个股分析\",{\"0\":{\"259\":1}}],[\"个股的承接问题\",{\"1\":{\"403\":1}}],[\"个股的t+1弱转强\",{\"1\":{\"244\":1}}],[\"个股的分歧与一致\",{\"1\":{\"244\":1}}],[\"个股自身的弱转强\",{\"1\":{\"244\":2}}],[\"个股自身弱转强\",{\"1\":{\"242\":1}}],[\"个股间的弱转强\",{\"1\":{\"244\":1}}],[\"个股真的强\",{\"1\":{\"244\":1}}],[\"个股强\",{\"1\":{\"244\":2}}],[\"个股是真的弱\",{\"1\":{\"244\":1}}],[\"个股弱\",{\"1\":{\"244\":2}}],[\"个字节\",{\"1\":{\"203\":2}}],[\"个操作数\",{\"1\":{\"126\":1}}],[\"八种基本数据类型的大小\",{\"0\":{\"203\":1}}],[\"易理解\",{\"1\":{\"363\":1}}],[\"易扩展\",{\"1\":{\"202\":1}}],[\"易复用\",{\"1\":{\"202\":1}}],[\"嵌入式开发等一般采用面向过程开发\",{\"1\":{\"202\":1}}],[\"让市场上的资金都买不到\",{\"1\":{\"398\":1}}],[\"让它正式提供服务\",{\"1\":{\"340\":1}}],[\"让程序耦合度更低\",{\"1\":{\"201\":1}}],[\"让其使用更加方便和简单\",{\"1\":{\"16\":1}}],[\"屏障\",{\"1\":{\"190\":8,\"218\":2}}],[\"屏蔽了与具体操作系统平台相关的信息\",{\"1\":{\"54\":1}}],[\"特点\",{\"1\":{\"314\":2,\"398\":1}}],[\"特点就是gc时暂停所有应用线程\",{\"1\":{\"78\":1}}],[\"特别提醒的是\",{\"1\":{\"398\":1}}],[\"特别是主线题材龙头\",{\"1\":{\"398\":1}}],[\"特别是政策方面\",{\"1\":{\"390\":1}}],[\"特别是大主线龙头的前两次分歧转一致\",{\"1\":{\"244\":1}}],[\"特别注意\",{\"1\":{\"244\":1}}],[\"特定类型的编译器重排序和处理器重排序\",{\"1\":{\"187\":1}}],[\"鼓励大家将共享的long和double变量设置为volatile类型\",{\"1\":{\"185\":1}}],[\"目的是让读者朋友各自明白自己所在的位置\",{\"1\":{\"398\":1}}],[\"目的是为了增加并发问题的产生几率\",{\"1\":{\"184\":1}}],[\"目的\",{\"1\":{\"344\":1}}],[\"目标\",{\"0\":{\"379\":1}}],[\"目标地址hash\",{\"1\":{\"319\":1}}],[\"目标个股\",{\"1\":{\"250\":1}}],[\"目前问题\",{\"1\":{\"315\":1}}],[\"目前很大一部分的java应用都集中在互联网站或b\",{\"1\":{\"78\":1}}],[\"注\",{\"1\":{\"184\":1,\"406\":2}}],[\"注意以下几点\",{\"1\":{\"398\":1}}],[\"注意以下几个方面\",{\"1\":{\"398\":1}}],[\"注意一下当时的市场氛围\",{\"1\":{\"398\":1}}],[\"注意这里的是\",{\"1\":{\"175\":1}}],[\"注意此时内存当中i的值还是0\",{\"1\":{\"106\":1}}],[\"注意\",{\"0\":{\"283\":1},\"1\":{\"62\":1,\"166\":1,\"173\":1,\"203\":1,\"204\":1,\"205\":1,\"398\":2}}],[\"引入kdj\",{\"1\":{\"431\":1}}],[\"引入中介方\",{\"1\":{\"334\":1}}],[\"引导市场合力买入一只股票的行为\",{\"1\":{\"398\":1}}],[\"引起资金疯狂追捧\",{\"1\":{\"398\":1}}],[\"引起可见性问题的主要原因是每个线程拥有自己的一个高速缓存区\",{\"1\":{\"182\":1}}],[\"引擎可以执行规则\",{\"1\":{\"363\":1}}],[\"引擎就是内核\",{\"1\":{\"363\":1}}],[\"引领回流\",{\"1\":{\"244\":1}}],[\"引用数据类型\",{\"1\":{\"177\":1}}],[\"引用释放时计数减1\",{\"1\":{\"76\":1}}],[\"引用计数\",{\"1\":{\"76\":1}}],[\"防重排序\",{\"0\":{\"181\":1}}],[\"防止题材一日游\",{\"1\":{\"398\":1}}],[\"防止用户访问过于频繁\",{\"1\":{\"345\":1}}],[\"防止相互影响过深\",{\"1\":{\"303\":1}}],[\"防止上面的\",{\"1\":{\"190\":1}}],[\"防止应用自己的类库覆盖了核心类库\",{\"1\":{\"60\":1}}],[\"防止应用覆盖jre的核心类\",{\"1\":{\"60\":1}}],[\"防止迭代器遍历的时候修改\",{\"1\":{\"41\":1}}],[\"防止并发问题\",{\"1\":{\"15\":1}}],[\"防止不同的对象校验的\",{\"1\":{\"14\":1}}],[\"xip\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"x64\",{\"1\":{\"286\":1}}],[\"xvf\",{\"1\":{\"280\":1}}],[\"x86\",{\"1\":{\"279\":1}}],[\"x86不会对写\",{\"1\":{\"178\":1}}],[\"xx\",{\"1\":{\"78\":10,\"159\":1}}],[\"很能直观地感知发现\",{\"1\":{\"406\":1}}],[\"很有可能预示着今日风险的来临\",{\"1\":{\"404\":1}}],[\"很有意思的是\",{\"1\":{\"178\":1}}],[\"很多短线选手\",{\"1\":{\"405\":1}}],[\"很多理性的投资者都会管住自己的手\",{\"1\":{\"404\":1}}],[\"很多高手第一时间都会选择卖出\",{\"1\":{\"404\":1}}],[\"很难说谁决定谁\",{\"1\":{\"400\":1}}],[\"很容易成交不到\",{\"1\":{\"398\":1}}],[\"很容易导致性能瓶颈\",{\"1\":{\"318\":1}}],[\"很少人知道它行将长成一棵参天巨树\",{\"1\":{\"398\":1}}],[\"很少会存在修改多层\",{\"1\":{\"349\":1}}],[\"很显然\",{\"1\":{\"116\":1,\"395\":1}}],[\"额外增加约束\",{\"1\":{\"177\":1}}],[\"禁止判断\",{\"1\":{\"398\":1}}],[\"禁止开机启动\",{\"1\":{\"263\":1}}],[\"禁止下面所有的普通写操作和上面的\",{\"1\":{\"190\":1}}],[\"禁止下面所有的普通读操作和上面的\",{\"1\":{\"190\":1}}],[\"禁止上面的普通写和下面的\",{\"1\":{\"190\":1}}],[\"禁止重排序\",{\"0\":{\"190\":1}}],[\"禁止在构造函数对一个final修饰的对象的成员域的写入与随后将这个被构造的对象的引用赋值给引用变量\",{\"1\":{\"177\":1}}],[\"禁止初次读对象的引用与读该对象包含的final域的重排序\",{\"1\":{\"177\":1}}],[\"禁止final域写与构造方法重排序\",{\"1\":{\"177\":1}}],[\"按照强度依次排名\",{\"1\":{\"398\":1}}],[\"按照角色\",{\"1\":{\"227\":1}}],[\"按照操作单元\",{\"1\":{\"227\":1}}],[\"按照流向\",{\"1\":{\"227\":1}}],[\"按照final修饰的数据类型分类\",{\"1\":{\"177\":1}}],[\"按顺序分配内存即可\",{\"1\":{\"77\":1}}],[\"增加\",{\"1\":{\"175\":1}}],[\"增加了缓存\",{\"1\":{\"104\":1}}],[\"读书\",{\"0\":{\"481\":1}}],[\"读写继续访问主机\",{\"1\":{\"332\":1}}],[\"读写分离\",{\"1\":{\"314\":1}}],[\"读提交\",{\"1\":{\"324\":1}}],[\"读未提交\",{\"1\":{\"324\":1}}],[\"读多写少\",{\"1\":{\"316\":1}}],[\"读重排序\",{\"1\":{\"190\":2}}],[\"读\",{\"1\":{\"190\":1}}],[\"读操作可以发给从机是不影响读数据\",{\"1\":{\"333\":1}}],[\"读操作则根据业务进行发给主机还是从机\",{\"1\":{\"333\":1}}],[\"读操作保证能够返回最新的写操作结果\",{\"1\":{\"321\":1}}],[\"读操作是在后面插入两个内存屏障\",{\"1\":{\"190\":1}}],[\"读操作的后面插入一个\",{\"1\":{\"190\":2}}],[\"读取i的值\",{\"1\":{\"184\":1}}],[\"读final域需要的loadload屏障也会被省略掉\",{\"1\":{\"178\":1}}],[\"读final域的重排序规则会要求编译器在读final域的操作前插入一个loadload屏障\",{\"1\":{\"178\":1}}],[\"读final域重排序规则\",{\"0\":{\"173\":1}}],[\"读对象的引用和读该对象的final域存在间接依赖性\",{\"1\":{\"173\":1}}],[\"初学者没有这个思维还情有可原\",{\"1\":{\"406\":1}}],[\"初学者复盘龙虎榜数据的意义\",{\"1\":{\"406\":1}}],[\"初学者基本上没听说过\",{\"1\":{\"406\":1}}],[\"初定计划\",{\"1\":{\"405\":1}}],[\"初次读一个包含\",{\"1\":{\"218\":1}}],[\"初次读对象引用和初次读该对象包含的final域\",{\"1\":{\"173\":1}}],[\"初始化对象\",{\"1\":{\"181\":2}}],[\"初始化\",{\"0\":{\"65\":1}}],[\"初始化容量为\",{\"1\":{\"19\":1}}],[\"初始元素\",{\"1\":{\"17\":2}}],[\"初始容量为\",{\"1\":{\"41\":1}}],[\"初始容量\",{\"1\":{\"17\":2,\"41\":1}}],[\"写与下面可能有的\",{\"1\":{\"190\":1}}],[\"写是在前面和后面分别插入内存屏障\",{\"1\":{\"190\":1}}],[\"写操作还继续访问主机\",{\"1\":{\"333\":1}}],[\"写操作发给主机\",{\"1\":{\"333\":1}}],[\"写操作的后面插入一个\",{\"1\":{\"190\":1}}],[\"写操作的前面插入一个\",{\"1\":{\"190\":1}}],[\"写操作都具有原子性\",{\"1\":{\"185\":1}}],[\"写操作具有原子性\",{\"1\":{\"183\":1}}],[\"写可能不是原子的\",{\"1\":{\"185\":1}}],[\"写\",{\"0\":{\"183\":1}}],[\"写的内存屏障都会被省略\",{\"1\":{\"178\":1}}],[\"写重排序\",{\"1\":{\"178\":1,\"190\":2}}],[\"写final域会要求编译器在final域写之后\",{\"1\":{\"178\":1}}],[\"写final域的重排序规则禁止对final域的写重排序到构造函数之外\",{\"1\":{\"172\":1}}],[\"写final域重排序规则\",{\"0\":{\"172\":1}}],[\"写缓冲区\",{\"1\":{\"108\":1}}],[\"独孤九剑\",{\"1\":{\"405\":1}}],[\"独立降级系统\",{\"1\":{\"345\":1}}],[\"独立式\",{\"1\":{\"337\":1}}],[\"独立存储\",{\"1\":{\"69\":1}}],[\"独裁式\",{\"1\":{\"303\":1}}],[\"独享锁也叫排他锁\",{\"1\":{\"163\":1}}],[\"独享锁\",{\"0\":{\"163\":1}}],[\"再参照同花顺复盘或者某些复盘公号\",{\"1\":{\"406\":1}}],[\"再抓局部重点\",{\"1\":{\"405\":1}}],[\"再制定交易计划\",{\"1\":{\"403\":1}}],[\"再等下\",{\"1\":{\"398\":1}}],[\"再研究数十只短线爆发的牛股\",{\"1\":{\"394\":1}}],[\"再多成本较高\",{\"1\":{\"344\":1}}],[\"再去卡同身位前排\",{\"1\":{\"244\":1}}],[\"再说说板上\",{\"1\":{\"244\":1}}],[\"再往上开8点几\",{\"1\":{\"244\":1}}],[\"再次确定分歧\",{\"1\":{\"244\":1}}],[\"再哈希\",{\"1\":{\"216\":1}}],[\"再进入该线程的内层方法会自动获取锁\",{\"1\":{\"162\":1}}],[\"再切换会线程1执行后续两条指令\",{\"1\":{\"107\":1}}],[\"整个市场犹如秋风扫落叶\",{\"1\":{\"400\":1}}],[\"整个集群就无法提供服务\",{\"1\":{\"336\":1}}],[\"整个系统处于中断状态\",{\"1\":{\"332\":1}}],[\"整个进程无法处理其他连接的事件\",{\"1\":{\"318\":1}}],[\"整体来看\",{\"1\":{\"398\":1}}],[\"整体\",{\"1\":{\"301\":1}}],[\"整体架构\",{\"0\":{\"241\":1}}],[\"整体的吞吐效率高\",{\"1\":{\"161\":1}}],[\"整理\",{\"1\":{\"77\":1,\"78\":1}}],[\"非主线题材我们称之为次主线题材\",{\"1\":{\"398\":1}}],[\"非对称集群\",{\"1\":{\"342\":1}}],[\"非故障的节点在合理的时间内返回合理的响应\",{\"1\":{\"321\":1}}],[\"非可重入锁\",{\"0\":{\"162\":1}}],[\"非公平锁的优点是可以减少唤起线程的开销\",{\"1\":{\"161\":1}}],[\"非公平锁是多个线程加锁时直接尝试获取锁\",{\"1\":{\"161\":1}}],[\"非公平锁\",{\"0\":{\"161\":1}}],[\"非阻塞同步\",{\"0\":{\"125\":1}}],[\"重视这个法则\",{\"1\":{\"404\":1}}],[\"重细节\",{\"1\":{\"403\":1}}],[\"重要的经济数据及解读上面都有\",{\"1\":{\"402\":1}}],[\"重要的政策\",{\"1\":{\"402\":1}}],[\"重要政策来源及解读\",{\"1\":{\"402\":1}}],[\"重大公共事件类\",{\"1\":{\"398\":1}}],[\"重新生成数据方式\",{\"1\":{\"344\":2}}],[\"重启\",{\"1\":{\"285\":1}}],[\"重载\",{\"1\":{\"206\":1}}],[\"重载和重写\",{\"0\":{\"206\":1}}],[\"重写\",{\"1\":{\"206\":1}}],[\"重量级锁是将除了拥有锁的线程以外的线程都阻塞\",{\"1\":{\"160\":1}}],[\"重量级锁\",{\"0\":{\"160\":1}}],[\"重排序规则表\",{\"1\":{\"190\":1}}],[\"重排序\",{\"1\":{\"177\":1}}],[\"重排序分三种类型\",{\"1\":{\"108\":1}}],[\"重排序引起\",{\"0\":{\"108\":1}}],[\"轻量级锁\",{\"0\":{\"160\":1}}],[\"稍等一下\",{\"1\":{\"159\":1}}],[\"同花顺都有这个功能\",{\"1\":{\"402\":1}}],[\"同城异区\",{\"1\":{\"344\":2}}],[\"同步和访问结合\",{\"1\":{\"344\":1}}],[\"同步阻塞\",{\"1\":{\"336\":1}}],[\"同步中主机出现故障导致主机和从\",{\"1\":{\"334\":1}}],[\"同步资源的锁定时间很短\",{\"1\":{\"159\":1}}],[\"同连板数须前排涨停\",{\"1\":{\"254\":1}}],[\"同身为的后排卡前排\",{\"1\":{\"244\":1}}],[\"同一个题材板块的股票\",{\"1\":{\"406\":1}}],[\"同一逻辑下\",{\"1\":{\"398\":1}}],[\"同一天\",{\"1\":{\"398\":1}}],[\"同一身位后排卡前排\",{\"1\":{\"244\":1}}],[\"同一概念中\",{\"1\":{\"244\":1}}],[\"同高度的abcd\",{\"1\":{\"244\":1}}],[\"同时还要关注成交量\",{\"1\":{\"406\":1}}],[\"同时注意领涨板块与领跌板块的演变\",{\"1\":{\"403\":1}}],[\"同时消散阴区筹码\",{\"1\":{\"398\":1}}],[\"同时其成员变量为引用类型也要实现\",{\"1\":{\"231\":1}}],[\"同时会杀死所有守护线程\",{\"1\":{\"144\":1}}],[\"同时新的类要实现被代理类所实现的所有的接口\",{\"1\":{\"4\":1}}],[\"适用于庞大的笨重的项目\",{\"1\":{\"357\":1}}],[\"适用于读操作较多的场景如新闻网站\",{\"1\":{\"333\":1}}],[\"适用于后台持久运行的应用程序\",{\"1\":{\"78\":1}}],[\"适用场景\",{\"1\":{\"318\":1}}],[\"适应性自旋锁\",{\"0\":{\"159\":1}}],[\"最起码当天是安全的\",{\"1\":{\"403\":1}}],[\"最大的空方就是套牢盘\",{\"1\":{\"398\":1}}],[\"最大的功用是事后解释\",{\"1\":{\"398\":1}}],[\"最后提炼出了\",{\"1\":{\"405\":1}}],[\"最后根据龙头的特性进行观察\",{\"1\":{\"398\":1}}],[\"最后需要涨停来验证\",{\"1\":{\"398\":1}}],[\"最低价不是涨停价\",{\"1\":{\"398\":1}}],[\"最佳实践\",{\"0\":{\"359\":1}}],[\"最小的为\",{\"1\":{\"342\":1}}],[\"最终提高我们决策的胜率和实际绩效\",{\"1\":{\"405\":1}}],[\"最终一致性\",{\"1\":{\"324\":1}}],[\"最终只有一个子线程accept成功\",{\"1\":{\"318\":1}}],[\"最好不要出现一家独大的局面\",{\"1\":{\"406\":1}}],[\"最好有所熟悉\",{\"1\":{\"406\":1}}],[\"最好第一个\",{\"1\":{\"254\":1}}],[\"最好是每天换手充分\",{\"1\":{\"406\":1}}],[\"最好是低位有强势的一字助攻的时候\",{\"1\":{\"244\":1}}],[\"最好是主线的头两次分歧\",{\"1\":{\"244\":1}}],[\"最好就是题材分歧之后有转一致的预期的时间窗口\",{\"1\":{\"244\":1}}],[\"最重要的特性\",{\"1\":{\"201\":1}}],[\"最常采用的是cas算法\",{\"1\":{\"158\":1}}],[\"最稳定以及效率高的收集器\",{\"1\":{\"78\":1}}],[\"悲观锁适合写操作多的场景\",{\"1\":{\"158\":1}}],[\"悲观锁认为自己在使用数据的时候一定有别的线程来修改数据\",{\"1\":{\"158\":1}}],[\"悲观锁\",{\"0\":{\"158\":1}}],[\"乐观锁适合读操作多的场景\",{\"1\":{\"158\":1}}],[\"乐观锁在java中是通过使用无锁编程来实现\",{\"1\":{\"158\":1}}],[\"乐观锁认为自己在使用数据时不会有别的线程修改数据\",{\"1\":{\"158\":1}}],[\"乐观锁\",{\"0\":{\"158\":1}}],[\"乐观锁需要操作和冲突检测这两个步骤具备原子性\",{\"1\":{\"126\":1}}],[\"锁定龙头\",{\"1\":{\"398\":1}}],[\"锁\",{\"0\":{\"157\":1,\"194\":1}}],[\"锁阻塞\",{\"1\":{\"148\":1}}],[\"上车条件\",{\"1\":{\"406\":1}}],[\"上车时\",{\"1\":{\"398\":2}}],[\"上证50指数\",{\"1\":{\"406\":1}}],[\"上证50\",{\"1\":{\"406\":1}}],[\"上证指数\",{\"1\":{\"406\":2}}],[\"上海证券报\",{\"1\":{\"402\":1}}],[\"上海自贸\",{\"1\":{\"398\":1}}],[\"上影线\",{\"1\":{\"398\":2}}],[\"上涨家数\",{\"1\":{\"404\":1}}],[\"上涨家数和下跌家数的数据变化\",{\"1\":{\"403\":1}}],[\"上涨家数与下跌家数的比值\",{\"1\":{\"400\":1}}],[\"上涨的多起来\",{\"1\":{\"403\":1}}],[\"上涨的股票对下跌的股票有向上牵引作用\",{\"1\":{\"403\":1}}],[\"上涨即是穷途末路\",{\"1\":{\"398\":1}}],[\"上涨是柔性的\",{\"1\":{\"398\":1}}],[\"上市公司对自身情况了如指掌\",{\"1\":{\"392\":1}}],[\"上有交集\",{\"1\":{\"357\":1}}],[\"上有相同的结果\",{\"1\":{\"187\":1}}],[\"上板之前当日量能也就是该股的日k量能放量缩量都行\",{\"1\":{\"244\":1}}],[\"上0轴\",{\"1\":{\"244\":1}}],[\"上午不断走低\",{\"1\":{\"244\":1}}],[\"上完这节课\",{\"1\":{\"242\":1}}],[\"上面几段代码中多处执行了thread\",{\"1\":{\"184\":1}}],[\"上面我们提到过\",{\"1\":{\"178\":1}}],[\"上调用\",{\"1\":{\"156\":1}}],[\"上述的\",{\"1\":{\"108\":1}}],[\"挂起期间\",{\"1\":{\"154\":1}}],[\"挂起一个线程\",{\"1\":{\"138\":1}}],[\"其次是0轴附近\",{\"1\":{\"427\":1}}],[\"其次远程调用\",{\"1\":{\"344\":1}}],[\"其目的就是要对市场的情绪和市场环境有清楚的认识\",{\"1\":{\"406\":1}}],[\"其目的是服务于国民经济建设\",{\"1\":{\"390\":1}}],[\"其高度也会大打折扣\",{\"1\":{\"406\":1}}],[\"其龙头市场地位当然不如主线题材龙头\",{\"1\":{\"398\":1}}],[\"其收益除了来自管理费用\",{\"1\":{\"393\":1}}],[\"其他信息渠道\",{\"1\":{\"402\":1}}],[\"其他股票下跌\",{\"1\":{\"398\":1}}],[\"其他二级市场主力在运作股票时缺的就是上市公司相关信息的配合\",{\"1\":{\"392\":1}}],[\"其他节点作为参与者\",{\"1\":{\"336\":1}}],[\"其他基本不碰\",{\"1\":{\"244\":1}}],[\"其实\",{\"1\":{\"403\":1}}],[\"其实是给券商支付大量佣金\",{\"1\":{\"395\":1}}],[\"其实这个\",{\"1\":{\"244\":1}}],[\"其实就是一种情况\",{\"1\":{\"244\":1}}],[\"其它线程调用\",{\"1\":{\"156\":1}}],[\"其它线程会调用\",{\"1\":{\"154\":1}}],[\"其中最重要的参数是涨停家数\",{\"1\":{\"400\":1}}],[\"其中最重要的一个应用实例就是经典\",{\"1\":{\"131\":1}}],[\"其中一个\",{\"1\":{\"291\":2}}],[\"其中的\",{\"1\":{\"127\":1}}],[\"其中有可能会含有语义错误\",{\"1\":{\"62\":1}}],[\"其中\",{\"1\":{\"2\":1}}],[\"提高工作效率\",{\"1\":{\"405\":1}}],[\"提高灵活性\",{\"1\":{\"229\":1}}],[\"提炼出规律\",{\"1\":{\"405\":1}}],[\"提交执行阶段\",{\"1\":{\"336\":1}}],[\"提升访问速度\",{\"1\":{\"319\":1}}],[\"提升权限\",{\"0\":{\"285\":1}}],[\"提升直接通过\",{\"1\":{\"208\":1}}],[\"提供\",{\"1\":{\"348\":1,\"363\":1}}],[\"提供有关类和接口的属性信息\",{\"1\":{\"229\":1}}],[\"提供了内存屏障阻止这种重排序\",{\"1\":{\"190\":1}}],[\"提供了两种锁机制来控制多个线程对共享资源的互斥访问\",{\"1\":{\"151\":1}}],[\"提示在并发修改\",{\"1\":{\"20\":1}}],[\"守护线程是程序运行时在后台提供服务的线程\",{\"1\":{\"144\":1}}],[\"基金\",{\"1\":{\"398\":1}}],[\"基于性能拆分\",{\"1\":{\"359\":1}}],[\"基于可靠性拆分\",{\"1\":{\"359\":1}}],[\"基于可扩展拆分\",{\"1\":{\"359\":1}}],[\"基于业务拆分\",{\"1\":{\"359\":1}}],[\"基于资源限流\",{\"1\":{\"345\":1}}],[\"基于请求限流\",{\"1\":{\"345\":1}}],[\"基于有限状态做决定\",{\"1\":{\"334\":1}}],[\"基础设施\",{\"1\":{\"359\":1}}],[\"基础类型的包装类\",{\"1\":{\"229\":1}}],[\"基础面试题\",{\"0\":{\"200\":1}}],[\"基础线程机制\",{\"0\":{\"142\":1}}],[\"基本宣告题材的炒作结束\",{\"1\":{\"404\":1}}],[\"基本上包括了市场上最核心的指数概况\",{\"1\":{\"406\":1}}],[\"基本上是不可能的\",{\"1\":{\"398\":1}}],[\"基本上没有扫板或排板的买入习惯\",{\"1\":{\"398\":1}}],[\"基本上成功率比较高\",{\"1\":{\"244\":1}}],[\"基本架构\",{\"1\":{\"363\":1}}],[\"基本思想\",{\"0\":{\"348\":1}}],[\"基本说明\",{\"1\":{\"336\":1}}],[\"基本可用\",{\"1\":{\"324\":1}}],[\"基本数据类型\",{\"1\":{\"177\":1}}],[\"基本的数据类型相等的判断只需要==就可以判断\",{\"1\":{\"97\":1}}],[\"基本和arraylist\",{\"1\":{\"30\":1}}],[\"死亡\",{\"0\":{\"139\":1}}],[\"睡眠和挂起是用来描述行为\",{\"1\":{\"138\":1}}],[\"退出方法\",{\"1\":{\"137\":1,\"138\":1}}],[\"服务中心\",{\"1\":{\"372\":1}}],[\"服务层技术\",{\"0\":{\"372\":1}}],[\"服务类\",{\"0\":{\"367\":1}}],[\"服务安全\",{\"1\":{\"359\":1}}],[\"服务跟踪\",{\"1\":{\"359\":1}}],[\"服务监控\",{\"1\":{\"359\":1}}],[\"服务隔离\",{\"1\":{\"359\":1}}],[\"服务容错\",{\"1\":{\"359\":1}}],[\"服务路由\",{\"1\":{\"359\":1}}],[\"服务发现\",{\"1\":{\"359\":1}}],[\"服务粒度\",{\"1\":{\"359\":1}}],[\"服务数量多后管理混乱\",{\"1\":{\"358\":1}}],[\"服务数量过多\",{\"1\":{\"358\":1}}],[\"服务关系过于复杂\",{\"1\":{\"358\":1}}],[\"服务划分过细\",{\"1\":{\"358\":1}}],[\"服务通信更轻量\",{\"1\":{\"357\":1}}],[\"服务\",{\"1\":{\"348\":2,\"355\":1,\"357\":1}}],[\"服务器上保存日志\",{\"1\":{\"344\":1}}],[\"服务器如何处理请求\",{\"1\":{\"318\":1}}],[\"服务器如何管理连接\",{\"1\":{\"318\":1}}],[\"服务端应用都可以使用线程本地存储来解决线程安全问题\",{\"1\":{\"131\":1}}],[\"服务暂停\",{\"1\":{\"78\":1}}],[\"多数猎物是不出来活动的\",{\"1\":{\"406\":1}}],[\"多数投资者出于避险的本能便不再出手\",{\"1\":{\"404\":1}}],[\"多只前排品种被顶一字\",{\"1\":{\"404\":1}}],[\"多空能量转换器=n字结构+时间\",{\"1\":{\"398\":1}}],[\"多空能量转换器\",{\"1\":{\"398\":1}}],[\"多中心\",{\"1\":{\"373\":1}}],[\"多机房\",{\"1\":{\"373\":1}}],[\"多是兼容系统\",{\"1\":{\"357\":1}}],[\"多通道同步\",{\"1\":{\"344\":1}}],[\"多进程\",{\"1\":{\"318\":1}}],[\"多reactor\",{\"1\":{\"318\":1}}],[\"多线程\",{\"1\":{\"318\":1}}],[\"多线程环境下就可能将一个未初始化的对象引用暴露出来\",{\"1\":{\"181\":1}}],[\"多次\",{\"1\":{\"314\":2}}],[\"多次创建一个类的实例时\",{\"1\":{\"229\":1}}],[\"多态的特性\",{\"1\":{\"202\":1}}],[\"多个线程访问同一个方法的局部变量时\",{\"1\":{\"130\":1}}],[\"多少元素转化为树\",{\"1\":{\"41\":1}}],[\"问题分类\",{\"1\":{\"381\":1}}],[\"问题难以定位\",{\"1\":{\"358\":1}}],[\"问题恢复后\",{\"1\":{\"344\":1}}],[\"问题2\",{\"0\":{\"185\":1}}],[\"问题1\",{\"0\":{\"184\":1}}],[\"问题\",{\"0\":{\"331\":1},\"1\":{\"128\":1,\"314\":1,\"318\":1,\"334\":1}}],[\"问题不会影响程序并发的正确性\",{\"1\":{\"128\":1}}],[\"来体现\",{\"1\":{\"406\":1}}],[\"来不及总结\",{\"1\":{\"405\":1}}],[\"来纠正自己的错误\",{\"1\":{\"405\":1}}],[\"来决定自己的操作\",{\"1\":{\"403\":1}}],[\"来唤醒挂起的线程\",{\"1\":{\"154\":2}}],[\"来中断该线程\",{\"1\":{\"148\":1}}],[\"来调用\",{\"1\":{\"140\":1}}],[\"来解决这个问题\",{\"1\":{\"128\":1}}],[\"来将多条指令重叠执行\",{\"1\":{\"108\":1}}],[\"包裹\",{\"1\":{\"398\":1}}],[\"包结构\",{\"0\":{\"223\":1}}],[\"包的区别\",{\"0\":{\"212\":1}}],[\"包和\",{\"0\":{\"212\":1}}],[\"包括价格\",{\"1\":{\"398\":1}}],[\"包括三步骤\",{\"1\":{\"184\":1}}],[\"包括递归调用它本身\",{\"1\":{\"132\":1}}],[\"包含了操作系统线程状态中的\",{\"1\":{\"135\":1}}],[\"包提供了一个带有标记的原子引用类\",{\"1\":{\"128\":1}}],[\"包里面的整数原子类\",{\"1\":{\"127\":1}}],[\"值得一说的是\",{\"1\":{\"398\":1}}],[\"值专用的字节码指令\",{\"1\":{\"203\":1}}],[\"值\",{\"1\":{\"128\":1}}],[\"值默认为\",{\"1\":{\"87\":1}}],[\"才是正确之道\",{\"1\":{\"403\":1}}],[\"才能在这样的板块里面寻找到符合我们要求的个股\",{\"1\":{\"406\":1}}],[\"才能在这个市场上活得久\",{\"1\":{\"404\":1}}],[\"才能感召团队团结效命\",{\"1\":{\"398\":1}}],[\"才能编写\",{\"1\":{\"294\":1}}],[\"才有更多的机会吸引全市场的目光\",{\"1\":{\"387\":1}}],[\"才有后续的价值\",{\"1\":{\"243\":1}}],[\"才将\",{\"1\":{\"126\":1}}],[\"才会树化\",{\"1\":{\"41\":1}}],[\"直接秒板\",{\"1\":{\"244\":1}}],[\"直接让前一个节点关联后一节点\",{\"1\":{\"26\":1}}],[\"直到凌云始道高\",{\"1\":{\"398\":1}}],[\"直到无冲突\",{\"1\":{\"216\":1}}],[\"直到目标线程结束\",{\"1\":{\"153\":1}}],[\"直到成功为止\",{\"1\":{\"126\":1}}],[\"维护锁计数器和检查是否有被阻塞的线程需要唤醒等操作\",{\"1\":{\"124\":1}}],[\"用眼睛决策\",{\"1\":{\"398\":1}}],[\"用头脑思考\",{\"1\":{\"398\":1}}],[\"用户管理\",{\"1\":{\"374\":1}}],[\"用户层技术\",{\"0\":{\"374\":1}}],[\"用户补偿\",{\"1\":{\"344\":1}}],[\"用户访问到另一地点的业务系统\",{\"1\":{\"344\":1}}],[\"用户id\",{\"1\":{\"319\":1}}],[\"用户创建项目权限控制\",{\"1\":{\"281\":1}}],[\"用户态核心态转换\",{\"1\":{\"124\":1}}],[\"用于比较是否是同一个对象\",{\"1\":{\"207\":1}}],[\"用于存储已被虚拟机加载的类信息\",{\"1\":{\"66\":1,\"70\":1}}],[\"用到的状态量都由参数中传入\",{\"1\":{\"132\":1}}],[\"应在大于日内成本均线卖出\",{\"1\":{\"420\":1}}],[\"应该查看承接情况\",{\"1\":{\"434\":1}}],[\"应该再均价线附近卖出\",{\"1\":{\"427\":1}}],[\"应该快速果断地止损出局\",{\"1\":{\"404\":1}}],[\"应该列为股市第一规律\",{\"1\":{\"398\":1}}],[\"应该也可以涨回去\",{\"1\":{\"398\":1}}],[\"应做\",{\"1\":{\"310\":1}}],[\"应对变化\",{\"1\":{\"303\":1}}],[\"应当尽量避免\",{\"1\":{\"122\":1}}],[\"应用\",{\"0\":{\"322\":1}}],[\"应用容器引擎\",{\"1\":{\"261\":1}}],[\"应用的类加载器\",{\"1\":{\"59\":1}}],[\"应用程序运行时间\",{\"1\":{\"78\":2}}],[\"应用程序使用\",{\"1\":{\"59\":1}}],[\"应用程序都有一个\",{\"1\":{\"59\":1}}],[\"应用程序共同使用\",{\"1\":{\"59\":1}}],[\"应用程序相互隔离独立的\",{\"1\":{\"59\":1}}],[\"应用程序自己定义的类来实现\",{\"1\":{\"59\":1}}],[\"应用程序呢\",{\"1\":{\"59\":1}}],[\"应用程序之间的类加载器相互隔离\",{\"1\":{\"59\":1}}],[\"等8个方面进行复盘\",{\"1\":{\"406\":1}}],[\"等规律\",{\"1\":{\"405\":1}}],[\"等也可以有选择地收看\",{\"1\":{\"402\":1}}],[\"等的综合表现统称为短线情绪值\",{\"1\":{\"400\":1}}],[\"等需要聚合还要识别\",{\"1\":{\"314\":1}}],[\"等等\",{\"1\":{\"244\":1,\"398\":3,\"404\":1}}],[\"等会抛出\",{\"1\":{\"149\":1}}],[\"等方法\",{\"1\":{\"342\":1}}],[\"等方法进入\",{\"1\":{\"138\":1}}],[\"等方法都使用了\",{\"1\":{\"127\":1}}],[\"等待封单大幅度减少时应卖出\",{\"1\":{\"451\":1}}],[\"等待队列中除第一个线程以外的所有线程都会阻塞\",{\"1\":{\"161\":1}}],[\"等待其它线程显式地唤醒\",{\"1\":{\"137\":1}}],[\"等待获取一个排它锁\",{\"1\":{\"136\":1}}],[\"等\",{\"1\":{\"121\":1}}],[\"绝不在一个坑里跌倒两次\",{\"1\":{\"405\":1}}],[\"绝大多数私募基金在投资风格\",{\"1\":{\"394\":1}}],[\"绝大多数时候指的是这一种情况\",{\"1\":{\"121\":1}}],[\"绝对线程安全\",{\"0\":{\"119\":1}}],[\"绝对\",{\"1\":{\"66\":1,\"71\":1}}],[\"永远也不会看到它在多个线程之中处于不一致的状态\",{\"1\":{\"118\":1}}],[\"相互影响的\",{\"1\":{\"404\":1}}],[\"相互连接还是三方仲裁\",{\"1\":{\"334\":1}}],[\"相较于龙头能吸引的潜在资金\",{\"1\":{\"398\":1}}],[\"相较中小散户而言\",{\"1\":{\"394\":1}}],[\"相关题材板块的复盘\",{\"1\":{\"406\":1}}],[\"相关成本大大增加\",{\"1\":{\"344\":1}}],[\"相关的规则\",{\"1\":{\"236\":1}}],[\"相比同城天灾影响的概率降低\",{\"1\":{\"344\":1}}],[\"相比设计和实现的降低了复杂度和成本\",{\"1\":{\"344\":1}}],[\"相比于\",{\"1\":{\"15\":1,\"156\":1}}],[\"相信你们都知道\",{\"1\":{\"242\":1}}],[\"相反\",{\"1\":{\"226\":1,\"403\":1,\"404\":1}}],[\"相等\",{\"0\":{\"216\":1}}],[\"相当于大小为\",{\"1\":{\"143\":1}}],[\"相当于是让线程顺序执行同步代码\",{\"1\":{\"116\":1}}],[\"相对更安全\",{\"1\":{\"404\":1}}],[\"相对而言\",{\"1\":{\"398\":1}}],[\"相对不安全\",{\"1\":{\"229\":1}}],[\"相对应的集合类\",{\"1\":{\"121\":1}}],[\"相对线程安全需要保证对这个对象单独的操作是线程安全的\",{\"1\":{\"120\":1}}],[\"相对线程安全\",{\"0\":{\"120\":1}}],[\"什么时候倒换\",{\"1\":{\"334\":1}}],[\"什么时候被写入主存是不确定的\",{\"1\":{\"115\":1}}],[\"什么叫做强\",{\"1\":{\"243\":1}}],[\"什么弱\",{\"1\":{\"243\":1}}],[\"什么区别\",{\"0\":{\"230\":1}}],[\"什么是周期\",{\"1\":{\"400\":1}}],[\"什么是正常的预期\",{\"1\":{\"244\":1}}],[\"什么是对抗\",{\"1\":{\"244\":1}}],[\"什么是无效的弱转强\",{\"1\":{\"242\":1}}],[\"什么是\",{\"0\":{\"234\":1},\"1\":{\"74\":1}}],[\"什么是代理\",{\"0\":{\"1\":1}}],[\"传递性\",{\"1\":{\"113\":1,\"218\":1}}],[\"传入的字符组\",{\"1\":{\"100\":1}}],[\"传入字节组\",{\"1\":{\"90\":1}}],[\"先挑一只涨得不多的赶紧买\",{\"1\":{\"398\":1}}],[\"先易后难\",{\"1\":{\"381\":1}}],[\"先读从节点\",{\"1\":{\"314\":1}}],[\"先加锁可以保证写操作时数据正确\",{\"1\":{\"158\":1}}],[\"先进行操作\",{\"1\":{\"126\":1}}],[\"先行发生于操作\",{\"1\":{\"113\":3,\"218\":3}}],[\"先行发生于它的\",{\"1\":{\"113\":1,\"218\":1}}],[\"先在本地缓存中查找该类是否已经加载过\",{\"1\":{\"60\":1}}],[\"先在应用本地目录下查找类\",{\"1\":{\"60\":1}}],[\"变量的内存可见性是基于内存屏障\",{\"1\":{\"187\":1}}],[\"变量的写操作先行发生于后面对这个变量的读操作\",{\"1\":{\"113\":1,\"218\":1}}],[\"变量规则\",{\"0\":{\"189\":1},\"1\":{\"113\":1,\"218\":1}}],[\"变更效率高\",{\"1\":{\"15\":1}}],[\"变更效率低\",{\"1\":{\"15\":1}}],[\"管理平台\",{\"1\":{\"376\":1}}],[\"管理员ui登录的密码\",{\"1\":{\"281\":1}}],[\"管理工具\",{\"1\":{\"261\":1}}],[\"管理多个异步任务的执行\",{\"1\":{\"143\":1}}],[\"管理的策略\",{\"1\":{\"70\":1}}],[\"管程锁定规则\",{\"1\":{\"113\":1,\"218\":1}}],[\"属于少数派\",{\"1\":{\"398\":1}}],[\"属于非守护线程\",{\"1\":{\"144\":1}}],[\"属于线程私有的\",{\"1\":{\"130\":1}}],[\"属于处理器重排序\",{\"1\":{\"108\":1}}],[\"属于编译器重排序\",{\"1\":{\"108\":1}}],[\"属性来获得改包装的\",{\"1\":{\"229\":1}}],[\"属性\",{\"0\":{\"85\":1}}],[\"属性first\",{\"1\":{\"25\":1}}],[\"属性缓存数据的长度\",{\"1\":{\"16\":1}}],[\"源代码到最终实际执行的指令序列\",{\"1\":{\"108\":1}}],[\"缓存组件化\",{\"1\":{\"380\":1}}],[\"缓存热点\",{\"1\":{\"316\":1}}],[\"缓存本身设置为永久有效\",{\"1\":{\"316\":1}}],[\"缓存失效后导致系统性能的下降\",{\"1\":{\"316\":1}}],[\"缓存雪崩\",{\"1\":{\"316\":1}}],[\"缓存数据生成耗费大量时间\",{\"1\":{\"316\":1}}],[\"缓存中没有数据导致去查询数据库\",{\"1\":{\"316\":1}}],[\"缓存穿透\",{\"1\":{\"316\":1}}],[\"缓存\",{\"0\":{\"316\":1}}],[\"缓存而不是内存\",{\"1\":{\"107\":1}}],[\"缓存机制导致可能写入的是\",{\"1\":{\"107\":1}}],[\"缓存的数据大小为\",{\"1\":{\"205\":1}}],[\"缓存的数据\",{\"1\":{\"41\":1}}],[\"缓存的last关联新元素\",{\"1\":{\"25\":1}}],[\"将会起起质变\",{\"1\":{\"400\":2}}],[\"将较长时间的k线组合\",{\"1\":{\"398\":1}}],[\"将任务分配到集群中的不同服务器\",{\"1\":{\"342\":1}}],[\"将jenkins账号分别加入到root组中\",{\"1\":{\"285\":1}}],[\"将第\",{\"1\":{\"283\":1}}],[\"将内存的对象进行解析\",{\"1\":{\"229\":1}}],[\"将内存空间的地址赋值给对应的引用\",{\"1\":{\"181\":2}}],[\"将i的值写回内存\",{\"1\":{\"184\":1}}],[\"将造成最后写到内存中的i值是2而不是3\",{\"1\":{\"107\":1}}],[\"将最后的结果i写入内存\",{\"1\":{\"107\":1}}],[\"将变量\",{\"1\":{\"107\":1}}],[\"将新生成的class文件重新加载到\",{\"1\":{\"4\":1}}],[\"却没有立即写入到主存当中\",{\"1\":{\"106\":1}}],[\"执行自定义\",{\"1\":{\"291\":1}}],[\"执行\",{\"1\":{\"283\":1,\"291\":1}}],[\"执行线程2的是cpu2\",{\"1\":{\"106\":1}}],[\"执行引擎的作用及工作过程\",{\"1\":{\"72\":1}}],[\"执行引擎\",{\"0\":{\"72\":1},\"1\":{\"56\":1}}],[\"假设系统中某个部件出现故障\",{\"1\":{\"328\":1}}],[\"假如线程2执行了这三条指令后\",{\"1\":{\"107\":1}}],[\"假如应用里自定义了一个叫\",{\"1\":{\"60\":1}}],[\"假若执行线程1的是cpu1\",{\"1\":{\"106\":1}}],[\"有必要的话还可以做个备注\",{\"1\":{\"406\":1}}],[\"有高效率\",{\"1\":{\"405\":1}}],[\"有高度\",{\"1\":{\"398\":1}}],[\"有时候\",{\"1\":{\"405\":1,\"406\":1}}],[\"有时候不要过于认真\",{\"1\":{\"404\":1}}],[\"有时候反而不是好事\",{\"1\":{\"402\":1}}],[\"有时需要在盘中及时寻找机会上车\",{\"1\":{\"403\":1}}],[\"有时ef紧盘缩量\",{\"1\":{\"398\":1}}],[\"有人开玩笑说\",{\"1\":{\"402\":1}}],[\"有主力建仓痕迹的股票有什么共同点呢\",{\"1\":{\"398\":1}}],[\"有意思的是\",{\"1\":{\"398\":1}}],[\"有利于股价的上行\",{\"1\":{\"398\":1}}],[\"有没有板块效应\",{\"1\":{\"398\":1}}],[\"有没有可能两个对象不等\",{\"0\":{\"216\":1}}],[\"有些股票前一天比较弱\",{\"1\":{\"404\":1}}],[\"有些龙头股的产生\",{\"1\":{\"398\":1}}],[\"有些时候\",{\"1\":{\"398\":1}}],[\"有想象空间\",{\"1\":{\"398\":1}}],[\"有想象空间吗\",{\"1\":{\"398\":1}}],[\"有经验后\",{\"1\":{\"398\":1}}],[\"有若干个竞争龙头位置的种子选手\",{\"1\":{\"398\":1}}],[\"有啥用呢\",{\"1\":{\"398\":1}}],[\"有效性大得多\",{\"1\":{\"398\":1}}],[\"有少数人慧眼识英雄了\",{\"1\":{\"398\":1}}],[\"有了自己的交易系统\",{\"1\":{\"406\":1}}],[\"有了板块效应\",{\"1\":{\"398\":1}}],[\"有了人气\",{\"1\":{\"398\":1}}],[\"有了预期差所以有利可图\",{\"1\":{\"242\":1}}],[\"有板块跟随\",{\"1\":{\"398\":1}}],[\"有题材+有资金=板块效应\",{\"1\":{\"398\":1}}],[\"有拿得住的\",{\"1\":{\"395\":1}}],[\"有的是过街老鼠人人喊打\",{\"1\":{\"406\":1}}],[\"有的口碑好有格局\",{\"1\":{\"406\":1}}],[\"有的喜欢持续加仓做波段\",{\"1\":{\"406\":1}}],[\"有的喜欢砸盘\",{\"1\":{\"406\":1}}],[\"有的喜欢一日游\",{\"1\":{\"406\":1}}],[\"有的主力喜欢在一个较低的区间潜伏吸筹\",{\"1\":{\"398\":1}}],[\"有的成为一个阴线或上影线\",{\"1\":{\"398\":1}}],[\"有的日内分歧转一致\",{\"1\":{\"398\":1}}],[\"有的跟风股也开始连板\",{\"1\":{\"398\":1}}],[\"有的散户亏钱\",{\"1\":{\"395\":1}}],[\"有的时候\",{\"1\":{\"244\":1}}],[\"有中间件解决\",{\"1\":{\"314\":1}}],[\"有转一致的强烈预期\",{\"1\":{\"244\":1}}],[\"有强烈的企稳反弹预期的时期段\",{\"1\":{\"244\":1}}],[\"有哪些方法\",{\"0\":{\"231\":1}}],[\"有哪些用法\",{\"0\":{\"218\":1}}],[\"有缓存会更多\",{\"1\":{\"229\":1}}],[\"有相同的作用和目的\",{\"1\":{\"228\":1}}],[\"有\",{\"1\":{\"222\":1}}],[\"有什么区别\",{\"0\":{\"221\":1}}],[\"有丰富的类库\",{\"1\":{\"201\":1}}],[\"有三种使用线程的方法\",{\"1\":{\"140\":1}}],[\"有三个构造方法\",{\"1\":{\"17\":1}}],[\"有序性实现\",{\"0\":{\"188\":1}}],[\"有序性\",{\"0\":{\"108\":1,\"116\":1},\"1\":{\"116\":1}}],[\"有序性问题\",{\"1\":{\"104\":1}}],[\"原来不是那么坚定卖出而变得坚决卖出的一部分筹码\",{\"1\":{\"398\":1}}],[\"原来的程序不会出现任何错误\",{\"1\":{\"132\":1}}],[\"原本要去标的a的资金由于b的卡位而去了b\",{\"1\":{\"398\":1}}],[\"原理是倒排序\",{\"1\":{\"315\":1}}],[\"原理是本身这个模式做的就是资金的弱转强\",{\"1\":{\"244\":1}}],[\"原因主要有以下几点\",{\"1\":{\"404\":1}}],[\"原因\",{\"0\":{\"378\":1}}],[\"原因是第二只的弱转强上板\",{\"1\":{\"244\":1}}],[\"原因就是它打破了\",{\"1\":{\"59\":1}}],[\"原文弱转强从来不是一种战法\",{\"1\":{\"242\":1}}],[\"原子类\",{\"0\":{\"193\":1}}],[\"原子性\",{\"0\":{\"107\":1,\"114\":1},\"1\":{\"324\":1}}],[\"原子性问题\",{\"1\":{\"104\":1}}],[\"与大盘进行对比\",{\"1\":{\"398\":1}}],[\"与动态编译结合\",{\"1\":{\"229\":1}}],[\"与进程不同的是同类的多个线程共享同一块内存空间和一组系统资源\",{\"1\":{\"225\":1}}],[\"与随后初次读这个\",{\"1\":{\"218\":1}}],[\"与随后把这个被构造对象的引用赋值给一个变量\",{\"1\":{\"218\":1}}],[\"与随后在构造函数之外把这个被构造的对象的引用赋给一个引用变量\",{\"1\":{\"175\":1}}],[\"与平台无关性\",{\"1\":{\"201\":1}}],[\"与\",{\"1\":{\"104\":1}}],[\"与虚拟机栈相同的是栈的深度是固定的\",{\"1\":{\"66\":1,\"68\":1}}],[\"与虚拟机的作用是相似的\",{\"1\":{\"66\":1,\"68\":1}}],[\"进而影响市场情绪\",{\"1\":{\"406\":1}}],[\"进而均衡\",{\"1\":{\"104\":1}}],[\"进一步吸引更多人关注\",{\"1\":{\"398\":1}}],[\"进出场时间\",{\"1\":{\"394\":1}}],[\"进入解压包中\",{\"1\":{\"278\":1}}],[\"进入方法\",{\"1\":{\"137\":1,\"138\":1}}],[\"进程从阻塞状态返回\",{\"1\":{\"318\":1}}],[\"进程只需要在一个阻塞对象上等待\",{\"1\":{\"318\":1}}],[\"进程如何高效的处理多个连接\",{\"1\":{\"318\":1}}],[\"进程数量增大后导致操作系统压力过大\",{\"1\":{\"318\":1}}],[\"进程数量增大后多操作系统压力过大\",{\"1\":{\"318\":1}}],[\"进程模型\",{\"1\":{\"318\":1}}],[\"进程和线程\",{\"1\":{\"303\":1}}],[\"进程\",{\"1\":{\"225\":1}}],[\"进程的基本概念\",{\"0\":{\"225\":1}}],[\"进行补偿\",{\"1\":{\"344\":1}}],[\"进行响应\",{\"1\":{\"318\":1}}],[\"进行不断的轮询多个连接\",{\"1\":{\"318\":1}}],[\"进行连接时才\",{\"1\":{\"318\":1}}],[\"进行聚合\",{\"1\":{\"314\":1}}],[\"进行部署\",{\"1\":{\"289\":1}}],[\"进行频繁的字符串操作性能较高\",{\"1\":{\"209\":1}}],[\"进行拼接时相当于新建字符数组进行替换\",{\"1\":{\"209\":1}}],[\"进行描述\",{\"1\":{\"138\":2}}],[\"进行判断数据是否一致的效率\",{\"1\":{\"208\":1}}],[\"进行判断对象的内存地址是否相同\",{\"1\":{\"98\":1}}],[\"进行判断\",{\"1\":{\"97\":1}}],[\"进行出现线程数据共享\",{\"1\":{\"91\":1}}],[\"进行构建对象\",{\"1\":{\"91\":1}}],[\"进行代码编译\",{\"1\":{\"55\":1}}],[\"进行树化处理\",{\"1\":{\"42\":1}}],[\"进行初始化或扩容\",{\"1\":{\"42\":1}}],[\"进行\",{\"1\":{\"42\":1}}],[\"进行控制某些行为\",{\"1\":{\"41\":1}}],[\"进行防止并发操作\",{\"1\":{\"31\":1}}],[\"进行比较数据对象是否存在\",{\"1\":{\"24\":1}}],[\"导致大家都去追击最强者\",{\"1\":{\"404\":1}}],[\"导致今日无新的资金进场接力\",{\"1\":{\"404\":1}}],[\"导致场外资金入场抢筹\",{\"1\":{\"398\":1}}],[\"导致读取主从数据不一致问题\",{\"1\":{\"333\":1}}],[\"导致读不到\",{\"1\":{\"314\":1}}],[\"导致未复制到n2\",{\"1\":{\"322\":2}}],[\"导致无法添加\",{\"1\":{\"275\":1}}],[\"导致\",{\"1\":{\"104\":3}}],[\"导致操作效率较低\",{\"1\":{\"15\":1}}],[\"操作手法篇\",{\"1\":{\"398\":1}}],[\"操作就会误认为它从来没有被改变过\",{\"1\":{\"128\":1}}],[\"操作先行发生于后面对同一个锁的\",{\"1\":{\"113\":1,\"218\":1}}],[\"操作\",{\"1\":{\"107\":1,\"113\":2,\"127\":1,\"218\":2}}],[\"操作系统会通知进程\",{\"1\":{\"318\":1}}],[\"操作系统增加了进程\",{\"1\":{\"104\":1}}],[\"操作系统\",{\"1\":{\"104\":1,\"303\":1}}],[\"操作数栈\",{\"1\":{\"66\":1,\"67\":1}}],[\"设计的关键点\",{\"0\":{\"361\":1}}],[\"设计步骤\",{\"1\":{\"344\":1}}],[\"设计关键点\",{\"0\":{\"339\":1}}],[\"设计简单\",{\"1\":{\"337\":1}}],[\"设计比较复杂\",{\"1\":{\"337\":1}}],[\"设计出最优秀的方案\",{\"1\":{\"310\":1}}],[\"设计备选方案\",{\"0\":{\"310\":1}}],[\"设备的速度差异\",{\"1\":{\"104\":1}}],[\"设备的速度是有极大差异的\",{\"1\":{\"104\":1}}],[\"设置\",{\"0\":{\"291\":1}}],[\"设置流水线\",{\"0\":{\"288\":1}}],[\"设置环境\",{\"0\":{\"286\":1}}],[\"设置开机启动\",{\"0\":{\"267\":1}}],[\"设置了\",{\"1\":{\"138\":2}}],[\"设置对象\",{\"1\":{\"88\":1}}],[\"设置需要创建子类的类\",{\"1\":{\"6\":1}}],[\"尼恩面试题\",{\"0\":{\"102\":1}}],[\"计算高性能\",{\"0\":{\"317\":1}}],[\"计算高可用\",{\"0\":{\"338\":1},\"1\":{\"303\":1}}],[\"计算机体系结构\",{\"1\":{\"104\":1}}],[\"计算得出结束位置\",{\"1\":{\"100\":1}}],[\"计数为0时可以回收\",{\"1\":{\"76\":1}}],[\"循环比较是否相等\",{\"1\":{\"100\":1}}],[\"循环比较\",{\"1\":{\"99\":1}}],[\"忽略大小写比较是否相等\",{\"0\":{\"98\":1}}],[\"需要你重新对市场重描一遍\",{\"1\":{\"405\":1}}],[\"需要根据当下的情况做出改变\",{\"1\":{\"404\":1}}],[\"需要蓄势孕育\",{\"1\":{\"398\":1}}],[\"需要看一下板块的开盘情况\",{\"1\":{\"398\":1}}],[\"需要多个\",{\"1\":{\"354\":1}}],[\"需要数据覆盖\",{\"1\":{\"344\":1}}],[\"需要添加新主机做备机\",{\"1\":{\"340\":1}}],[\"需要添加监控\",{\"1\":{\"332\":1}}],[\"需要考虑的\",{\"1\":{\"336\":2}}],[\"需要考虑此风险\",{\"1\":{\"335\":1}}],[\"需要主\",{\"1\":{\"334\":1}}],[\"需要新增机器\",{\"1\":{\"332\":1}}],[\"需要为分区恢复后做准备\",{\"1\":{\"323\":1}}],[\"需要复杂的运算之后得到结果\",{\"1\":{\"316\":1}}],[\"需要\",{\"1\":{\"288\":1}}],[\"需要修改\",{\"1\":{\"283\":1}}],[\"需要下载kubectl工具对kubernetes进行操作\",{\"1\":{\"278\":1}}],[\"需要设置合盖不影响\",{\"1\":{\"274\":1}}],[\"需要选择\",{\"1\":{\"272\":1}}],[\"需要很大的做多力量\",{\"1\":{\"244\":1}}],[\"需要解析字节码\",{\"1\":{\"229\":1}}],[\"需要进行数组的处理\",{\"1\":{\"210\":1}}],[\"需要重写对象的equals方法\",{\"1\":{\"97\":1}}],[\"需要通过\",{\"1\":{\"97\":1}}],[\"需要打破双亲委托机制\",{\"1\":{\"60\":1}}],[\"比创业板指数更能反映小盘股的表现情况\",{\"1\":{\"406\":1}}],[\"比如前期市场总龙头\",{\"1\":{\"404\":1}}],[\"比如2018～2019年\",{\"1\":{\"404\":1}}],[\"比如分时出现瀑布线下跌\",{\"1\":{\"403\":1}}],[\"比如开盘就涨停和跌停的家数\",{\"1\":{\"403\":1}}],[\"比如当年炒作四川双马的时候\",{\"1\":{\"403\":1}}],[\"比如同花顺首页中间位置\",{\"1\":{\"402\":1}}],[\"比如\",{\"1\":{\"398\":1}}],[\"比如利好兑现\",{\"1\":{\"398\":1}}],[\"比如科创板那轮行情中\",{\"1\":{\"398\":1}}],[\"比如科创板那一波行情中\",{\"1\":{\"398\":1}}],[\"比如高位人气股对全市场的影响\",{\"1\":{\"388\":1}}],[\"比如有时候板块前排一致加速\",{\"1\":{\"244\":1}}],[\"比如循环\",{\"1\":{\"69\":1}}],[\"比面向过程要低\",{\"1\":{\"202\":1}}],[\"比较强势的跟风股\",{\"1\":{\"404\":1}}],[\"比较形象\",{\"1\":{\"398\":1}}],[\"比较\",{\"1\":{\"216\":1}}],[\"比较的是地址中的数据是否相等\",{\"1\":{\"207\":1}}],[\"比较的地址\",{\"1\":{\"207\":1}}],[\"比较并交换\",{\"1\":{\"126\":1}}],[\"比较字符串的大小\",{\"0\":{\"99\":1}}],[\"比较内容是否相等\",{\"0\":{\"97\":1}}],[\"字符流\",{\"1\":{\"227\":1}}],[\"字符串的长度\",{\"0\":{\"94\":1}}],[\"字节流\",{\"1\":{\"227\":1}}],[\"字节\",{\"1\":{\"203\":7}}],[\"字节码验证步骤会检查每个操作码是否合法\",{\"1\":{\"62\":1}}],[\"字节码验证\",{\"1\":{\"62\":1}}],[\"字节码\",{\"1\":{\"54\":1}}],[\"常见的题材还有\",{\"1\":{\"398\":1}}],[\"常见的有源地址hash\",{\"1\":{\"319\":1}}],[\"常见架构\",{\"1\":{\"334\":1}}],[\"常见问题\",{\"0\":{\"101\":1}}],[\"常常用\",{\"1\":{\"138\":2}}],[\"常用方法\",{\"0\":{\"93\":1}}],[\"常量\",{\"1\":{\"66\":1,\"70\":1}}],[\"线程调度和切换代价问题\",{\"1\":{\"318\":1}}],[\"线程也被称为轻量进程\",{\"1\":{\"225\":1}}],[\"线程和进程类似\",{\"1\":{\"225\":1}}],[\"线程池\",{\"0\":{\"196\":1}}],[\"线程工作内存\",{\"1\":{\"182\":1}}],[\"线程b和线程c之间存在数据竞争\",{\"1\":{\"176\":1}}],[\"线程直接进入队列中排队\",{\"1\":{\"161\":1}}],[\"线程挂起和恢复现场的花费可能会让系统得不偿失\",{\"1\":{\"159\":1}}],[\"线程会释放锁\",{\"1\":{\"154\":1}}],[\"线程在等待时会被挂起\",{\"1\":{\"154\":1}}],[\"线程间的协作\",{\"0\":{\"152\":1}}],[\"线程互斥同步\",{\"0\":{\"151\":1}}],[\"线程中断\",{\"0\":{\"147\":1}}],[\"线程中断规则\",{\"1\":{\"113\":1,\"218\":1}}],[\"线程中抛出的其它异常也同样需要在本地进行处理\",{\"1\":{\"145\":1}}],[\"线程使用方式\",{\"0\":{\"140\":1}}],[\"线程状态\",{\"0\":{\"133\":1}}],[\"线程本地存储\",{\"0\":{\"131\":1}}],[\"线程对立这种排斥多线程的代码是很少出现的\",{\"1\":{\"122\":1}}],[\"线程对立是指无论调用端是否采取了同步措施\",{\"1\":{\"122\":1}}],[\"线程对立\",{\"0\":{\"122\":1}}],[\"线程兼容是指对象本身并不是线程安全的\",{\"1\":{\"121\":1}}],[\"线程兼容\",{\"0\":{\"121\":1}}],[\"线程加入规则\",{\"1\":{\"113\":1,\"218\":1}}],[\"线程启动规则\",{\"1\":{\"113\":1,\"218\":1}}],[\"线程1执行了第一条指令后\",{\"1\":{\"107\":1}}],[\"线程1对变量i修改了之后\",{\"1\":{\"106\":1}}],[\"线程切换\",{\"1\":{\"107\":1}}],[\"线程2没有立即看到线程1修改的值\",{\"1\":{\"106\":1}}],[\"线程\",{\"1\":{\"104\":1,\"225\":1,\"318\":1}}],[\"线程不安全\",{\"1\":{\"92\":1,\"209\":1,\"211\":1}}],[\"线程安全的实现\",{\"0\":{\"123\":1}}],[\"线程安全分类\",{\"0\":{\"117\":1}}],[\"线程安全\",{\"1\":{\"28\":1,\"211\":1}}],[\"由这只股票开始\",{\"1\":{\"398\":1}}],[\"由独立的托管银行进行托管\",{\"1\":{\"393\":1}}],[\"由专业的资产管理人管理\",{\"1\":{\"393\":1}}],[\"由于人的本能\",{\"1\":{\"398\":1}}],[\"由于标的之间的竞争和可替代性\",{\"1\":{\"398\":1}}],[\"由于主线题材关注度太高\",{\"1\":{\"398\":1}}],[\"由于大港股份\",{\"1\":{\"398\":1}}],[\"由于不会对有间接依赖性的操作重排序\",{\"1\":{\"178\":1}}],[\"由于\",{\"1\":{\"122\":1}}],[\"由于synchronized和lock能够保证任一时刻只有一个线程执行该代码块\",{\"1\":{\"114\":1}}],[\"由于处理器使用缓存和读\",{\"1\":{\"108\":1}}],[\"由于cpu分时复用\",{\"1\":{\"107\":1}}],[\"由于加锁问题\",{\"1\":{\"15\":1}}],[\"由上面的分析可知\",{\"1\":{\"106\":1}}],[\"由此可见\",{\"1\":{\"91\":1}}],[\"配置的规则就是插件\",{\"1\":{\"363\":1}}],[\"配置到规则引擎中\",{\"1\":{\"363\":1}}],[\"配置中心\",{\"1\":{\"359\":1,\"372\":1}}],[\"配置路由\",{\"1\":{\"314\":1}}],[\"配置源码管理\",{\"1\":{\"288\":1}}],[\"配置\",{\"0\":{\"281\":1,\"287\":1}}],[\"配置阿里云源\",{\"1\":{\"279\":1}}],[\"配置信息工具\",{\"1\":{\"83\":1}}],[\"配合字符组长度创建对象\",{\"1\":{\"91\":1}}],[\"调优\",{\"0\":{\"82\":1}}],[\"调用链太长\",{\"1\":{\"358\":2}}],[\"调用者都不需要任何额外的同步措施\",{\"1\":{\"119\":1}}],[\"调用该对象的其他方法\",{\"1\":{\"90\":1}}],[\"调用\",{\"1\":{\"60\":1,\"138\":2,\"150\":1,\"154\":1}}],[\"年老代默认使用serial\",{\"1\":{\"78\":1}}],[\"压缩\",{\"1\":{\"78\":3}}],[\"压缩算法\",{\"1\":{\"77\":1}}],[\"或平行调整\",{\"1\":{\"398\":1}}],[\"或集合竞价开得很高\",{\"1\":{\"398\":1}}],[\"或其子类\",{\"1\":{\"204\":1}}],[\"或者多只大跌\",{\"1\":{\"406\":1}}],[\"或者同花顺昨日涨停指数\",{\"1\":{\"406\":1}}],[\"或者跌幅最高的\",{\"1\":{\"406\":1}}],[\"或者涨停时间比较晚\",{\"1\":{\"404\":1}}],[\"或者该题材的龙头已经运行到高位有风险的时候\",{\"1\":{\"403\":1}}],[\"或者有一些强势连板票\",{\"1\":{\"403\":1}}],[\"或者说是事物内部正在向相反方向转化的细微征兆\",{\"1\":{\"400\":1}}],[\"或者说是股票上涨的理由\",{\"1\":{\"398\":1}}],[\"或者由于某只票的质地很好\",{\"1\":{\"398\":1}}],[\"或者直接在脚本中直接通过\",{\"1\":{\"288\":1}}],[\"或者是二波预期的弱转强\",{\"1\":{\"244\":1}}],[\"或者其他跟风资金不怎么认可\",{\"1\":{\"243\":1}}],[\"或者等很久才会获得锁\",{\"1\":{\"161\":1}}],[\"或者\",{\"1\":{\"154\":2}}],[\"或者产生了异常而结束\",{\"1\":{\"139\":1}}],[\"或\",{\"1\":{\"77\":1,\"156\":1,\"301\":1}}],[\"那时候\",{\"1\":{\"406\":1}}],[\"那代表着近期市场行情比较活跃\",{\"1\":{\"406\":1}}],[\"那代表着市场看好的人还很多\",{\"1\":{\"403\":1}}],[\"那这只股票涨停的主要原因是什么\",{\"1\":{\"406\":1}}],[\"那这个板块大概率就结束了\",{\"1\":{\"403\":1}}],[\"那这个老大也当不了多久\",{\"1\":{\"398\":1}}],[\"那儿的资本就要跑路\",{\"1\":{\"406\":1}}],[\"那说明盘面跌的股票多\",{\"1\":{\"404\":1}}],[\"那种\",{\"1\":{\"398\":1}}],[\"那赶紧买\",{\"1\":{\"398\":1}}],[\"那我们就要好好关注一下了\",{\"1\":{\"398\":1}}],[\"那些手握重金\",{\"1\":{\"390\":1}}],[\"那必须砸出恐慌之后要马上承接修复起来\",{\"1\":{\"244\":1}}],[\"那体现在技术面量价关系上\",{\"1\":{\"244\":1}}],[\"那领涨的品种便是昙花一现\",{\"1\":{\"243\":1}}],[\"那相对起来\",{\"1\":{\"243\":1}}],[\"那到底要怎么去利用预期差呢\",{\"1\":{\"242\":1}}],[\"那它自然就无须任何同步措施去保证正确性\",{\"1\":{\"129\":1}}],[\"那\",{\"1\":{\"128\":1}}],[\"那操作就成功了\",{\"1\":{\"126\":1}}],[\"那就更难了一些\",{\"1\":{\"244\":1}}],[\"那就看看这些共享数据的代码是否能保证在同一个线程中执行\",{\"1\":{\"131\":1}}],[\"那就肯定会出现问题\",{\"1\":{\"124\":1}}],[\"那就选用复制算法\",{\"1\":{\"77\":1}}],[\"那么市场的炒作情绪就会受到影响\",{\"1\":{\"406\":1}}],[\"那么市场的做多情绪会受到一定程度的打击\",{\"1\":{\"404\":1}}],[\"那么涨停的股票怎么复盘呢\",{\"1\":{\"406\":1}}],[\"那么涨的就会减少\",{\"1\":{\"404\":1}}],[\"那么怎么来看板块呢\",{\"1\":{\"406\":1}}],[\"那么还要看看是否有外力护盘的情况\",{\"1\":{\"406\":1}}],[\"那么跌停的或者大跌的就会减少\",{\"1\":{\"404\":1}}],[\"那么第一时间就应该出局\",{\"1\":{\"403\":1}}],[\"那么可以继续观望\",{\"1\":{\"403\":1}}],[\"那么更要根据龙头的情况\",{\"1\":{\"403\":1}}],[\"那么通常情况下多个题材能够同时炒作\",{\"1\":{\"403\":1}}],[\"那么说明他们可能锁仓了\",{\"1\":{\"406\":1}}],[\"那么说明这个题材方向还有机会\",{\"1\":{\"403\":1}}],[\"那么说明市场不看好接力\",{\"1\":{\"403\":1}}],[\"那么短时期涨回来\",{\"1\":{\"398\":1}}],[\"那么相对领涨就有补涨\",{\"1\":{\"398\":1}}],[\"那么我买进\",{\"1\":{\"398\":1}}],[\"那么我们总结一下怎么样的弱转强比较成功\",{\"1\":{\"244\":1}}],[\"那么我们就能思考衍生出\",{\"1\":{\"244\":1}}],[\"那么我们就说d卡位了前面三个标的\",{\"1\":{\"244\":1}}],[\"那么高位龙头的弱转强\",{\"1\":{\"244\":1}}],[\"那么开盘5分钟非常的关键\",{\"1\":{\"244\":1}}],[\"那么如果次日他不按这个套路来\",{\"1\":{\"244\":1}}],[\"那么领涨概念板块出来了\",{\"1\":{\"244\":1}}],[\"那么这个分时弱转强上板\",{\"1\":{\"244\":1}}],[\"那么这个线程可以无需阻塞直接获取到锁\",{\"1\":{\"161\":1}}],[\"那么这种情况和上面提到的那种开太高的情况一下涨停不涨停都可能\",{\"1\":{\"244\":1}}],[\"那么这时候就需要cglib动态代理了\",{\"1\":{\"4\":1}}],[\"那么自旋的线程只会白浪费处理器资源\",{\"1\":{\"159\":1}}],[\"那么自然就不存在原子性问题了\",{\"1\":{\"114\":1}}],[\"那么当前线程就可以不必阻塞而是直接获取同步资源\",{\"1\":{\"159\":1}}],[\"那么其它线程就无法进入对象的同步方法或者同步控制块中\",{\"1\":{\"154\":1}}],[\"那么调用线程的\",{\"1\":{\"149\":1}}],[\"那么操作\",{\"1\":{\"113\":1,\"218\":1}}],[\"那么在cpu1的高速缓存当中i的值变为10了\",{\"1\":{\"106\":1}}],[\"那么只能抛出\",{\"1\":{\"60\":1}}],[\"那么肯定不是应用自己定义的类\",{\"1\":{\"60\":1}}],[\"那么就要谨慎小心\",{\"1\":{\"403\":1}}],[\"那么就要慎重\",{\"1\":{\"403\":1}}],[\"那么就无法执行\",{\"1\":{\"154\":1}}],[\"那么就需要对线程进行协调\",{\"1\":{\"152\":1}}],[\"那么就会抛出\",{\"1\":{\"148\":1}}],[\"那么就会使得j的值为0\",{\"1\":{\"106\":1}}],[\"那么就会先用webappclassloader进行加载\",{\"1\":{\"60\":1}}],[\"那么就由\",{\"1\":{\"60\":1}}],[\"那么就在本地应用目录下查找此类并加载\",{\"1\":{\"60\":1}}],[\"那么就委托给appclassloader去加载\",{\"1\":{\"60\":1}}],[\"那么spring会使用jdk动态代理来完成操作\",{\"1\":{\"10\":1}}],[\"那么假如被代理对象没有实现接口呢\",{\"1\":{\"4\":1}}],[\"把股价的起始处到重大阴区的空间距离称之为\",{\"1\":{\"398\":1}}],[\"把所有的降级抽取为一个服务进行管理\",{\"1\":{\"345\":1}}],[\"把java堆分为新生代和老年代\",{\"1\":{\"77\":1}}],[\"把新加的业务逻辑方法由一定的逻辑代码去调用\",{\"1\":{\"4\":1}}],[\"分辨补涨主要是看它的逻辑是否独立\",{\"1\":{\"398\":1}}],[\"分为能买得到的和买不到的两种\",{\"1\":{\"398\":1}}],[\"分散风险的一种手段而进入远航贸易领域\",{\"1\":{\"385\":1}}],[\"分散集群\",{\"1\":{\"336\":1}}],[\"分层架构\",{\"0\":{\"350\":1},\"1\":{\"349\":1}}],[\"分角色master\",{\"1\":{\"342\":1}}],[\"分区规则\",{\"1\":{\"337\":1}}],[\"分区容错性partition\",{\"1\":{\"321\":1}}],[\"分别是提交判断阶段\",{\"1\":{\"336\":1}}],[\"分别是commit请求阶段和commit提交阶段\",{\"1\":{\"336\":1}}],[\"分别是内存地址\",{\"1\":{\"126\":1}}],[\"分析题材强度\",{\"1\":{\"398\":1}}],[\"分析该股票的属性\",{\"1\":{\"398\":1}}],[\"分析表格包含的属性\",{\"1\":{\"328\":1}}],[\"分析此故障对系统的影响\",{\"1\":{\"328\":1}}],[\"分布式一致性算法\",{\"1\":{\"336\":1}}],[\"分布式系统中\",{\"1\":{\"336\":1}}],[\"分布式系统出现故障时\",{\"1\":{\"324\":1}}],[\"分布式事务算法\",{\"1\":{\"336\":1}}],[\"分布式环境下\",{\"1\":{\"322\":1}}],[\"分类\",{\"1\":{\"315\":1,\"319\":1}}],[\"分表\",{\"1\":{\"314\":1}}],[\"分库分表\",{\"1\":{\"314\":1}}],[\"分歧\",{\"1\":{\"398\":1}}],[\"分歧过大\",{\"1\":{\"244\":1}}],[\"分歧的时候就是弱\",{\"1\":{\"244\":1}}],[\"分时图下降趋势明显\",{\"1\":{\"420\":1}}],[\"分时图出现多次大资金买入\",{\"1\":{\"413\":1}}],[\"分时图\",{\"0\":{\"413\":1,\"418\":1,\"425\":1,\"432\":1,\"439\":1,\"446\":1,\"449\":1,\"456\":1,\"464\":1,\"471\":1}}],[\"分时形态以及跟题材的关联度\",{\"1\":{\"406\":1}}],[\"分时承接无力\",{\"1\":{\"403\":1}}],[\"分时级别的弱转强\",{\"1\":{\"244\":1}}],[\"分时\",{\"1\":{\"242\":1}}],[\"分时复用引起\",{\"0\":{\"107\":1}}],[\"分清楚什么是真的弱转强\",{\"1\":{\"242\":1}}],[\"分代收集算法\",{\"1\":{\"77\":1}}],[\"分配到指定服务器上\",{\"1\":{\"319\":1}}],[\"分配策略比较简单\",{\"1\":{\"319\":1}}],[\"分配内存空间\",{\"1\":{\"181\":2}}],[\"分配\",{\"1\":{\"70\":1,\"394\":1}}],[\"每天进行复盘的时候\",{\"1\":{\"406\":1}}],[\"每天看看新联联播\",{\"1\":{\"402\":1}}],[\"每月复盘的内容\",{\"1\":{\"405\":1}}],[\"每月复盘\",{\"1\":{\"405\":1}}],[\"每一波行情一定会出现一只领涨股\",{\"1\":{\"404\":1}}],[\"每一次高位龙头倒下\",{\"1\":{\"404\":1}}],[\"每一个程序还占用某些系统资源如\",{\"1\":{\"225\":1}}],[\"每日必读\",{\"1\":{\"402\":1}}],[\"每位龙头战法选手\",{\"1\":{\"398\":1}}],[\"每台服务器又会备份一部分数据\",{\"1\":{\"336\":1}}],[\"每台服务器都会负责存储一部分数据\",{\"1\":{\"336\":1}}],[\"每次当大盘弱转强的时候\",{\"1\":{\"243\":1}}],[\"每次垃圾收集时都发现有大批对象死去\",{\"1\":{\"77\":1}}],[\"每次都是对其中的一块进行内存回收\",{\"1\":{\"77\":1}}],[\"每次只使用其中的一块\",{\"1\":{\"77\":1}}],[\"每个节点有自己的备份节点\",{\"1\":{\"337\":1}}],[\"每个节点的数据都是完整的一份\",{\"1\":{\"336\":1}}],[\"每个对象有一个引用计数属性\",{\"1\":{\"76\":1}}],[\"每个线程都有属于自己的程序计数器\",{\"1\":{\"69\":1}}],[\"每个线程是抢夺\",{\"1\":{\"69\":1}}],[\"每个方法从调用直至执行完成的过程\",{\"1\":{\"66\":1,\"67\":1}}],[\"每个方法在执行的同时都会创建一个线帧用于存储局部变量表\",{\"1\":{\"66\":1,\"67\":1}}],[\"每个\",{\"1\":{\"59\":1}}],[\"清理\",{\"1\":{\"77\":1}}],[\"清除\",{\"1\":{\"77\":2}}],[\"清除算法\",{\"1\":{\"77\":1}}],[\"清空元素\",{\"1\":{\"40\":1}}],[\"标记过程仍然与\",{\"1\":{\"77\":1}}],[\"标记清除之后会产生大量不连续的内存碎片\",{\"1\":{\"77\":1}}],[\"标记和清除过程的效率都不高\",{\"1\":{\"77\":1}}],[\"标记\",{\"1\":{\"77\":6,\"78\":1}}],[\"标量替换优化的技术将会导致一些微妙的变化\",{\"1\":{\"66\":1,\"71\":1}}],[\"搜索所走过的路径称为引用链\",{\"1\":{\"76\":1}}],[\"无脑者接盘\",{\"1\":{\"398\":1}}],[\"无脑者就不用多说了\",{\"1\":{\"398\":1}}],[\"无资金=死牛\",{\"1\":{\"398\":1}}],[\"无题材\",{\"1\":{\"398\":1}}],[\"无人驾驶\",{\"1\":{\"398\":1}}],[\"无战斗力的资金\",{\"0\":{\"395\":1}}],[\"无纪律\",{\"0\":{\"395\":1}}],[\"无论是形成\",{\"1\":{\"398\":1}}],[\"无论是分时图\",{\"1\":{\"398\":1}}],[\"无论题材给人感觉如何高大上\",{\"1\":{\"398\":1}}],[\"无论自己认为怎么样\",{\"1\":{\"398\":1}}],[\"无论走哪一通道最后结果一致\",{\"1\":{\"344\":1}}],[\"无论共享数据是否真的会出现竞争\",{\"1\":{\"124\":1}}],[\"无影响\",{\"1\":{\"328\":1}}],[\"无需修改所有的服务\",{\"1\":{\"349\":1}}],[\"无需过的属性导致查询速度过慢\",{\"1\":{\"314\":1}}],[\"无需等待其它线程显式地唤醒\",{\"1\":{\"138\":1}}],[\"无数据再读主节点\",{\"1\":{\"314\":1}}],[\"无主线无方向\",{\"1\":{\"244\":1}}],[\"无其他作用\",{\"1\":{\"184\":1}}],[\"无法做出补救动作\",{\"1\":{\"398\":1}}],[\"无法快速交付\",{\"1\":{\"358\":1}}],[\"无法统一重构\",{\"1\":{\"354\":1}}],[\"无法自动恢复\",{\"1\":{\"332\":1}}],[\"无法发挥多核cpu的性能\",{\"1\":{\"318\":1}}],[\"无法被访问到\",{\"1\":{\"167\":1}}],[\"无法解决对象相互循环引用的问题\",{\"1\":{\"76\":1}}],[\"无锁\",{\"0\":{\"160\":1}}],[\"无限期等待\",{\"0\":{\"137\":1}}],[\"无须同步也能保证线程之间不出现数据争用的问题\",{\"1\":{\"131\":1}}],[\"无同步方案\",{\"0\":{\"129\":1}}],[\"无参的构造方法什么都为进行初始化\",{\"1\":{\"23\":1}}],[\"无参\",{\"1\":{\"17\":2}}],[\"此外\",{\"1\":{\"393\":1,\"398\":1,\"402\":1,\"406\":1}}],[\"此种数据就需要人工修复\",{\"1\":{\"332\":1,\"333\":1}}],[\"此时系统不可用状态\",{\"1\":{\"340\":1}}],[\"此时系统访问\",{\"1\":{\"322\":2}}],[\"此时的结果是不可预知的\",{\"1\":{\"176\":1}}],[\"此时的语义检查主要是防止这种没有编译而生成的\",{\"1\":{\"62\":1}}],[\"此时调用\",{\"1\":{\"149\":1}}],[\"此时内存中可能还是原来的旧值\",{\"1\":{\"115\":1}}],[\"此时线程2执行\",{\"1\":{\"106\":1}}],[\"此方法简单\",{\"1\":{\"76\":1}}],[\"垃圾分类\",{\"1\":{\"398\":1}}],[\"垃圾收集的过程中会stop\",{\"1\":{\"78\":1}}],[\"垃圾收集算法\",{\"0\":{\"77\":1}}],[\"垃圾收集器\",{\"0\":{\"78\":1},\"1\":{\"75\":1}}],[\"垃圾回收器\",{\"0\":{\"75\":1}}],[\"性能要求高的单独拆分方便提高性能\",{\"1\":{\"359\":1}}],[\"性能下降\",{\"1\":{\"358\":1}}],[\"性能存在明显问题\",{\"1\":{\"336\":1}}],[\"性能最优类\",{\"1\":{\"319\":1}}],[\"性能一般\",{\"1\":{\"319\":1}}],[\"性能强大\",{\"1\":{\"319\":1}}],[\"性能较高\",{\"1\":{\"202\":1}}],[\"性能\",{\"1\":{\"74\":1,\"311\":1}}],[\"性能对比\",{\"0\":{\"12\":1}}],[\"解套就跑\",{\"1\":{\"398\":1}}],[\"解耦\",{\"1\":{\"380\":1}}],[\"解决大系统带来的开发效率问题\",{\"1\":{\"379\":1}}],[\"解决全局单点的可用性问题\",{\"1\":{\"379\":1}}],[\"解决不合理的耦合\",{\"1\":{\"379\":1}}],[\"解决系统后门降级的问题\",{\"1\":{\"345\":1}}],[\"解决的问题\",{\"1\":{\"342\":1}}],[\"解决措施\",{\"1\":{\"328\":1}}],[\"解决这个问题的方法就是将read改为非阻塞的\",{\"1\":{\"318\":1}}],[\"解决方向\",{\"1\":{\"318\":1}}],[\"解决方法\",{\"1\":{\"216\":1}}],[\"解决\",{\"1\":{\"314\":1}}],[\"解决复杂度带来的问题\",{\"1\":{\"302\":1}}],[\"解压下载的文件\",{\"1\":{\"280\":1}}],[\"解释器\",{\"0\":{\"73\":1}}],[\"解析\",{\"0\":{\"64\":1}}],[\"区块链等众多题材\",{\"1\":{\"398\":1}}],[\"区别于一字板和t板\",{\"1\":{\"398\":1}}],[\"区别\",{\"0\":{\"209\":1}}],[\"区\",{\"1\":{\"71\":1}}],[\"区和survivor\",{\"1\":{\"71\":1}}],[\"幸存者\",{\"1\":{\"71\":1}}],[\"伊甸园\",{\"1\":{\"71\":1}}],[\"新\",{\"1\":{\"404\":1}}],[\"新闻联播的内容也能通过其他形式获取\",{\"1\":{\"402\":1}}],[\"新大题材的龙头股的产生\",{\"1\":{\"398\":1}}],[\"新时代就会有新题材\",{\"1\":{\"398\":1}}],[\"新能源车\",{\"1\":{\"398\":1}}],[\"新建\",{\"0\":{\"134\":1},\"1\":{\"288\":1}}],[\"新生代使用parnew\",{\"1\":{\"78\":1}}],[\"新生代gc策略\",{\"1\":{\"78\":1}}],[\"新生代并行\",{\"1\":{\"78\":1}}],[\"新生代复制算法\",{\"1\":{\"78\":3}}],[\"新生代=\",{\"1\":{\"71\":1}}],[\"新生代\",{\"1\":{\"71\":1,\"78\":1}}],[\"新生区分为eden\",{\"1\":{\"71\":1}}],[\"新生区\",{\"1\":{\"71\":1}}],[\"新增分区只需要搭建自己的备份中心即可\",{\"1\":{\"337\":1}}],[\"新增字段简单\",{\"1\":{\"315\":1}}],[\"新增表进行处理\",{\"1\":{\"314\":1}}],[\"新增一个引用时计数加1\",{\"1\":{\"76\":1}}],[\"新增操作和arraylist一致\",{\"1\":{\"31\":1}}],[\"新增\",{\"0\":{\"19\":1,\"25\":1,\"31\":1}}],[\"不及预期开盘卖出\",{\"1\":{\"459\":1}}],[\"不及预期\",{\"1\":{\"459\":1}}],[\"不成功\",{\"1\":{\"406\":1}}],[\"不在于游资买了什么第二天去跟着买\",{\"1\":{\"406\":1}}],[\"不见森林\",{\"1\":{\"405\":1}}],[\"不过小说毕竟是小说\",{\"1\":{\"405\":1}}],[\"不买了\",{\"1\":{\"404\":1}}],[\"不买就错过了\",{\"1\":{\"398\":1}}],[\"不买就涨\",{\"1\":{\"395\":1}}],[\"不受大众欢迎\",{\"1\":{\"404\":1}}],[\"不符合预期的时候\",{\"1\":{\"403\":1}}],[\"不要冲动\",{\"1\":{\"404\":1}}],[\"不要只看股票\",{\"1\":{\"402\":1}}],[\"不要把阳区的形态和放量振荡的形态混淆\",{\"1\":{\"398\":1}}],[\"不一定就是指数情绪周期的冰点\",{\"1\":{\"400\":1}}],[\"不进步\",{\"1\":{\"398\":1}}],[\"不赚不出\",{\"1\":{\"398\":1}}],[\"不等了不等了\",{\"1\":{\"398\":1}}],[\"不然就迟了\",{\"1\":{\"398\":1}}],[\"不仅是研究主力\",{\"1\":{\"398\":1}}],[\"不仅仅复制当前对象\",{\"1\":{\"217\":1}}],[\"不卖会跌\",{\"1\":{\"395\":1}}],[\"不放过任何机会\",{\"1\":{\"395\":1}}],[\"不保证实时一致性\",{\"1\":{\"344\":1}}],[\"不存在倒换概念\",{\"1\":{\"335\":1}}],[\"不提供读写\",{\"1\":{\"332\":1}}],[\"不同地区的用户访问同一个域名返回不同的ip\",{\"1\":{\"319\":1}}],[\"不同的命令发送到不同的机器\",{\"1\":{\"333\":1}}],[\"不同的\",{\"1\":{\"70\":1}}],[\"不支持完整的\",{\"1\":{\"315\":1}}],[\"不支持多重继承\",{\"1\":{\"141\":1}}],[\"不断借鉴\",{\"1\":{\"398\":1}}],[\"不断自我优化的股市博弈方法论\",{\"1\":{\"398\":1}}],[\"不断迭代\",{\"1\":{\"307\":1}}],[\"不断地重试\",{\"1\":{\"126\":1}}],[\"不确定性就大了\",{\"1\":{\"244\":1}}],[\"不形成共振\",{\"1\":{\"243\":1}}],[\"不必因为类型不一致而创建不同类\",{\"1\":{\"214\":1}}],[\"不能停下来\",{\"1\":{\"378\":1}}],[\"不能及时处理故障\",{\"1\":{\"342\":1}}],[\"不能过于依赖\",{\"1\":{\"244\":1}}],[\"不能重复\",{\"1\":{\"230\":1}}],[\"不能修饰类和方法\",{\"1\":{\"226\":1}}],[\"不能修改数据\",{\"1\":{\"163\":1}}],[\"不能加排它锁\",{\"1\":{\"163\":1}}],[\"不加锁的特点能够使其读操作的性能大幅提升\",{\"1\":{\"158\":1}}],[\"不会结束在中间状态\",{\"1\":{\"324\":1}}],[\"不会报错\",{\"1\":{\"221\":1}}],[\"不会因为之前已经获取过还没释放而阻塞\",{\"1\":{\"162\":1}}],[\"不会\",{\"1\":{\"155\":1}}],[\"不会出现线程安全问题\",{\"1\":{\"130\":1}}],[\"不属于程序中不可或缺的部分\",{\"1\":{\"144\":1}}],[\"不是错误和超时的响应\",{\"1\":{\"321\":1}}],[\"不是一项简单的技术\",{\"1\":{\"244\":1}}],[\"不是真正意义上的线程\",{\"1\":{\"140\":1}}],[\"不是所有的处理器重排序都要禁止\",{\"1\":{\"108\":1}}],[\"不是所有的编译器重排序都要禁止\",{\"1\":{\"108\":1}}],[\"不调用非可重入的方法等\",{\"1\":{\"132\":1}}],[\"不管你认可不认可\",{\"1\":{\"404\":1}}],[\"不管这些任务执行是否成功\",{\"1\":{\"341\":1}}],[\"不管是自然形成还是有人故意为之\",{\"1\":{\"398\":1}}],[\"不管是大盘还是题材一旦出现这种概率就非常尴尬\",{\"1\":{\"244\":1}}],[\"不管是使用还是面试频度否非常的高\",{\"1\":{\"13\":1}}],[\"不管什么指令都不能和这条\",{\"1\":{\"187\":1}}],[\"不管运行时环境如何\",{\"1\":{\"119\":1}}],[\"不需要建仓吸筹\",{\"1\":{\"392\":1}}],[\"不需要修改所有的功能\",{\"1\":{\"349\":1}}],[\"不需要进行机器的状态判断和倒换\",{\"1\":{\"332\":1}}],[\"不需要进行同步操作\",{\"1\":{\"143\":1}}],[\"不需要再采取任何的线程安全保障措施\",{\"1\":{\"118\":1}}],[\"不需要暂停所有应用线程\",{\"1\":{\"78\":1}}],[\"不可跨层\",{\"1\":{\"352\":1}}],[\"不可读写数据\",{\"1\":{\"332\":1}}],[\"不可以设置为127\",{\"1\":{\"281\":1}}],[\"不可使基础类型\",{\"1\":{\"204\":1}}],[\"不可使用该类型\",{\"1\":{\"85\":1}}],[\"不可变\",{\"0\":{\"118\":1},\"1\":{\"118\":1}}],[\"不可达对象\",{\"1\":{\"76\":1}}],[\"内容主要分两个方面\",{\"1\":{\"402\":1}}],[\"内容丰富导致\",{\"1\":{\"314\":1}}],[\"内容\",{\"1\":{\"291\":1}}],[\"内容如下\",{\"1\":{\"281\":1,\"296\":1,\"297\":1}}],[\"内部联动性明显的板块是龙头持续上行的前提\",{\"1\":{\"398\":1}}],[\"内部基于数组进行存储的\",{\"1\":{\"210\":1}}],[\"内部都是可变数组\",{\"1\":{\"209\":1}}],[\"内部是基于链表进行存储的\",{\"1\":{\"210\":1}}],[\"内部是\",{\"1\":{\"209\":1}}],[\"内部存在存在有缓存\",{\"1\":{\"205\":1}}],[\"内部的实现原理是通过数组进行缓存元素数据\",{\"1\":{\"16\":1}}],[\"内聚性更高\",{\"1\":{\"201\":1}}],[\"内存空间\",{\"1\":{\"225\":1}}],[\"内存语义时\",{\"1\":{\"190\":1}}],[\"内存屏障\",{\"1\":{\"187\":1,\"190\":1}}],[\"内存模型规范了\",{\"1\":{\"109\":1}}],[\"内存系统的重排序\",{\"1\":{\"108\":1}}],[\"内存\",{\"1\":{\"104\":1}}],[\"内存映像工具\",{\"1\":{\"83\":1}}],[\"内存分配时也就不用考虑内存碎片等复杂情况\",{\"1\":{\"77\":1}}],[\"内存缩小为原来的一半\",{\"1\":{\"77\":1}}],[\"内存布局规定了\",{\"1\":{\"70\":1}}],[\"内存区域是很重要的系统资源\",{\"1\":{\"70\":1}}],[\"所谓封板率\",{\"1\":{\"404\":1}}],[\"所谓知己知彼百战不殆\",{\"1\":{\"404\":1}}],[\"所谓的\",{\"1\":{\"403\":1}}],[\"所有节点的角色一致\",{\"1\":{\"342\":1}}],[\"所有节点不会永久性损坏\",{\"1\":{\"336\":1}}],[\"所有节点都采用预写式日志\",{\"1\":{\"336\":1}}],[\"所有的请求不会发送到备机\",{\"1\":{\"332\":1}}],[\"所有的请求直接发给主机\",{\"1\":{\"332\":1}}],[\"所有的数据库操作都变成对中间件的操作\",{\"1\":{\"314\":1}}],[\"所有人\",{\"1\":{\"281\":1}}],[\"所有任务只能使用固定大小的线程\",{\"1\":{\"143\":1}}],[\"所有对象都分配在堆上渐渐变得不那么\",{\"1\":{\"66\":1,\"71\":1}}],[\"所以跌停板复盘很重要\",{\"1\":{\"406\":1}}],[\"所以每天的复盘\",{\"1\":{\"406\":1}}],[\"所以我们需要顺从这个法则\",{\"1\":{\"404\":1}}],[\"所以我们把私募基金和游资放在一起\",{\"1\":{\"394\":1}}],[\"所以才会顶一字\",{\"1\":{\"404\":1}}],[\"所以昨日涨停的票也就缺乏接力资金\",{\"1\":{\"404\":1}}],[\"所以个股表现为无承接\",{\"1\":{\"404\":1}}],[\"所以如果市场上出现了大涨的票\",{\"1\":{\"403\":1}}],[\"所以如果在低位中第一只同题材同身位的弱转强我手慢或者没上\",{\"1\":{\"244\":1}}],[\"所以一定要清楚各自板块运动到了什么阶段\",{\"1\":{\"403\":1}}],[\"所以必然是马后炮\",{\"1\":{\"398\":1}}],[\"所以做短线还是要跟随主力\",{\"1\":{\"387\":1}}],[\"所以出现了预fork优化流程\",{\"1\":{\"318\":1}}],[\"所以实现比较困难\",{\"1\":{\"314\":1}}],[\"所以放量缩量都合理\",{\"1\":{\"244\":1}}],[\"所以系统在产生一个线程或是在各个线程之间切换工作时\",{\"1\":{\"225\":1}}],[\"所以查询的效率较低\",{\"1\":{\"210\":1}}],[\"所以通过索引查询的效率是\",{\"1\":{\"210\":1}}],[\"所以线程安全的\",{\"1\":{\"209\":1}}],[\"所以易维护\",{\"1\":{\"202\":1}}],[\"所以单片机\",{\"1\":{\"202\":1}}],[\"所以上面的过程也可能会变成如下过程\",{\"1\":{\"181\":1}}],[\"所以storestore屏障可以省略\",{\"1\":{\"178\":1}}],[\"所以更不用说是覆盖了\",{\"1\":{\"167\":1}}],[\"所以在这些时候起来的题材\",{\"1\":{\"404\":1}}],[\"所以在x86处理器中\",{\"1\":{\"178\":1}}],[\"所以在final类中给任何方法添加final关键字是没有任何意义的\",{\"1\":{\"166\":1}}],[\"所以在老年代一般不能直接选用这种算法\",{\"1\":{\"77\":1}}],[\"所以非公平锁有可能出现后申请锁的线程先获取锁的场景\",{\"1\":{\"161\":1}}],[\"所以不可掉以轻心\",{\"1\":{\"332\":1}}],[\"所以不会影响系统\",{\"1\":{\"332\":1}}],[\"所以不会添加锁\",{\"1\":{\"158\":1}}],[\"所以不能对final修饰的类进行代理\",{\"1\":{\"11\":1}}],[\"所以使用该方法时需要考虑是否为\",{\"1\":{\"95\":1}}],[\"所以说\",{\"1\":{\"398\":1,\"406\":1}}],[\"所以说它会优先尝试用\",{\"1\":{\"60\":1}}],[\"所以说jdk动态代理的核心是通过重写被代理对象所实现的接口中的方法来重新生成代理类来实现的\",{\"1\":{\"4\":1}}],[\"所以\",{\"1\":{\"54\":1,\"159\":1,\"203\":1,\"398\":2,\"404\":1,\"405\":1,\"406\":3}}],[\"所以最大值为\",{\"1\":{\"41\":1}}],[\"所以需要该数据对象实现对应的方法\",{\"1\":{\"18\":1}}],[\"所以本人认为完全的\",{\"1\":{\"13\":1}}],[\"栈上分配\",{\"1\":{\"66\":1,\"71\":1}}],[\"堆栈跟踪工具\",{\"1\":{\"83\":1}}],[\"堆内存的分配\",{\"1\":{\"71\":1}}],[\"堆唯一的目的就是存放对象实例\",{\"1\":{\"66\":1,\"71\":1}}],[\"堆\",{\"0\":{\"71\":1},\"1\":{\"66\":1}}],[\"都已经有所考量\",{\"1\":{\"398\":1}}],[\"都可以叫做弱\",{\"1\":{\"244\":1}}],[\"都会选择兑现利润\",{\"1\":{\"404\":1}}],[\"都会封我们除了看回封的时间\",{\"1\":{\"244\":1}}],[\"都会将产品的消费过程尽量在一个线程中消费完\",{\"1\":{\"131\":1}}],[\"都在打假\",{\"1\":{\"244\":1}}],[\"都能够得到正确的业务服务\",{\"1\":{\"344\":1}}],[\"都能够调用它的任意一个方法\",{\"1\":{\"229\":1}}],[\"都能够知道这个类的所有属性和方法\",{\"1\":{\"229\":1}}],[\"都不能为\",{\"1\":{\"211\":1}}],[\"都支持\",{\"1\":{\"211\":1}}],[\"都无法在多线程环境中并发使用的代码\",{\"1\":{\"122\":1}}],[\"都对应这一个线帧在虚拟机栈中入栈到出栈的过程\",{\"1\":{\"66\":1,\"67\":1}}],[\"都是头部的参与者才能赚大钱\",{\"1\":{\"395\":1}}],[\"都是集中投资者的资金进行专家理财\",{\"1\":{\"393\":1}}],[\"都是什么板块\",{\"1\":{\"249\":1}}],[\"都是基于数组的存储结构\",{\"1\":{\"28\":1}}],[\"都是空的\",{\"1\":{\"25\":1}}],[\"否极泰来\",{\"1\":{\"405\":1}}],[\"否则第二天的抛压会比较大\",{\"1\":{\"406\":1}}],[\"否则都应该将题材当作小级别的题材来看待\",{\"1\":{\"404\":1}}],[\"否则容易出现混乱\",{\"1\":{\"352\":1}}],[\"否则当出现网络分区时\",{\"1\":{\"322\":1}}],[\"否则盒盖休眠就会影响该节点\",{\"1\":{\"274\":1}}],[\"否则抛出\",{\"1\":{\"231\":1}}],[\"否则会在运行时抛出\",{\"1\":{\"154\":1}}],[\"否则不会被分配\",{\"1\":{\"137\":1}}],[\"否则采取补偿措施\",{\"1\":{\"126\":1}}],[\"否\",{\"1\":{\"66\":3}}],[\"描述的是\",{\"1\":{\"66\":1,\"67\":1}}],[\"描述\",{\"1\":{\"66\":1}}],[\"名称\",{\"1\":{\"66\":1,\"261\":1}}],[\"准备提交阶段\",{\"1\":{\"336\":1}}],[\"准备\",{\"0\":{\"63\":1}}],[\"语言有哪些特点\",{\"0\":{\"201\":1}}],[\"语言天生就具备多线程特性\",{\"1\":{\"122\":1}}],[\"语言的语法规定\",{\"1\":{\"62\":1}}],[\"语义检查的错误在编译器编译阶段就会通不过\",{\"1\":{\"62\":1}}],[\"语义检查\",{\"1\":{\"62\":1}}],[\"验证\",{\"0\":{\"62\":1}}],[\"链接\",{\"0\":{\"61\":1}}],[\"链表进行树化\",{\"1\":{\"41\":1}}],[\"链表树化的最小元素数量\",{\"1\":{\"41\":1}}],[\"链表\",{\"1\":{\"15\":1}}],[\"了解国家政策\",{\"1\":{\"402\":1}}],[\"了啊\",{\"1\":{\"398\":2}}],[\"了\",{\"1\":{\"60\":1,\"66\":1,\"71\":1,\"398\":2,\"404\":1}}],[\"因此给予它更高的强度或溢价\",{\"1\":{\"398\":1}}],[\"因此在博弈中处于弱势地位\",{\"1\":{\"395\":1}}],[\"因此在获取数据的时候会先加锁\",{\"1\":{\"158\":1}}],[\"因此进程是动态的\",{\"1\":{\"225\":1}}],[\"因此普通的long或double类型读\",{\"1\":{\"185\":1}}],[\"因此\",{\"1\":{\"173\":1,\"181\":1,\"185\":1,\"391\":1,\"398\":1}}],[\"因此更加灵活\",{\"1\":{\"156\":1}}],[\"因此可以在循环体中使用\",{\"1\":{\"149\":1}}],[\"因此可以保证可见性\",{\"1\":{\"115\":1}}],[\"因此必须在本地进行处理\",{\"1\":{\"145\":1}}],[\"因此继承了\",{\"1\":{\"141\":1}}],[\"因此最后还需要通过\",{\"1\":{\"140\":1}}],[\"因此这种同步操作称为非阻塞同步\",{\"1\":{\"126\":1}}],[\"因此这种同步也称为阻塞同步\",{\"1\":{\"124\":1}}],[\"因此无法保证可见性\",{\"1\":{\"115\":1}}],[\"因此如果被代理类被final关键字所修饰\",{\"1\":{\"9\":1}}],[\"因为越涨到后面\",{\"1\":{\"406\":1}}],[\"因为他们可能会是我们的盟友\",{\"1\":{\"404\":1}}],[\"因为这些反映了资金参与的活跃度\",{\"1\":{\"406\":1}}],[\"因为这些列式存储在一起的\",{\"1\":{\"315\":1}}],[\"因为这个法则会影响到很多短线投资者的心理状态\",{\"1\":{\"404\":1}}],[\"因为后排个股无溢价\",{\"1\":{\"404\":1}}],[\"因为四大报相当于是官方的喉舌\",{\"1\":{\"402\":1}}],[\"因为你不可能赚到钱\",{\"1\":{\"395\":1}}],[\"因为分表的\",{\"1\":{\"314\":1}}],[\"因为竞价如果开的太高再上去板\",{\"1\":{\"244\":1}}],[\"因为浮点数不能完全的精确的表示出来\",{\"1\":{\"220\":1}}],[\"因为long和double两种数据类型的操作可分为高32位和低32位两部分\",{\"1\":{\"185\":1}}],[\"因为base中的test方法是private的\",{\"1\":{\"167\":1}}],[\"因为private所修饰的方法是隐式的final\",{\"1\":{\"167\":1}}],[\"因为无法覆盖他们\",{\"1\":{\"166\":1}}],[\"因为线程有几率不阻塞直接获得锁\",{\"1\":{\"161\":1}}],[\"因为异常不能跨线程传播回\",{\"1\":{\"145\":1}}],[\"因为局部变量存储在虚拟机栈中\",{\"1\":{\"130\":1}}],[\"因为普通共享变量被修改之后\",{\"1\":{\"115\":1}}],[\"因为虚拟机的是多线程的\",{\"1\":{\"69\":1}}],[\"因为\",{\"1\":{\"60\":3,\"141\":1}}],[\"也迅速涨停\",{\"1\":{\"446\":1}}],[\"也减少了\",{\"1\":{\"406\":1}}],[\"也预示着题材的持续性难以为继\",{\"1\":{\"404\":1}}],[\"也还需要等待时机\",{\"1\":{\"398\":1}}],[\"也完全可以博傻\",{\"1\":{\"398\":1}}],[\"也包括t板和一部分一字板\",{\"1\":{\"398\":1}}],[\"也并不迷信\",{\"1\":{\"398\":1}}],[\"也会放量\",{\"1\":{\"398\":1}}],[\"也会根据个股的k线形态分析主力建仓特征\",{\"1\":{\"398\":1}}],[\"也会变成提交\",{\"1\":{\"336\":1}}],[\"也能感知市场情绪\",{\"1\":{\"406\":1}}],[\"也能清晰地反映出来\",{\"1\":{\"406\":1}}],[\"也能够得到正确的业务服务\",{\"1\":{\"344\":1}}],[\"也能享受更高的溢价\",{\"1\":{\"244\":1}}],[\"也不会导致日志数据的消失\",{\"1\":{\"336\":1}}],[\"也不是单一的交易信号\",{\"1\":{\"244\":1}}],[\"也不是一种模式\",{\"1\":{\"242\":1}}],[\"也要做到最终一致性\",{\"1\":{\"324\":1}}],[\"也存在父子线程通信复杂问题\",{\"1\":{\"318\":1}}],[\"也有可能是我们的对手盘\",{\"1\":{\"404\":1}}],[\"也有可能让个股弱转强成功\",{\"1\":{\"244\":1}}],[\"也有低开后被资金继续强势攻击的情况\",{\"1\":{\"404\":1}}],[\"也有微微上行的\",{\"1\":{\"398\":1}}],[\"也有许多竞价缩量的在后续的分时转强回板走高的\",{\"1\":{\"244\":1}}],[\"也是可以的\",{\"1\":{\"405\":1}}],[\"也是挺有人气的\",{\"1\":{\"404\":1}}],[\"也是工作需要\",{\"1\":{\"402\":1}}],[\"也是本书第三部分\",{\"1\":{\"398\":1}}],[\"也是我们刚刚上面说到过的题材内同身位的后排卡前排\",{\"1\":{\"244\":1}}],[\"也是我最近手把手带的竞业达出场的时机\",{\"1\":{\"243\":1}}],[\"也是网上很多老师教的一种情况\",{\"1\":{\"244\":1}}],[\"也是弱转强强转弱的一种体现\",{\"1\":{\"244\":1}}],[\"也是实现collection\",{\"1\":{\"22\":1}}],[\"也容易被带起\",{\"1\":{\"243\":1}}],[\"也正因为如此\",{\"1\":{\"225\":1}}],[\"也就是盘中曾打开过的一字板\",{\"1\":{\"398\":1}}],[\"也就是所谓的跟风\",{\"1\":{\"244\":1}}],[\"也就是说程序是静态的代码\",{\"1\":{\"225\":1}}],[\"也就是说\",{\"1\":{\"178\":1}}],[\"也就是无法被继承\",{\"1\":{\"167\":1}}],[\"也就说前面对final基本数据类型的重排序规则在这里还是使用\",{\"1\":{\"175\":1}}],[\"也就避免了覆盖了核心类库的问题\",{\"1\":{\"60\":1}}],[\"也可以在总龙头还未结束时启动\",{\"1\":{\"398\":1}}],[\"也可以是连接数\",{\"1\":{\"319\":1}}],[\"也可以是按照比例或者权重\",{\"1\":{\"319\":1}}],[\"也可以设置为adminonly\",{\"1\":{\"281\":1}}],[\"也可以设置https\",{\"1\":{\"281\":1}}],[\"也可以通过参数控制gc的时间不大于多少毫秒或者比例\",{\"1\":{\"78\":1}}],[\"也可能正在等待\",{\"1\":{\"135\":1}}],[\"也没有这个习惯\",{\"1\":{\"406\":1}}],[\"也没有跟风小弟\",{\"1\":{\"398\":1}}],[\"也没有低位的这么多弯弯绕\",{\"1\":{\"244\":1}}],[\"也没有查找到\",{\"1\":{\"60\":1}}],[\"也没加载过\",{\"1\":{\"60\":1}}],[\"委托给\",{\"1\":{\"60\":2}}],[\"委派父加载器去查找\",{\"1\":{\"60\":1}}],[\"默认30分钟\",{\"1\":{\"281\":1}}],[\"默认值\",{\"1\":{\"203\":8}}],[\"默认是everyone\",{\"1\":{\"281\":1}}],[\"默认是db\",{\"1\":{\"281\":1}}],[\"默认是harbor12345\",{\"1\":{\"281\":1}}],[\"默认是http\",{\"1\":{\"281\":1}}],[\"默认是10次\",{\"1\":{\"159\":1}}],[\"默认是设置delegate是false的\",{\"1\":{\"60\":1}}],[\"默认gc线程数为cpu的数量\",{\"1\":{\"78\":1}}],[\"默认的负载因子\",{\"1\":{\"41\":1}}],[\"默认的初始容量是\",{\"1\":{\"29\":1}}],[\"||\",{\"1\":{\"60\":1,\"96\":1,\"100\":1}}],[\"b获得溢价\",{\"1\":{\"398\":1}}],[\"b15\",{\"1\":{\"286\":1}}],[\"bcd都涨停了\",{\"1\":{\"244\":1}}],[\"b=\",{\"1\":{\"221\":1}}],[\"blocking\",{\"0\":{\"136\":1}}],[\"blockquote>\",{\"1\":{\"99\":2}}],[\"b\",{\"1\":{\"113\":2,\"126\":2,\"128\":1,\"218\":2,\"221\":1,\"351\":1}}],[\"bash\",{\"1\":{\"291\":1}}],[\"base\",{\"0\":{\"324\":1,\"325\":1},\"1\":{\"324\":2,\"325\":2}}],[\"baseurl=https\",{\"1\":{\"279\":1}}],[\"base和son都有方法test\",{\"1\":{\"167\":1}}],[\"basedn\",{\"1\":{\"281\":1}}],[\"based\",{\"1\":{\"99\":1}}],[\"backend\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"barrier\",{\"1\":{\"187\":2}}],[\"barriers\",{\"1\":{\"108\":1}}],[\"both\",{\"1\":{\"99\":2}}],[\"bootstrapclassloader\",{\"1\":{\"60\":1}}],[\"boolean\",{\"1\":{\"60\":3,\"95\":1,\"97\":1,\"98\":1,\"100\":1,\"203\":5}}],[\"bug\",{\"1\":{\"314\":1}}],[\"build\",{\"1\":{\"288\":1,\"291\":5,\"292\":1}}],[\"builder\",{\"0\":{\"92\":1},\"1\":{\"92\":8}}],[\"buffer\",{\"0\":{\"91\":1},\"1\":{\"91\":8}}],[\"before\",{\"0\":{\"113\":1,\"189\":2},\"1\":{\"109\":1,\"116\":1,\"218\":1}}],[\"begin\",{\"1\":{\"100\":1}}],[\"beginning\",{\"1\":{\"100\":1}}],[\"behavior\",{\"1\":{\"90\":1}}],[\"be\",{\"1\":{\"90\":3,\"99\":2,\"100\":1}}],[\"bin\",{\"1\":{\"286\":1,\"291\":5}}],[\"binaries\",{\"1\":{\"286\":1}}],[\"binarynametopath\",{\"1\":{\"60\":1}}],[\"bifunction<\",{\"1\":{\"40\":1}}],[\"bytes\",{\"0\":{\"90\":1},\"1\":{\"90\":7}}],[\"byte\",{\"0\":{\"90\":1},\"1\":{\"90\":2,\"203\":3,\"221\":2}}],[\"by\",{\"1\":{\"60\":1,\"90\":1,\"94\":1,\"96\":1,\"98\":1,\"99\":3,\"100\":1,\"314\":3}}],[\"global\",{\"1\":{\"287\":1}}],[\"globals\",{\"1\":{\"60\":1}}],[\"group=root\",{\"1\":{\"285\":1}}],[\"greater\",{\"1\":{\"99\":2,\"100\":1}}],[\"gpw\",{\"1\":{\"286\":1}}],[\"gpasswd\",{\"1\":{\"285\":1}}],[\"gpgcheck=0\",{\"1\":{\"279\":1}}],[\"googleapis\",{\"1\":{\"280\":1}}],[\"gz\",{\"1\":{\"276\":2,\"286\":2}}],[\"given\",{\"1\":{\"90\":1,\"97\":1}}],[\"github\",{\"1\":{\"81\":1}}],[\"g1gc\",{\"1\":{\"78\":2}}],[\"g1垃圾回收器将堆内存分割成不同的区域然后并发的对其进行垃圾回收\",{\"1\":{\"78\":1}}],[\"g1垃圾回收器\",{\"1\":{\"78\":1}}],[\"gceasy\",{\"1\":{\"81\":1}}],[\"gcpauseintervalmillis=200\",{\"1\":{\"78\":1}}],[\"gc时间\",{\"1\":{\"78\":1}}],[\"gc策略\",{\"1\":{\"78\":3}}],[\"gc\",{\"1\":{\"76\":1}}],[\"generate\",{\"1\":{\"283\":1}}],[\"generated\",{\"1\":{\"283\":11}}],[\"generation\",{\"1\":{\"5\":1}}],[\"generally\",{\"1\":{\"92\":1}}],[\"getclass\",{\"1\":{\"229\":1}}],[\"getclassloadinglock\",{\"1\":{\"60\":1}}],[\"getclassloader\",{\"1\":{\"3\":1,\"60\":1}}],[\"getandincrement\",{\"1\":{\"127\":1}}],[\"getvalue\",{\"1\":{\"91\":2,\"92\":1}}],[\"getresource\",{\"1\":{\"60\":1}}],[\"getjavaseclassloader\",{\"1\":{\"60\":1}}],[\"getmessage\",{\"1\":{\"60\":2}}],[\"getordefault\",{\"1\":{\"40\":1}}],[\"get\",{\"1\":{\"40\":1,\"279\":1,\"348\":1}}],[\"getproxy\",{\"1\":{\"6\":2}}],[\"抛出异常\",{\"1\":{\"60\":1}}],[\"raft算法\",{\"1\":{\"336\":1}}],[\"rancher\",{\"0\":{\"269\":1,\"276\":1},\"1\":{\"261\":1,\"269\":5,\"276\":6,\"278\":1,\"279\":1,\"289\":1,\"291\":4}}],[\"ranges\",{\"1\":{\"96\":1}}],[\"router\",{\"1\":{\"314\":1}}],[\"rocketmq技术内幕\",{\"0\":{\"298\":1}}],[\"root\",{\"1\":{\"281\":2,\"283\":2,\"285\":1}}],[\"roots包括\",{\"1\":{\"76\":1}}],[\"roots没有任何引用链相连时\",{\"1\":{\"76\":1}}],[\"roots开始向下搜索\",{\"1\":{\"76\":1}}],[\"rf\",{\"1\":{\"291\":1}}],[\"rm\",{\"1\":{\"291\":1}}],[\"rules\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"running\",{\"1\":{\"135\":1}}],[\"runnable\",{\"0\":{\"135\":1},\"1\":{\"140\":2}}],[\"run\",{\"1\":{\"92\":1,\"149\":1,\"269\":1,\"291\":3}}],[\"runtimeexception\",{\"1\":{\"60\":2,\"223\":1}}],[\"rpm\",{\"1\":{\"284\":1}}],[\"read\",{\"1\":{\"324\":3}}],[\"ready\",{\"1\":{\"135\":1}}],[\"reactor对象通过select监听连接事件\",{\"1\":{\"318\":1}}],[\"reactor对象通过select监控连接事件\",{\"1\":{\"318\":1}}],[\"reactor\",{\"1\":{\"318\":2}}],[\"redis\",{\"1\":{\"315\":2,\"318\":1}}],[\"redhat\",{\"1\":{\"284\":2}}],[\"releases\",{\"1\":{\"276\":3,\"280\":1}}],[\"reload\",{\"1\":{\"268\":1}}],[\"registration\",{\"1\":{\"281\":1}}],[\"registry\",{\"1\":{\"268\":1,\"283\":2}}],[\"regionmatches\",{\"1\":{\"98\":1}}],[\"reflectasm\",{\"1\":{\"229\":1}}],[\"reflect包下边的两个类\",{\"1\":{\"2\":1}}],[\"referencequeue<>\",{\"1\":{\"213\":1}}],[\"reentrantlock\",{\"1\":{\"151\":1}}],[\"request\",{\"1\":{\"131\":1}}],[\"required\",{\"1\":{\"90\":1}}],[\"repeatable\",{\"1\":{\"324\":1}}],[\"replicas\",{\"1\":{\"289\":1,\"291\":1,\"296\":1,\"297\":2}}],[\"replace\",{\"1\":{\"40\":2}}],[\"repos\",{\"1\":{\"279\":2,\"284\":1}}],[\"repository\",{\"1\":{\"60\":1}}],[\"repositories\",{\"1\":{\"60\":1}}],[\"repo\",{\"1\":{\"266\":2,\"279\":1,\"284\":2}}],[\"represented\",{\"1\":{\"94\":1,\"99\":2,\"100\":1}}],[\"represents\",{\"1\":{\"87\":1,\"88\":1,\"89\":1,\"97\":2,\"98\":1}}],[\"restriction\",{\"1\":{\"281\":1}}],[\"restart=unless\",{\"1\":{\"269\":1}}],[\"restart\",{\"1\":{\"268\":1,\"284\":1,\"285\":1}}],[\"result\",{\"1\":{\"97\":1,\"98\":2,\"99\":3,\"100\":3}}],[\"resourcename\",{\"1\":{\"60\":3}}],[\"resolveclass\",{\"1\":{\"60\":5}}],[\"resolve\",{\"0\":{\"64\":1},\"1\":{\"60\":6}}],[\"resize\",{\"1\":{\"42\":1}}],[\"remote\",{\"1\":{\"281\":1}}],[\"removeif\",{\"1\":{\"14\":1}}],[\"removeall\",{\"1\":{\"14\":1}}],[\"remove\",{\"1\":{\"14\":1,\"40\":2}}],[\"remappingfunction\",{\"1\":{\"40\":1}}],[\"rethrown\",{\"1\":{\"60\":2}}],[\"retainall\",{\"1\":{\"14\":1}}],[\"returned\",{\"1\":{\"96\":1}}],[\"returns\",{\"1\":{\"94\":1,\"95\":1,\"96\":1,\"99\":3}}],[\"returning\",{\"1\":{\"60\":4}}],[\"return\",{\"0\":{\"222\":1},\"1\":{\"3\":1,\"6\":2,\"19\":4,\"60\":7,\"94\":2,\"95\":2,\"96\":2,\"97\":5,\"98\":2,\"99\":4,\"100\":4,\"222\":3}}],[\"d处往往放量\",{\"1\":{\"398\":1}}],[\"drools\",{\"1\":{\"363\":1}}],[\"driver\",{\"1\":{\"229\":1}}],[\"durability\",{\"1\":{\"324\":1}}],[\"dump\",{\"1\":{\"80\":1}}],[\"dns负载均衡实现地理级别的负载均衡\",{\"1\":{\"319\":1}}],[\"dns负载均衡\",{\"1\":{\"319\":1}}],[\"djava\",{\"1\":{\"291\":1}}],[\"dc=com\",{\"1\":{\"281\":2}}],[\"dc=mydomain\",{\"1\":{\"281\":2}}],[\"db\",{\"1\":{\"281\":2,\"283\":1}}],[\"d7sx4\",{\"1\":{\"278\":1}}],[\"d\",{\"1\":{\"269\":1,\"279\":1,\"284\":1}}],[\"darwin\",{\"1\":{\"276\":1}}],[\"data\",{\"1\":{\"265\":1,\"281\":3,\"283\":1,\"291\":19}}],[\"daemon\",{\"0\":{\"144\":1},\"1\":{\"268\":2}}],[\"dist\",{\"1\":{\"286\":1}}],[\"disable\",{\"1\":{\"263\":1}}],[\"dictionary\",{\"1\":{\"211\":1}}],[\"differ\",{\"1\":{\"99\":1}}],[\"difference\",{\"1\":{\"99\":2}}],[\"different\",{\"1\":{\"99\":4}}],[\"download\",{\"1\":{\"286\":1}}],[\"dockerfile\",{\"1\":{\"291\":1}}],[\"docker\",{\"0\":{\"266\":1},\"1\":{\"261\":1,\"266\":4,\"267\":1,\"268\":3,\"269\":2,\"291\":8}}],[\"double\",{\"1\":{\"203\":2}}],[\"does\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"doprivileged\",{\"1\":{\"60\":3}}],[\"dp\",{\"1\":{\"60\":4}}],[\"dept\",{\"1\":{\"291\":6,\"296\":1,\"297\":12}}],[\"deploy\",{\"1\":{\"291\":2}}],[\"deployment\",{\"1\":{\"289\":2,\"291\":7,\"297\":2}}],[\"dev\",{\"1\":{\"291\":6,\"296\":1,\"297\":2}}],[\"device\",{\"1\":{\"265\":1}}],[\"dest\",{\"1\":{\"291\":1}}],[\"determined\",{\"1\":{\"99\":1}}],[\"decoded\",{\"1\":{\"90\":1}}],[\"decoding\",{\"1\":{\"90\":2}}],[\"delegating\",{\"1\":{\"60\":2}}],[\"delegate\",{\"1\":{\"60\":1}}],[\"delegateload\",{\"1\":{\"60\":3}}],[\"definition\",{\"1\":{\"99\":1}}],[\"define\",{\"1\":{\"60\":1}}],[\"defaultvalue\",{\"1\":{\"40\":2}}],[\"default\",{\"1\":{\"19\":1,\"41\":2,\"85\":1,\"90\":2,\"289\":3,\"291\":3,\"296\":1,\"297\":2}}],[\"defaultcapacity\",{\"1\":{\"19\":1}}],[\"debug\",{\"1\":{\"60\":12}}],[\"urandom\",{\"1\":{\"291\":1}}],[\"url\",{\"1\":{\"60\":5,\"281\":3}}],[\"ubuntu\",{\"1\":{\"283\":1}}],[\"uid\",{\"1\":{\"281\":2}}],[\"uid=searchuser\",{\"1\":{\"281\":1}}],[\"ui\",{\"0\":{\"277\":1},\"1\":{\"281\":1,\"283\":3,\"363\":1}}],[\"update\",{\"1\":{\"264\":1,\"266\":1}}],[\"u000\",{\"1\":{\"203\":1}}],[\"utils\",{\"1\":{\"265\":1}}],[\"util\",{\"1\":{\"156\":1}}],[\"u\",{\"1\":{\"127\":1,\"128\":1}}],[\"ul>\",{\"1\":{\"98\":1}}],[\"uncommitted\",{\"1\":{\"324\":1}}],[\"unsafe\",{\"1\":{\"127\":1}}],[\"unspecified\",{\"1\":{\"90\":1}}],[\"unlimited\",{\"1\":{\"291\":1}}],[\"unlock\",{\"1\":{\"113\":1,\"218\":1}}],[\"unless\",{\"1\":{\"88\":1}}],[\"units<\",{\"1\":{\"94\":1}}],[\"unicode\",{\"1\":{\"94\":1,\"96\":1,\"99\":1}}],[\"unnecessary\",{\"1\":{\"87\":1,\"88\":1}}],[\"untreeify\",{\"1\":{\"41\":1}}],[\"usr\",{\"1\":{\"291\":5}}],[\"user=root\",{\"1\":{\"285\":1}}],[\"username\",{\"1\":{\"281\":1}}],[\"use\",{\"1\":{\"85\":1,\"87\":1,\"88\":1}}],[\"used\",{\"1\":{\"85\":1,\"90\":1}}],[\"using\",{\"1\":{\"60\":1,\"90\":1,\"99\":1}}],[\"wget\",{\"1\":{\"280\":1,\"284\":1,\"286\":2}}],[\"windows\",{\"1\":{\"276\":1}}],[\"window\",{\"1\":{\"276\":1}}],[\"with\",{\"1\":{\"100\":1}}],[\"wrf\",{\"1\":{\"213\":2}}],[\"wait\",{\"0\":{\"154\":1,\"155\":1},\"1\":{\"137\":1,\"138\":3,\"154\":2,\"155\":2,\"156\":1,\"231\":1}}],[\"waiting\",{\"0\":{\"137\":1,\"138\":1}}],[\"warn\",{\"1\":{\"60\":2}}],[\"would\",{\"1\":{\"99\":1}}],[\"workdir\",{\"1\":{\"291\":1}}],[\"workers\",{\"1\":{\"281\":1}}],[\"work\",{\"1\":{\"273\":1}}],[\"word解决加锁问题\",{\"1\":{\"160\":1}}],[\"words\",{\"1\":{\"88\":1}}],[\"world\",{\"1\":{\"78\":1}}],[\"where\",{\"1\":{\"100\":1}}],[\"when\",{\"1\":{\"60\":1,\"90\":2,\"99\":1}}],[\"which\",{\"1\":{\"99\":1}}],[\"while\",{\"1\":{\"97\":1,\"99\":1,\"100\":1}}],[\"whose\",{\"1\":{\"99\":1}}],[\"www\",{\"1\":{\"81\":1}}],[\"weakreference\",{\"1\":{\"213\":3}}],[\"weakhashmap\",{\"0\":{\"44\":1}}],[\"we\",{\"1\":{\"60\":1}}],[\"web服务器\",{\"1\":{\"371\":1}}],[\"webhooks\",{\"1\":{\"288\":1}}],[\"webappclassloader\",{\"0\":{\"60\":1},\"1\":{\"59\":2,\"60\":3}}],[\"web\",{\"1\":{\"59\":9,\"131\":2,\"291\":3}}],[\"程序代码封装\",{\"1\":{\"314\":1}}],[\"程序的一次执行过程\",{\"1\":{\"225\":1}}],[\"程序\",{\"0\":{\"225\":1},\"1\":{\"225\":1}}],[\"程序也就终止\",{\"1\":{\"144\":1}}],[\"程序计数器就是存储这些指令去做什么\",{\"1\":{\"69\":1}}],[\"程序计数器是一块较小的内存空间\",{\"1\":{\"66\":1,\"69\":1}}],[\"程序计数器\",{\"0\":{\"69\":1},\"1\":{\"66\":1}}],[\"程序都不可见\",{\"1\":{\"59\":1}}],[\"程序只需生成在\",{\"1\":{\"54\":1}}],[\"以均价线价格卖出\",{\"1\":{\"473\":1}}],[\"以均衡与内存的速度差异\",{\"1\":{\"104\":1}}],[\"以便第二日做出相应的决策\",{\"1\":{\"406\":1}}],[\"以自己为师\",{\"1\":{\"405\":1}}],[\"以防范风险\",{\"1\":{\"398\":1}}],[\"以市场为师\",{\"1\":{\"398\":1}}],[\"以\",{\"1\":{\"398\":1}}],[\"以上才比较正常\",{\"1\":{\"404\":1}}],[\"以上\",{\"1\":{\"244\":1}}],[\"以提高效率\",{\"1\":{\"218\":1}}],[\"以此来提升性能\",{\"1\":{\"208\":1}}],[\"以及板块运动的类型及规律\",{\"1\":{\"405\":1}}],[\"以及龙头本身的表现\",{\"1\":{\"398\":1}}],[\"以及大盘表现\",{\"1\":{\"398\":1}}],[\"以及它上方是否有高度压制\",{\"1\":{\"398\":1}}],[\"以及人们心中有了对标\",{\"1\":{\"398\":1}}],[\"以及常见走势的归纳总结\",{\"1\":{\"398\":1}}],[\"以及同一属性板块中的相同身位个股之间的相互联动\",{\"1\":{\"388\":1}}],[\"以及对他的动态访问权限\",{\"1\":{\"229\":1}}],[\"以及他们之间的关系\",{\"0\":{\"225\":1}}],[\"以及他们的封装类\",{\"0\":{\"203\":1}}],[\"以及$\",{\"1\":{\"59\":1}}],[\"以x86为例的话\",{\"1\":{\"178\":1}}],[\"以分时复用\",{\"1\":{\"104\":1}}],[\"以给用户带来较好的体验\",{\"1\":{\"78\":1}}],[\"以应对被使用的内存中所有对象都100\",{\"1\":{\"77\":1}}],[\"以下是\",{\"1\":{\"41\":1}}],[\"通常也会对平行板块的龙头产生影响\",{\"1\":{\"403\":1}}],[\"通常在盘面上\",{\"1\":{\"403\":1}}],[\"通常指实体涨停板\",{\"1\":{\"398\":1}}],[\"通常表现为\",{\"1\":{\"395\":1}}],[\"通常社保基金入市的区域是一个低位区域\",{\"1\":{\"391\":1}}],[\"通常完成一次个股强弱排序之间的弱转强\",{\"1\":{\"244\":1}}],[\"通道尽量隔离\",{\"1\":{\"344\":1}}],[\"通达信昨日涨停指数\",{\"1\":{\"406\":1}}],[\"通达信软件里\",{\"1\":{\"406\":1}}],[\"通达信\",{\"1\":{\"250\":1,\"402\":1}}],[\"通用类加载器\",{\"1\":{\"59\":1}}],[\"通过这样的分析来判断他们对这个题材的认可度\",{\"1\":{\"406\":1}}],[\"通过对跌停板的分析\",{\"1\":{\"406\":1}}],[\"通过七天的复盘\",{\"1\":{\"405\":1}}],[\"通过跟市场学习后\",{\"1\":{\"405\":1}}],[\"通过观察这个题材相关个股早盘开盘时候的表现\",{\"1\":{\"404\":1}}],[\"通过横向的对比来判断机会和风向\",{\"1\":{\"403\":1}}],[\"通过财联社或选股宝我们了解7\",{\"1\":{\"402\":1}}],[\"通过涨停板\",{\"1\":{\"398\":2}}],[\"通过日k线和多日k线组合与大盘逆势来发现主力痕迹\",{\"1\":{\"398\":1}}],[\"通过数据流或事件流\",{\"1\":{\"363\":1}}],[\"通过限流降低短时间内访问次数\",{\"1\":{\"345\":1}}],[\"通过参数设置变量控制降级\",{\"1\":{\"345\":1}}],[\"通过复制通道将数据复制到另外一台主机\",{\"1\":{\"335\":1}}],[\"通过复制渠道复制给备机\",{\"1\":{\"332\":1,\"333\":1}}],[\"通过控制台进行查看流水线日志\",{\"1\":{\"292\":1}}],[\"通过大盘的弱转强去捕获主线\",{\"1\":{\"243\":1}}],[\"通过序列化\",{\"1\":{\"215\":1}}],[\"通过插入特定类型的内存屏障来禁止+\",{\"1\":{\"187\":1}}],[\"通过调用一个线程的\",{\"1\":{\"148\":1}}],[\"通过调用\",{\"1\":{\"138\":1}}],[\"通过synchronized和lock也能够保证可见性\",{\"1\":{\"115\":1}}],[\"通过内存屏障指令来禁止特定类型的处理器重排序\",{\"1\":{\"108\":1}}],[\"通过字符组的长度从而获得字符串的长度\",{\"1\":{\"94\":1}}],[\"通过字节码生成的方式加快反射速度\",{\"1\":{\"229\":1}}],[\"通过字节码技术动态创建子类实例\",{\"1\":{\"6\":1}}],[\"通过字节组进行创建对象\",{\"1\":{\"90\":1}}],[\"通过传入的字符组进行复制\",{\"1\":{\"89\":1}}],[\"通过传入的字符串的位置进行获取\",{\"1\":{\"96\":1}}],[\"通过传入的字符串\",{\"1\":{\"88\":1}}],[\"通过设置\",{\"1\":{\"87\":1}}],[\"通过设置一些属性\",{\"1\":{\"41\":1}}],[\"通过一个类的全限定名获取定义此类的`二进制例\",{\"1\":{\"57\":1}}],[\"通过集合进行初始化的\",{\"1\":{\"23\":1}}],[\"通过equals判断数据是否相等\",{\"1\":{\"18\":1}}],[\"通过\",{\"0\":{\"277\":1},\"1\":{\"16\":1,\"40\":1,\"91\":3,\"229\":1,\"289\":1,\"345\":1,\"406\":1}}],[\"通过修改其字节码生成子类来处理\",{\"1\":{\"8\":1}}],[\"通过jdk\",{\"1\":{\"4\":1}}],[\"决定\",{\"1\":{\"56\":1}}],[\"类似这种也是有成功几率但是我个人基本不参与除非是题材非常确认今天要加速\",{\"1\":{\"244\":1}}],[\"类似于\",{\"1\":{\"28\":1}}],[\"类名\",{\"1\":{\"229\":1}}],[\"类型转换为\",{\"1\":{\"221\":1}}],[\"类型\",{\"0\":{\"351\":1},\"1\":{\"204\":1}}],[\"类来实现线程之间的协调\",{\"1\":{\"156\":1}}],[\"类来实现线程本地存储功能\",{\"1\":{\"131\":1}}],[\"类库中提供了\",{\"1\":{\"156\":1}}],[\"类库仅仅可以被此\",{\"1\":{\"59\":1}}],[\"类开销过大\",{\"1\":{\"141\":1}}],[\"类可能只要求可执行就行\",{\"1\":{\"141\":1}}],[\"类就无法继承其它类\",{\"1\":{\"141\":1}}],[\"类\",{\"1\":{\"140\":1,\"211\":2}}],[\"类的所有实例需要遵守\",{\"1\":{\"236\":1}}],[\"类的\",{\"1\":{\"127\":1}}],[\"类文件的固定格式\",{\"1\":{\"62\":1}}],[\"类文件的结构检查\",{\"1\":{\"62\":1}}],[\"类加载器的\",{\"1\":{\"60\":1}}],[\"类加载器加载类\",{\"1\":{\"60\":1}}],[\"类加载器\",{\"1\":{\"59\":1}}],[\"类加载器有哪些\",{\"0\":{\"58\":1}}],[\"类加载器子系统负责从文件系统或者网络中加载\",{\"1\":{\"56\":1}}],[\"类加载过程如下图\",{\"1\":{\"56\":1}}],[\"类加载子系统详解\",{\"1\":{\"56\":1}}],[\"类加载子系统\",{\"0\":{\"56\":1}}],[\"类装载器所做的工作实质是把类文件从硬盘读取到内存中\",{\"1\":{\"54\":1}}],[\"这都是能给我们启发的\",{\"1\":{\"406\":1}}],[\"这部分内容是数据复盘里面很重要的一部分内容\",{\"1\":{\"406\":1}}],[\"这部分常量信息是\",{\"1\":{\"65\":1}}],[\"这两个指数\",{\"1\":{\"406\":1}}],[\"这两个操作之间不能重排序\",{\"1\":{\"218\":2}}],[\"这两个操作是不能被重排序的\",{\"1\":{\"175\":1}}],[\"这七个指数\",{\"1\":{\"406\":1}}],[\"这从投资者的心理层面反映出人气股对整个市场情绪的影响\",{\"1\":{\"404\":1}}],[\"这也需要对盘面的情绪板\",{\"1\":{\"404\":1}}],[\"这一条\",{\"1\":{\"403\":1}}],[\"这恰恰是短线选手需要时时捕捉的重要信息\",{\"1\":{\"402\":1}}],[\"这段时间称为短线情绪低迷\",{\"1\":{\"400\":1}}],[\"这本来是本门情绪流关于多空分析的一个常识\",{\"1\":{\"398\":1}}],[\"这始终只是一个辅助作用\",{\"1\":{\"398\":1}}],[\"这才是能让大家都赚钱的个股\",{\"1\":{\"398\":1}}],[\"这么多股在涨\",{\"1\":{\"398\":1}}],[\"这么做的目的就是\",{\"1\":{\"60\":1}}],[\"这么做的目的就是为了优先加载\",{\"1\":{\"59\":1}}],[\"这只股票是跟风呢\",{\"1\":{\"406\":1}}],[\"这只股票跌得差不多了\",{\"1\":{\"398\":1}}],[\"这只股票在涨\",{\"1\":{\"398\":1}}],[\"这只股票的涨幅已经比较大了\",{\"1\":{\"398\":1}}],[\"这时候出击往往安全性更高\",{\"1\":{\"403\":1}}],[\"这时候\",{\"1\":{\"398\":3}}],[\"这不是绝对的\",{\"1\":{\"398\":1}}],[\"这非常重要\",{\"1\":{\"398\":1}}],[\"这和\",{\"1\":{\"325\":1}}],[\"这就需要根据板块整体表现来进行判断\",{\"1\":{\"403\":1}}],[\"这就叫板块分歧\",{\"1\":{\"244\":1}}],[\"这就是规避风险的时候\",{\"1\":{\"403\":1}}],[\"这就是\",{\"1\":{\"398\":1}}],[\"这就是龙头股有别于跟风股的根本原因\",{\"1\":{\"398\":1}}],[\"这就是所谓的\",{\"1\":{\"398\":1}}],[\"这就是i\",{\"1\":{\"318\":1}}],[\"这就是超预期\",{\"1\":{\"244\":1}}],[\"这就是超预期的一个转变的过程\",{\"1\":{\"244\":1}}],[\"这就是自旋锁\",{\"1\":{\"159\":1}}],[\"这就是可见性问题\",{\"1\":{\"106\":1}}],[\"这是感知市场情绪非常好用的一个工具\",{\"1\":{\"406\":1}}],[\"这是大概率的事情\",{\"1\":{\"406\":1}}],[\"这是怎么了\",{\"1\":{\"404\":1}}],[\"这是毋庸置疑的\",{\"1\":{\"403\":1}}],[\"这是市场短线情绪的重要体现\",{\"1\":{\"403\":1}}],[\"这是从另一个维度来讲的\",{\"1\":{\"398\":1}}],[\"这是从成交量的角度来谈涨停板的形态\",{\"1\":{\"398\":1}}],[\"这是\",{\"1\":{\"398\":1}}],[\"这是第一次机会\",{\"1\":{\"398\":1}}],[\"这是走极端\",{\"1\":{\"398\":1}}],[\"这是对超预期的最简单的诠释\",{\"1\":{\"242\":1}}],[\"这是因为一个是标的池多\",{\"1\":{\"244\":1}}],[\"这是因为\",{\"1\":{\"154\":1}}],[\"这篇弱转强\",{\"1\":{\"242\":1}}],[\"这条禁止重排序规则就是针对这些处理器而设定的\",{\"1\":{\"173\":1}}],[\"这种情况下还是要控制情绪\",{\"1\":{\"404\":1}}],[\"这种情况就更加糟糕了\",{\"1\":{\"404\":1}}],[\"这种情况出现后要立马兑现利润\",{\"1\":{\"404\":1}}],[\"这种情况很多\",{\"1\":{\"404\":1}}],[\"这种显示控盘程度较高\",{\"1\":{\"398\":1}}],[\"这种手法称为点火\",{\"1\":{\"398\":1}}],[\"这种一般我会选择进入一个股票池代入观察\",{\"1\":{\"244\":1}}],[\"这种走势就叫做正常的预期\",{\"1\":{\"244\":1}}],[\"这种在恰当的时机直接从水下爆拉买起来封板\",{\"1\":{\"244\":1}}],[\"这种弱转强可能封得住可能封不住完全是概率\",{\"1\":{\"244\":1}}],[\"这种弱转强\",{\"1\":{\"244\":1}}],[\"这种等待方式\",{\"1\":{\"156\":1}}],[\"这种代码也叫做纯代码\",{\"1\":{\"132\":1}}],[\"这种处理方式的广泛应用使得很多\",{\"1\":{\"131\":1}}],[\"这种乐观的并发策略的许多实现都不需要将线程阻塞\",{\"1\":{\"126\":1}}],[\"这样比较好\",{\"1\":{\"406\":1}}],[\"这样股票上涨的动力更加充足一些\",{\"1\":{\"406\":1}}],[\"这样下去\",{\"1\":{\"405\":1}}],[\"这样一来\",{\"1\":{\"404\":1}}],[\"这样的情况在盘面上经常可以看到\",{\"1\":{\"403\":1}}],[\"这样a就被淘汰\",{\"1\":{\"398\":1}}],[\"这样就赚钱了\",{\"1\":{\"398\":1}}],[\"这样就容易造成分歧\",{\"1\":{\"398\":1}}],[\"这样就可以根据各个年代的特点采用最适当的收集算法\",{\"1\":{\"77\":1}}],[\"这样会带来运维复杂度\",{\"1\":{\"318\":1}}],[\"这样我们就看谁先回封谁就叫做强\",{\"1\":{\"244\":1}}],[\"这样能保证任何情况下对long和double的单次读\",{\"1\":{\"185\":1}}],[\"这样\",{\"1\":{\"131\":1,\"398\":1}}],[\"这些锁仓的资金就是潜在的抛盘资金\",{\"1\":{\"406\":1}}],[\"这些股票虽然好像是\",{\"1\":{\"404\":1}}],[\"这些票我们定义为超预期的股票\",{\"1\":{\"404\":1}}],[\"这些都是最基本的数据\",{\"1\":{\"404\":1}}],[\"这些都是强\",{\"1\":{\"244\":1}}],[\"这些人就是具有前瞻思维的策动者\",{\"1\":{\"398\":1}}],[\"这些屏障可以防止编译器和处理器在处理\",{\"1\":{\"218\":1}}],[\"这些方法包括\",{\"1\":{\"109\":1}}],[\"这些重排序都可能会导致多线程程序出现内存可见性问题\",{\"1\":{\"108\":1}}],[\"这使得加载和存储操作看上去可能是在乱序执行\",{\"1\":{\"108\":1}}],[\"这类应用尤其重视服务的响应速度\",{\"1\":{\"78\":1}}],[\"这个市场上的游资有很多种类型\",{\"1\":{\"406\":1}}],[\"这个时候就要谨慎\",{\"1\":{\"404\":1}}],[\"这个时候就不能贸然进攻\",{\"1\":{\"403\":1}}],[\"这个道理好多初学者开始都不太懂\",{\"1\":{\"403\":1}}],[\"这个相对比较难理解\",{\"1\":{\"398\":1}}],[\"这个要结合盘口具体看\",{\"1\":{\"398\":1}}],[\"这个板非常有价值\",{\"1\":{\"244\":1}}],[\"这个应该是比较熟悉的了\",{\"1\":{\"244\":1}}],[\"这个是一个态度的问题\",{\"1\":{\"244\":1}}],[\"这个也是你们最常讨论的\",{\"1\":{\"244\":1}}],[\"这个也是重要的短线大局观\",{\"1\":{\"243\":1}}],[\"这个简单提一下\",{\"1\":{\"244\":1}}],[\"这个过程也是一个弱转强的过程\",{\"1\":{\"244\":1}}],[\"这个我们也在龙头的常识认知及其中间的关系的课上已经说得很清楚\",{\"1\":{\"244\":1}}],[\"这个就需要对题材进行综合性的分析\",{\"1\":{\"404\":1}}],[\"这个就是具体问题具体分析了\",{\"1\":{\"244\":1}}],[\"这个就是龙头主升的交易节奏范畴的\",{\"1\":{\"244\":1}}],[\"这个就是板块的分歧\",{\"1\":{\"244\":1}}],[\"这个就叫一致\",{\"1\":{\"244\":1}}],[\"这个便是板块领涨\",{\"1\":{\"243\":1}}],[\"这个规则仅仅是针对处理器\",{\"1\":{\"173\":1}}],[\"这个规则的实现主要包含了两个方面\",{\"1\":{\"172\":1}}],[\"这个屏障可以禁止处理器把final域的写重排序到构造函数之外\",{\"1\":{\"172\":1}}],[\"这个收集器是在jdk\",{\"1\":{\"78\":1}}],[\"这个装载工作是由\",{\"1\":{\"54\":1}}],[\"这里支持多种认证方式\",{\"1\":{\"281\":1}}],[\"这里重点给大家讲一下\",{\"1\":{\"244\":1}}],[\"这里是从正常转弱\",{\"1\":{\"244\":1}}],[\"这里是通过\",{\"1\":{\"60\":1}}],[\"这里经历了第二次弱转强\",{\"1\":{\"244\":1}}],[\"这里就经历了一次弱转强\",{\"1\":{\"244\":1}}],[\"这里就不能再使用互斥同步来保证了\",{\"1\":{\"126\":1}}],[\"这里讲的\",{\"1\":{\"244\":1}}],[\"这里给大家多提点一种情况\",{\"1\":{\"244\":1}}],[\"这里的异动复盘\",{\"1\":{\"406\":1}}],[\"这里的异步是指多个任务的执行互不干扰\",{\"1\":{\"143\":1}}],[\"这里的人气股包含盘面的高标\",{\"1\":{\"404\":1}}],[\"这里的负载不一定是cpu负载\",{\"1\":{\"319\":1}}],[\"这里的\",{\"1\":{\"244\":1}}],[\"这里的分歧转一致便是板块级别的弱转强\",{\"1\":{\"244\":1}}],[\"这里讨论的是概念模型\",{\"1\":{\"124\":1}}],[\"这里判断对象是否存在也是进行数据遍历\",{\"1\":{\"24\":1}}],[\"就成仁\",{\"1\":{\"406\":1}}],[\"就笔者所知\",{\"1\":{\"406\":1}}],[\"就有点像\",{\"1\":{\"406\":1}}],[\"就能大致清楚他们的风格\",{\"1\":{\"406\":1}}],[\"就能将所有板块一目了然地看清楚\",{\"1\":{\"406\":1}}],[\"就能带来源源不断的关注和资金\",{\"1\":{\"398\":1}}],[\"就算是有题材\",{\"1\":{\"406\":1}}],[\"就算是分歧\",{\"1\":{\"244\":1}}],[\"就旁观者清了\",{\"1\":{\"405\":1}}],[\"就跟美国前总统奥巴马\",{\"1\":{\"404\":1}}],[\"就需要减仓\",{\"1\":{\"398\":1}}],[\"就需要仓位控制\",{\"1\":{\"398\":1}}],[\"就需要有额外的空间进行分配担保\",{\"1\":{\"77\":1}}],[\"就应该郑重考虑\",{\"1\":{\"398\":1}}],[\"就应当挂起线程\",{\"1\":{\"159\":1}}],[\"就要注意\",{\"1\":{\"406\":1}}],[\"就要注意了\",{\"1\":{\"398\":1}}],[\"就要非常谨慎\",{\"1\":{\"403\":1}}],[\"就要及时处理\",{\"1\":{\"403\":1}}],[\"就要及时跟随买入\",{\"1\":{\"398\":1}}],[\"就要准备好对策\",{\"1\":{\"403\":1}}],[\"就要小心了\",{\"1\":{\"403\":1}}],[\"就要考虑出场了\",{\"1\":{\"398\":1}}],[\"就要重点关注了\",{\"1\":{\"398\":1}}],[\"就必须要有板块效应\",{\"1\":{\"398\":1}}],[\"就必须使用\",{\"1\":{\"77\":1}}],[\"就形成了卡位\",{\"1\":{\"398\":1}}],[\"就大概率会出现换手的\",{\"1\":{\"398\":1}}],[\"就挂涨停价格买入\",{\"1\":{\"398\":1}}],[\"就差一点了\",{\"1\":{\"398\":1}}],[\"就白干\",{\"1\":{\"398\":1}}],[\"就容易引起砸盘的冲动\",{\"1\":{\"398\":1}}],[\"就像2019年10月8日业绩预增题材开始炒作\",{\"1\":{\"403\":1}}],[\"就像初春时节\",{\"1\":{\"398\":1}}],[\"就像一个组织\",{\"1\":{\"398\":1}}],[\"就近访问\",{\"1\":{\"319\":1}}],[\"就完成了一次板上的弱转强\",{\"1\":{\"244\":1}}],[\"就会导致龙头或部分跟风缩量加速上板\",{\"1\":{\"398\":1}}],[\"就会洗盘\",{\"1\":{\"395\":1}}],[\"就会冲突\",{\"1\":{\"322\":1}}],[\"就会进场抄底\",{\"1\":{\"243\":1}}],[\"就会覆盖核心类库的\",{\"1\":{\"60\":1}}],[\"就是股市收盘后再静态地看一遍市场全貌\",{\"1\":{\"405\":1}}],[\"就是股性转变的一个过程\",{\"1\":{\"244\":1}}],[\"就是指当天的冲击波和回头波\",{\"1\":{\"406\":1}}],[\"就是指每天都必须坚持的盘后复盘\",{\"1\":{\"405\":1}}],[\"就是指共振冰点\",{\"1\":{\"400\":1}}],[\"就是让我们优化情报收集\",{\"1\":{\"405\":1}}],[\"就是要通过复盘了解当时的市场环境\",{\"1\":{\"405\":1}}],[\"就是\",{\"1\":{\"405\":1}}],[\"就是上一节我们讲的散户心理\",{\"1\":{\"398\":1}}],[\"就是博傻的阶段了\",{\"1\":{\"398\":1}}],[\"就是赌后面有比自己更傻的人\",{\"1\":{\"398\":1}}],[\"就是当我们分析断定它有可能或者已经是下一阶段的龙头\",{\"1\":{\"398\":1}}],[\"就是主要的力\",{\"1\":{\"398\":1}}],[\"就是主力机构和中小散户的博弈\",{\"1\":{\"395\":1}}],[\"就是非换手板\",{\"1\":{\"398\":1}}],[\"就是某只股票大幅上涨\",{\"1\":{\"398\":1}}],[\"就是没有活在当下的原因\",{\"1\":{\"398\":1}}],[\"就是这种模式\",{\"1\":{\"334\":1}}],[\"就是前排加速走强\",{\"1\":{\"244\":1}}],[\"就是缩量加速的走势\",{\"1\":{\"244\":1}}],[\"就是连续下跌颓势\",{\"1\":{\"243\":1}}],[\"就是自动把封装类型转化为基础类型\",{\"1\":{\"205\":1}}],[\"就是自动把基础类型自动转换为封装类型\",{\"1\":{\"205\":1}}],[\"就去寻找下一个散列\",{\"1\":{\"216\":1}}],[\"就表明了你不能打算继承该类\",{\"1\":{\"166\":1}}],[\"就可以初步判断对指数可能有负面影响\",{\"1\":{\"406\":1}}],[\"就可以出场而无需犹豫\",{\"1\":{\"403\":1}}],[\"就可以通过反射机制获得类的所有信息\",{\"1\":{\"229\":1}}],[\"就可以在多种平台上不加修改地运行\",{\"1\":{\"54\":1}}],[\"就可能需要在调用端使用额外的同步手段来保证调用的正确性\",{\"1\":{\"120\":1}}],[\"就切换到线程2执行\",{\"1\":{\"107\":1}}],[\"就将还存活着的对象复制到另外一块上面\",{\"1\":{\"77\":1}}],[\"就添加\",{\"1\":{\"40\":1}}],[\"使得我们能够直观感知市场情绪的变化\",{\"1\":{\"406\":1}}],[\"使得线程等待某个条件满足\",{\"1\":{\"154\":1}}],[\"使得缓存能够得到更加合理地利用\",{\"1\":{\"104\":1}}],[\"使一个线程睡眠\",{\"1\":{\"138\":1}}],[\"使用场景\",{\"1\":{\"314\":1,\"316\":1,\"344\":1}}],[\"使用命令即可登录rancher\",{\"1\":{\"278\":1}}],[\"使用阿里的容器镜像服务进行加速\",{\"1\":{\"268\":1}}],[\"使用阿里加速\",{\"0\":{\"268\":1}}],[\"使用反射性能较低\",{\"1\":{\"229\":1}}],[\"使用字符组进行缓存数据\",{\"1\":{\"85\":1}}],[\"使用\",{\"0\":{\"278\":1},\"1\":{\"78\":2,\"85\":1,\"144\":1,\"154\":1,\"226\":1}}],[\"使用多线程和\",{\"1\":{\"78\":1}}],[\"使用注意\",{\"0\":{\"10\":1}}],[\"使\",{\"1\":{\"54\":1}}],[\"一只活跃的股票\",{\"1\":{\"406\":1}}],[\"一进二成功率\",{\"1\":{\"406\":1}}],[\"一些因为公告利好而上涨的高位板\",{\"1\":{\"404\":1}}],[\"一是板块资金可能的流动方向\",{\"1\":{\"406\":1}}],[\"一是盘面回顾\",{\"1\":{\"405\":1}}],[\"一是重大政策或信息\",{\"1\":{\"402\":1}}],[\"一是空间远离\",{\"1\":{\"398\":1}}],[\"一片肃杀\",{\"1\":{\"400\":1}}],[\"一部人往往急于抛出\",{\"1\":{\"398\":1}}],[\"一部分聪明的短线资金经过深入思考\",{\"1\":{\"398\":1}}],[\"一两次成功没有任何意义\",{\"1\":{\"398\":1}}],[\"一味强调跟随\",{\"1\":{\"398\":1}}],[\"一板\",{\"1\":{\"398\":1}}],[\"一条主线可以分出多条支线\",{\"1\":{\"398\":1}}],[\"一买就套住了\",{\"1\":{\"398\":1}}],[\"一切以盘面为准\",{\"1\":{\"398\":1}}],[\"一切成功人士都是\",{\"1\":{\"398\":1}}],[\"一切服务于\",{\"1\":{\"398\":1}}],[\"一切无组织\",{\"0\":{\"395\":1}}],[\"一遇风吹草动\",{\"1\":{\"398\":1}}],[\"一棵树苗奋力长出\",{\"1\":{\"398\":1}}],[\"一定有自身的特质\",{\"1\":{\"398\":1}}],[\"一定要有前瞻思维\",{\"1\":{\"398\":1}}],[\"一定要活在当下\",{\"1\":{\"398\":1}}],[\"一定是市场的热点\",{\"1\":{\"398\":1}}],[\"一定是要结合主线的分歧转一致来综合判断的\",{\"1\":{\"244\":1}}],[\"一带一路\",{\"1\":{\"398\":1}}],[\"一旦出现多只跌停\",{\"1\":{\"406\":1}}],[\"一旦出现2只以上的人气股崩溃\",{\"1\":{\"404\":1}}],[\"一旦盘面出现风险和亏钱效应\",{\"1\":{\"404\":1}}],[\"一旦板块渐趋弱\",{\"1\":{\"398\":1}}],[\"一旦封板后板上出现抛单或撤单的情况\",{\"1\":{\"398\":1}}],[\"一旦快解套立马就跑\",{\"1\":{\"395\":1}}],[\"一旦发生冲突\",{\"1\":{\"216\":1}}],[\"一直在均价线上\",{\"1\":{\"418\":1,\"425\":1}}],[\"一直跌\",{\"1\":{\"395\":1}}],[\"一直想等则返回长度差值\",{\"1\":{\"99\":1}}],[\"一方面体现为整个市场相互之间的联动影响\",{\"1\":{\"388\":1}}],[\"一台主机故障情况下\",{\"1\":{\"335\":1}}],[\"一次磁盘读写就能把一行数据的所有列都读取到内存中\",{\"1\":{\"315\":1}}],[\"一字板\",{\"1\":{\"244\":1,\"398\":1}}],[\"一起完蛋\",{\"1\":{\"244\":1}}],[\"一二三次分歧\",{\"1\":{\"244\":1}}],[\"一支股票\",{\"1\":{\"244\":1}}],[\"一般人说的复盘\",{\"1\":{\"405\":1}}],[\"一般大\",{\"1\":{\"404\":1}}],[\"一般都是以做涨停板为主\",{\"1\":{\"404\":1}}],[\"一般在首页上\",{\"1\":{\"402\":1}}],[\"一般晚上和第二天早上浏览一次\",{\"1\":{\"402\":1}}],[\"一般自由流通市值20亿以下\",{\"1\":{\"398\":1}}],[\"一般15元以下\",{\"1\":{\"398\":1}}],[\"一般来说\",{\"1\":{\"398\":1,\"400\":1,\"403\":1,\"404\":1}}],[\"一般说来\",{\"1\":{\"398\":3,\"403\":1}}],[\"一般拉到20\",{\"1\":{\"395\":1}}],[\"一般按业绩利润20\",{\"1\":{\"394\":1}}],[\"一般只需要更改一层\",{\"1\":{\"349\":1}}],[\"一般采用两个通道\",{\"1\":{\"344\":1}}],[\"一般不具备防火墙和防ddos攻击等安全功能\",{\"1\":{\"319\":1}}],[\"一般出现在对抗的情况当中\",{\"1\":{\"244\":1}}],[\"一般情况下\",{\"1\":{\"244\":1,\"341\":1,\"404\":1}}],[\"一般处理器不会重排序这两个操作\",{\"1\":{\"173\":1}}],[\"一口吃不了一个胖子\",{\"1\":{\"242\":1}}],[\"一套是针对标准的输入输出\",{\"1\":{\"228\":1}}],[\"一个人经商做生意\",{\"1\":{\"406\":1}}],[\"一个大级别的题材中\",{\"1\":{\"398\":1}}],[\"一个好的点火单通常是吃掉关键价位后\",{\"1\":{\"398\":1}}],[\"一个龙头号召在前\",{\"1\":{\"398\":1}}],[\"一个事务中要么全部完成\",{\"1\":{\"324\":1}}],[\"一个连接一个进程时可以通过阻塞进行读取\",{\"1\":{\"318\":1}}],[\"一个是在低位中很容易在同题材同身位中出现卡位的现象\",{\"1\":{\"244\":1}}],[\"一个是效率问题\",{\"1\":{\"77\":1}}],[\"一个进程就是一个执行的程序\",{\"1\":{\"225\":1}}],[\"一个进程在其执行的过程中可以产生多个小城\",{\"1\":{\"225\":1}}],[\"一个线程执行完毕之后会自动结束\",{\"1\":{\"147\":1}}],[\"一个任务创建一个线程\",{\"1\":{\"143\":1}}],[\"一个请求对应一个服务器线程\",{\"1\":{\"131\":1}}],[\"一个对象的初始化完成\",{\"1\":{\"113\":1,\"218\":1}}],[\"一个\",{\"1\":{\"113\":1,\"218\":1}}],[\"一个垃圾回收堆和一个存储方法域\",{\"1\":{\"54\":1}}],[\"一个栈\",{\"1\":{\"54\":1}}],[\"一组寄存器\",{\"1\":{\"54\":1}}],[\"一致性\",{\"1\":{\"321\":1,\"324\":1}}],[\"一致的时候就是强\",{\"1\":{\"244\":1}}],[\"一致\",{\"1\":{\"14\":1,\"15\":2,\"30\":1,\"216\":1}}],[\"为我们提供了很大的便利\",{\"1\":{\"402\":1}}],[\"为自己工作才是最大的动力\",{\"1\":{\"398\":1}}],[\"为不同的地区提供服务和只读所以对系统的设计并不多\",{\"1\":{\"344\":1}}],[\"为不同的地区提供服务\",{\"1\":{\"344\":1}}],[\"为啥要研究大盘的拐点和弱转强\",{\"1\":{\"243\":1}}],[\"为\",{\"1\":{\"211\":1}}],[\"为此\",{\"1\":{\"190\":1}}],[\"为了等待时机或洗盘需要\",{\"1\":{\"395\":1}}],[\"为了提升硬件利用率\",{\"1\":{\"336\":1}}],[\"为了提高执行性能\",{\"1\":{\"187\":1}}],[\"为了保持主从需要添加新主机\",{\"1\":{\"333\":1}}],[\"为了保证中介方高可用就会引入新的问题\",{\"1\":{\"334\":1}}],[\"为了保证\",{\"1\":{\"322\":2}}],[\"为了保证在不同的编译器和\",{\"1\":{\"187\":1}}],[\"为了解决这个问题想到了只有连接上有数据的时候进程采取处理\",{\"1\":{\"318\":1}}],[\"为了解决ppc多次创建进程问题\",{\"1\":{\"318\":1}}],[\"为了实现\",{\"1\":{\"190\":1}}],[\"为了性能优化\",{\"1\":{\"190\":1}}],[\"为了防止这个过程的重排序\",{\"1\":{\"181\":1}}],[\"为了这一小段时间去切换线程\",{\"1\":{\"159\":1}}],[\"为了合理利用\",{\"1\":{\"104\":1}}],[\"为什么会出现这种情况呢\",{\"1\":{\"404\":1}}],[\"为什么会出现并发问题\",{\"0\":{\"105\":1}}],[\"为什么这四只报纸这么重要\",{\"1\":{\"402\":1}}],[\"为什么说机会是1\",{\"1\":{\"398\":1}}],[\"为什么需要多线程\",{\"0\":{\"104\":1}}],[\"为什么要自定义类加载器\",{\"0\":{\"59\":1}}],[\"为什么要这么计算哈希值\",{\"1\":{\"42\":1}}],[\"为空则会清除\",{\"1\":{\"40\":1}}],[\"中间件\",{\"0\":{\"477\":1}}],[\"中间件封装\",{\"1\":{\"314\":1}}],[\"中远海能600026\",{\"0\":{\"454\":1,\"466\":1}}],[\"中天能源600856\",{\"0\":{\"411\":1,\"420\":1}}],[\"中证500\",{\"1\":{\"406\":1}}],[\"中小板指数\",{\"1\":{\"406\":1}}],[\"中小散户是处于弱势的一方\",{\"1\":{\"395\":1}}],[\"中国经济大讲堂\",{\"1\":{\"402\":1}}],[\"中强调的\",{\"1\":{\"398\":2}}],[\"中央汇金公司\",{\"0\":{\"391\":1}}],[\"中介式\",{\"1\":{\"334\":1}}],[\"中信建投等早报\",{\"1\":{\"248\":1}}],[\"中使用它\",{\"1\":{\"236\":1}}],[\"中提供了两套的\",{\"1\":{\"228\":1}}],[\"中\",{\"1\":{\"145\":1,\"398\":2,\"405\":1}}],[\"中大部分的类都是属于线程兼容的\",{\"1\":{\"121\":1}}],[\"中最小的执行单位是线程\",{\"1\":{\"69\":1}}],[\"中的\",{\"0\":{\"227\":1,\"236\":1}}],[\"中的类装载器完成的\",{\"1\":{\"54\":1}}],[\"中的所有类\",{\"1\":{\"54\":1}}],[\"中才能运行\",{\"1\":{\"54\":1}}],[\"中不存在哈希冲突则放置到对应的下标上\",{\"1\":{\"42\":1}}],[\"中运行\",{\"1\":{\"4\":1}}],[\"^\",{\"1\":{\"42\":1}}],[\"只是如果真的发生了板块效应\",{\"1\":{\"398\":1}}],[\"只是\",{\"1\":{\"357\":1}}],[\"只是在更新数据的时候去判断之前有没有别的线程更新了这个数据\",{\"1\":{\"158\":1}}],[\"只保证绝大部分用户的异地多活\",{\"1\":{\"344\":1}}],[\"只同步核心数据\",{\"1\":{\"344\":1}}],[\"只读类做多活\",{\"1\":{\"344\":1}}],[\"只做一个方案\",{\"1\":{\"310\":1}}],[\"只做同题材同身位的第一只弱转强\",{\"1\":{\"244\":1}}],[\"只需要修改对应的功能\",{\"1\":{\"349\":1}}],[\"只需要修改对应的服务\",{\"1\":{\"349\":1}}],[\"只需要中介读取主从节点\",{\"1\":{\"334\":1}}],[\"只需要数据同步\",{\"1\":{\"332\":1}}],[\"只需要回复后进行重新连接\",{\"1\":{\"332\":1}}],[\"只需要选择\",{\"1\":{\"273\":1}}],[\"只需要付出少量存活对象的复制成本就可以完成收集\",{\"1\":{\"77\":1}}],[\"只复制当前对象\",{\"1\":{\"217\":1}}],[\"只会存在一个\",{\"1\":{\"211\":1}}],[\"只能分层依赖\",{\"1\":{\"352\":1}}],[\"只能部署多个系统来利用多核cpu\",{\"1\":{\"318\":1}}],[\"只能一个线程去更新\",{\"1\":{\"316\":1}}],[\"只能用\",{\"1\":{\"315\":1}}],[\"只能用在同步方法或者同步控制块中使用\",{\"1\":{\"154\":1}}],[\"只能多次\",{\"1\":{\"314\":1}}],[\"只能管理员\",{\"1\":{\"281\":1}}],[\"只能先浅谈一下\",{\"1\":{\"242\":1}}],[\"只能修饰变量\",{\"1\":{\"226\":1}}],[\"只能保证单次的读\",{\"1\":{\"183\":1}}],[\"只能靠硬件来完成\",{\"1\":{\"126\":1}}],[\"只能初始化一次\",{\"1\":{\"85\":1}}],[\"只要是盈利了\",{\"1\":{\"398\":1}}],[\"只要没有形成板块效应\",{\"1\":{\"398\":1}}],[\"只要市场环境不太差\",{\"1\":{\"398\":1}}],[\"只要听党的话\",{\"1\":{\"390\":1}}],[\"只要到了第三阶段\",{\"1\":{\"336\":1}}],[\"只要给定类的名称\",{\"1\":{\"229\":1}}],[\"只要散列足够大\",{\"1\":{\"216\":1}}],[\"只要一个不可变的对象被正确地构建出来\",{\"1\":{\"118\":1}}],[\"只要移动堆顶指针\",{\"1\":{\"77\":1}}],[\"只使用一个线程去回收\",{\"1\":{\"78\":1}}],[\"只有跟随主流的做多力量\",{\"1\":{\"406\":1}}],[\"只有跟大盘弱转强共振的领涨品种才有确定性\",{\"1\":{\"243\":1}}],[\"只有保守\",{\"1\":{\"404\":1}}],[\"只有长期\",{\"1\":{\"398\":1}}],[\"只有不断发现\",{\"1\":{\"398\":1}}],[\"只有称为\",{\"1\":{\"387\":1}}],[\"只有一个进程\",{\"1\":{\"318\":1}}],[\"只有实现了\",{\"1\":{\"231\":1}}],[\"只有当\",{\"1\":{\"126\":1}}],[\"只有当容量大于\",{\"1\":{\"41\":1}}],[\"只有少量存活\",{\"1\":{\"77\":1}}],[\"只负责\",{\"1\":{\"56\":1}}],[\"只不过虚拟机栈是服务\",{\"1\":{\"66\":1,\"68\":1}}],[\"只不过在操作的时候添加了锁\",{\"1\":{\"31\":1}}],[\"只不过在判断时加锁进而防止并发问题\",{\"1\":{\"30\":1}}],[\"只不过加入了自己特性的一些东西\",{\"1\":{\"28\":1}}],[\"优秀的游资私募类短线主力更是谙熟\",{\"1\":{\"395\":1}}],[\"优缺点\",{\"1\":{\"337\":1}}],[\"优先本地数据\",{\"1\":{\"344\":1}}],[\"优先访问上次请求的主机\",{\"1\":{\"344\":1}}],[\"优先分配给响应最快的服务器\",{\"1\":{\"319\":1}}],[\"优先级大于\",{\"1\":{\"41\":1}}],[\"优势\",{\"1\":{\"315\":2}}],[\"优化工具\",{\"0\":{\"83\":1},\"1\":{\"83\":1}}],[\"优化\",{\"0\":{\"79\":1},\"1\":{\"82\":1}}],[\"优点是几乎都能买得到\",{\"1\":{\"398\":1}}],[\"优点是一旦发现情况不对可以及时撤单\",{\"1\":{\"398\":1}}],[\"优点\",{\"1\":{\"15\":1,\"77\":1,\"229\":1,\"318\":1,\"319\":3,\"332\":1,\"333\":1,\"334\":2,\"335\":1,\"336\":1,\"341\":1,\"363\":1}}],[\"当日冲回\",{\"1\":{\"406\":4}}],[\"当日涨停的股票\",{\"1\":{\"406\":1}}],[\"当今世界\",{\"1\":{\"406\":1}}],[\"当昨日涨停板块内多数个股出现大低开的局面时\",{\"1\":{\"404\":1}}],[\"当出现大盘下跌情况时\",{\"1\":{\"404\":1}}],[\"当出现网络分区后\",{\"1\":{\"321\":1}}],[\"当这只龙头股涨不动的时候\",{\"1\":{\"403\":1}}],[\"当这一块的内存用完了\",{\"1\":{\"77\":1}}],[\"当短线情绪急剧升温\",{\"1\":{\"400\":1}}],[\"当短线情绪由冰点开始复苏\",{\"1\":{\"400\":1}}],[\"当短线情绪退潮时\",{\"1\":{\"400\":1}}],[\"当短线情绪值处于近段时间以来的相对低点时\",{\"1\":{\"400\":1}}],[\"当股票由于某种原因放量下跌时\",{\"1\":{\"398\":1}}],[\"当潜在的龙头股真正成为龙头股的第二天算起\",{\"1\":{\"398\":1}}],[\"当你买入龙头时\",{\"1\":{\"398\":1}}],[\"当龙头股有逻辑\",{\"1\":{\"398\":1}}],[\"当时的题材在现在看来依然是题材\",{\"1\":{\"398\":1}}],[\"当故障的服务器恢复后\",{\"1\":{\"342\":1}}],[\"当主机出现故障时\",{\"1\":{\"341\":1}}],[\"当主机故障时\",{\"1\":{\"340\":1}}],[\"当备机升级为主机时\",{\"1\":{\"340\":2}}],[\"当分区问题结束时也要完成数据的一致性\",{\"1\":{\"325\":1}}],[\"当某个题材的某只股票强势领涨的时候\",{\"1\":{\"403\":1}}],[\"当某个类的整体定义为final时\",{\"1\":{\"166\":1}}],[\"当某台服务器出现故障\",{\"1\":{\"342\":1}}],[\"当某条连接有新的数据可以处理时\",{\"1\":{\"318\":1}}],[\"当多条连接共用一个阻塞对象后\",{\"1\":{\"318\":1}}],[\"当多个线程可以一起工作去解决某个问题时\",{\"1\":{\"152\":1}}],[\"当天又没有及时上车\",{\"1\":{\"398\":1}}],[\"当天也有小弟先涨停的情况\",{\"1\":{\"398\":1}}],[\"当天无法盘中定义和判别它的弱转强是它本身的弱转强\",{\"1\":{\"244\":1}}],[\"当天没有任何多空情绪转变的诱因和概率\",{\"1\":{\"244\":1}}],[\"当在主线明确的情况下\",{\"1\":{\"244\":1}}],[\"当读取\",{\"1\":{\"218\":1}}],[\"当第一个\",{\"1\":{\"216\":1}}],[\"当\",{\"1\":{\"209\":1,\"322\":2}}],[\"当其他线程的运行使得这个条件满足时\",{\"1\":{\"154\":1}}],[\"当其他线程去读取时\",{\"1\":{\"115\":1}}],[\"当所有非守护线程结束时\",{\"1\":{\"144\":1}}],[\"当执行操作时\",{\"1\":{\"126\":1}}],[\"当然\",{\"1\":{\"404\":1,\"405\":1}}],[\"当然这里的主流板块\",{\"1\":{\"403\":1}}],[\"当然这一条一般在题材的收集解读时\",{\"1\":{\"398\":1}}],[\"当然更要听\",{\"1\":{\"390\":1}}],[\"当然他走出来就错过了\",{\"1\":{\"244\":1}}],[\"当然收烂板\",{\"1\":{\"244\":1}}],[\"当然jmm是通过happens\",{\"1\":{\"116\":1}}],[\"当然虚拟机栈也可以动态的扩展\",{\"1\":{\"66\":1,\"68\":1}}],[\"当有其他线程需要读取时\",{\"1\":{\"115\":1}}],[\"当一个清醒的博傻者\",{\"1\":{\"398\":1}}],[\"当一个概念板块成为了主线之后总会经历分歧和一致相互转换的过程\",{\"1\":{\"244\":1}}],[\"当一个共享变量被volatile修饰时\",{\"1\":{\"115\":1}}],[\"当一个对象到gc\",{\"1\":{\"76\":1}}],[\"当线程1执行\",{\"1\":{\"106\":1}}],[\"当线程申请的大于虚拟机栈的深度就会抛出\",{\"1\":{\"66\":1,\"68\":1}}],[\"当cms进行gc失败时\",{\"1\":{\"78\":1}}],[\"当程序在以后的运行过程中需要分配较大对象时无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作\",{\"1\":{\"77\":1}}],[\"当进行新增时\",{\"1\":{\"42\":1}}],[\"当集合元素数目大于\",{\"1\":{\"41\":1}}],[\"当树的元素数量小于\",{\"1\":{\"41\":1}}],[\"当前市场情绪怎么样\",{\"1\":{\"398\":1}}],[\"当前对象的属性也进行复制\",{\"1\":{\"217\":1}}],[\"当前对象的属性还是引用之前对象的值\",{\"1\":{\"217\":1}}],[\"当前对象需要实现\",{\"1\":{\"14\":1}}],[\"当前线程将自己修改的数据成功写入\",{\"1\":{\"158\":1}}],[\"当前单列数据集合中移出指定的数据集合\",{\"1\":{\"14\":1}}],[\"当前单列数据集合是否为空\",{\"1\":{\"14\":1}}],[\"当前单列数据合计是否存在该数据对象\",{\"1\":{\"14\":1}}],[\"6849794470754667710l\",{\"1\":{\"85\":1}}],[\"6中才开始提供\",{\"1\":{\"78\":1}}],[\"64\",{\"1\":{\"41\":3,\"279\":1}}],[\"6\",{\"0\":{\"206\":1,\"320\":1,\"395\":1,\"399\":1},\"1\":{\"41\":2,\"60\":1,\"95\":1,\"332\":1,\"333\":1,\"335\":1,\"398\":4,\"404\":1}}],[\"6和1\",{\"1\":{\"12\":1}}],[\"即资金往哪儿去\",{\"1\":{\"406\":1}}],[\"即时空各有一远\",{\"1\":{\"398\":1}}],[\"即时编译后的代码等数据\",{\"1\":{\"66\":1,\"70\":1}}],[\"即都是从事\",{\"1\":{\"394\":1}}],[\"即只会有一个子进程去连接\",{\"1\":{\"318\":1}}],[\"即内容和文件建立关联关系\",{\"1\":{\"315\":1}}],[\"即使低于也会迅速超过\",{\"1\":{\"439\":1}}],[\"即使损坏仍然可以恢复\",{\"1\":{\"336\":1}}],[\"即使节点损坏\",{\"1\":{\"336\":1}}],[\"即使无法做到强一致性\",{\"1\":{\"324\":1}}],[\"即使系统故障也不会丢失\",{\"1\":{\"324\":1}}],[\"即使有索引索引也会很慢\",{\"1\":{\"314\":1}}],[\"即使用时通过中介使用\",{\"1\":{\"1\":1}}],[\"即禁止final域写重排序到构造方法之外\",{\"1\":{\"177\":1}}],[\"即能看下arrays\",{\"1\":{\"176\":1}}],[\"即这个类是不能有子类的\",{\"1\":{\"166\":1}}],[\"即是否有着合法的操作数\",{\"1\":{\"62\":1}}],[\"即链表元素个数大于\",{\"1\":{\"41\":1}}],[\"883900\",{\"1\":{\"406\":1}}],[\"880863\",{\"1\":{\"406\":1}}],[\"880005\",{\"1\":{\"250\":1}}],[\"8u141\",{\"1\":{\"286\":2}}],[\"8443\",{\"1\":{\"269\":1,\"278\":1}}],[\"8038\",{\"1\":{\"291\":6}}],[\"80\",{\"1\":{\"269\":2,\"289\":5}}],[\"8080\",{\"1\":{\"269\":1,\"296\":1}}],[\"8月2日\",{\"1\":{\"244\":1}}],[\"8\",{\"0\":{\"208\":1,\"330\":1},\"1\":{\"41\":3,\"71\":1,\"203\":2,\"291\":1,\"398\":1}}],[\"8的时候\",{\"1\":{\"12\":1}}],[\"72\",{\"1\":{\"463\":1}}],[\"70\",{\"1\":{\"438\":1}}],[\"7层负载均衡\",{\"1\":{\"319\":1}}],[\"7\",{\"0\":{\"207\":1,\"326\":1,\"396\":1,\"401\":1},\"1\":{\"332\":1,\"333\":1,\"335\":1,\"398\":2}}],[\"75\",{\"1\":{\"41\":1}}],[\"75f\",{\"1\":{\"41\":1}}],[\"7的时候\",{\"1\":{\"12\":1}}],[\"2pc\",{\"1\":{\"336\":1}}],[\"2双向复制会导致数据错误\",{\"1\":{\"335\":1}}],[\"2fwww\",{\"1\":{\"286\":1}}],[\"2f\",{\"1\":{\"286\":2}}],[\"29\",{\"0\":{\"229\":1}}],[\"28\",{\"0\":{\"228\":1,\"442\":1}}],[\"27\",{\"0\":{\"227\":1,\"435\":1}}],[\"26\",{\"0\":{\"226\":1,\"428\":1}}],[\"250\",{\"1\":{\"291\":9}}],[\"25\",{\"0\":{\"225\":1,\"250\":1,\"421\":1},\"1\":{\"281\":1}}],[\"24小时资讯\",{\"1\":{\"402\":1}}],[\"240\",{\"1\":{\"278\":1,\"289\":2,\"291\":2}}],[\"24\",{\"0\":{\"224\":1}}],[\"23\",{\"0\":{\"223\":1}}],[\"22\",{\"0\":{\"222\":1},\"1\":{\"278\":1,\"289\":2,\"291\":11}}],[\"21\",{\"0\":{\"221\":1,\"414\":1}}],[\"2019\",{\"0\":{\"467\":1}}],[\"2019年以来\",{\"1\":{\"398\":1}}],[\"2018\",{\"0\":{\"409\":1,\"414\":1,\"421\":1,\"428\":1,\"435\":1,\"442\":1,\"452\":1,\"460\":1}}],[\"20\",{\"0\":{\"220\":1,\"382\":1}}],[\"2\",{\"0\":{\"86\":1,\"202\":1,\"237\":1,\"244\":1,\"264\":1,\"268\":1,\"272\":1,\"296\":1,\"304\":1,\"389\":1,\"391\":1,\"403\":1},\"1\":{\"41\":2,\"60\":2,\"62\":1,\"71\":1,\"85\":1,\"108\":1,\"203\":2,\"244\":5,\"279\":1,\"280\":3,\"289\":1,\"291\":1,\"315\":1,\"318\":3,\"328\":1,\"332\":1,\"333\":1,\"335\":1,\"336\":3,\"340\":1,\"342\":3,\"344\":3,\"380\":1,\"381\":1,\"395\":1,\"398\":10,\"400\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":1}}],[\"3pc\",{\"1\":{\"336\":1}}],[\"3s\",{\"1\":{\"328\":1,\"334\":1}}],[\"3~5\",{\"1\":{\"310\":1}}],[\"3a\",{\"1\":{\"286\":1}}],[\"3到8只是给大家一个参考区间\",{\"1\":{\"244\":1}}],[\"3到8\",{\"1\":{\"244\":1}}],[\"39\",{\"0\":{\"239\":1}}],[\"386\",{\"1\":{\"276\":1}}],[\"38\",{\"0\":{\"238\":1}}],[\"37\",{\"0\":{\"237\":1}}],[\"360\",{\"1\":{\"311\":1}}],[\"36\",{\"0\":{\"236\":1}}],[\"35\",{\"0\":{\"235\":1}}],[\"34\",{\"0\":{\"234\":1}}],[\"336fa29ff2bb4ef291e347e091f7f4a7\",{\"1\":{\"286\":1}}],[\"33\",{\"0\":{\"233\":1}}],[\"32\",{\"0\":{\"232\":1},\"1\":{\"449\":1}}],[\"3\",{\"0\":{\"93\":1,\"203\":1,\"220\":2,\"265\":1,\"273\":1,\"297\":1,\"308\":1,\"392\":1,\"397\":1,\"404\":1},\"1\":{\"60\":2,\"62\":1,\"71\":2,\"74\":1,\"108\":1,\"126\":1,\"244\":5,\"276\":6,\"279\":1,\"281\":2,\"286\":3,\"289\":1,\"296\":1,\"315\":1,\"318\":3,\"328\":1,\"332\":1,\"333\":1,\"335\":1,\"336\":3,\"340\":1,\"341\":1,\"342\":1,\"344\":1,\"380\":1,\"381\":1,\"398\":8,\"403\":1,\"404\":1,\"405\":1,\"406\":1}}],[\"31\",{\"0\":{\"231\":1},\"1\":{\"41\":1}}],[\"30\",{\"0\":{\"230\":1},\"1\":{\"41\":2,\"281\":1}}],[\"3以后\",{\"1\":{\"2\":1}}],[\"498\",{\"1\":{\"283\":1}}],[\"443\",{\"1\":{\"269\":2}}],[\"4我都愿意去看\",{\"1\":{\"244\":1}}],[\"404\",{\"1\":{\"476\":1}}],[\"40\",{\"0\":{\"240\":1}}],[\"4\",{\"0\":{\"101\":1,\"204\":1,\"274\":1,\"313\":1,\"393\":1,\"405\":1},\"1\":{\"41\":1,\"60\":1,\"62\":1,\"203\":3,\"244\":1,\"276\":6,\"315\":1,\"318\":3,\"328\":1,\"332\":1,\"333\":1,\"335\":1,\"336\":2,\"340\":1,\"341\":1,\"344\":1,\"398\":6,\"403\":1,\"404\":1}}],[\"例如超华科技是当时市场的龙头\",{\"1\":{\"398\":1}}],[\"例如手机技术\",{\"0\":{\"366\":1}}],[\"例如库存\",{\"1\":{\"335\":1}}],[\"例如报错或者自动重试\",{\"1\":{\"158\":1}}],[\"例如不依赖存储在堆上的数据和公用的系统资源\",{\"1\":{\"132\":1}}],[\"例如\",{\"1\":{\"41\":1,\"216\":1,\"244\":2,\"314\":1,\"318\":1,\"328\":1,\"342\":1,\"348\":2}}],[\"例如扩容规则\",{\"1\":{\"28\":1}}],[\"且日志被写入后即保持在可靠的存储设备上\",{\"1\":{\"336\":1}}],[\"且节点之间可以进行网络通信\",{\"1\":{\"336\":1}}],[\"且有明显的差异\",{\"1\":{\"310\":1}}],[\"且看到板块明显修复\",{\"1\":{\"244\":1}}],[\"且返回newvalue\",{\"1\":{\"40\":1}}],[\"且添加到集合中\",{\"1\":{\"40\":1}}],[\"到第二天总是没有赚到钱\",{\"1\":{\"403\":1}}],[\"到了10月15日天顺股份开盘就下杀\",{\"1\":{\"403\":1}}],[\"到8\",{\"1\":{\"244\":2}}],[\"到\",{\"1\":{\"40\":1}}],[\"f处再次起涨时\",{\"1\":{\"398\":1}}],[\"ftp\",{\"1\":{\"348\":2}}],[\"fmea\",{\"0\":{\"326\":1,\"327\":1,\"328\":1,\"329\":1},\"1\":{\"327\":1}}],[\"f5实现集群级别的负载均衡\",{\"1\":{\"319\":1}}],[\"f5和a10\",{\"1\":{\"319\":1}}],[\"fence\",{\"1\":{\"108\":1}}],[\"function\",{\"1\":{\"90\":1}}],[\"function<\",{\"1\":{\"40\":1}}],[\"f\",{\"1\":{\"80\":1,\"291\":4}}],[\"follows\",{\"1\":{\"99\":1}}],[\"following\",{\"1\":{\"98\":1}}],[\"fork\",{\"1\":{\"318\":3}}],[\"for\",{\"1\":{\"85\":3,\"96\":1,\"99\":1}}],[\"format=b\",{\"1\":{\"80\":1}}],[\"forname\",{\"1\":{\"60\":4,\"229\":2}}],[\"found\",{\"1\":{\"60\":1,\"476\":1}}],[\"failure\",{\"1\":{\"327\":1}}],[\"fail\",{\"0\":{\"234\":1},\"1\":{\"283\":1}}],[\"fast\",{\"0\":{\"234\":1}}],[\"faster\",{\"1\":{\"92\":1}}],[\"fastthread\",{\"1\":{\"81\":1}}],[\"false\",{\"1\":{\"60\":3,\"95\":1,\"97\":3,\"98\":1,\"100\":4,\"203\":1,\"220\":1,\"281\":1}}],[\"factor\",{\"1\":{\"41\":1}}],[\"from\",{\"1\":{\"60\":5,\"71\":1,\"85\":1,\"92\":1,\"96\":1,\"281\":1,\"291\":1}}],[\"float\",{\"1\":{\"41\":1,\"203\":2}}],[\"firewalld\",{\"1\":{\"263\":2}}],[\"first\",{\"1\":{\"25\":1,\"96\":2}}],[\"field\",{\"1\":{\"229\":1}}],[\"fixedthreadpool\",{\"1\":{\"143\":2}}],[\"finally\",{\"0\":{\"222\":2},\"1\":{\"222\":2}}],[\"final的实现原理\",{\"0\":{\"178\":1}}],[\"final域读\",{\"1\":{\"177\":1}}],[\"final域写\",{\"1\":{\"177\":1}}],[\"final域写针对编译器和处理器重排序增加了这样的约束\",{\"1\":{\"175\":1}}],[\"final域为引用类型\",{\"0\":{\"174\":1}}],[\"final域为基本类型\",{\"0\":{\"171\":1}}],[\"final域重排序规则\",{\"0\":{\"170\":1}}],[\"final方法是可以被重载的\",{\"1\":{\"167\":1}}],[\"final类中的所有方法都隐式为final\",{\"1\":{\"166\":1}}],[\"final基础使用\",{\"0\":{\"165\":1}}],[\"finalize\",{\"1\":{\"113\":1,\"218\":1,\"231\":1}}],[\"final\",{\"0\":{\"112\":1,\"164\":1,\"218\":1},\"1\":{\"85\":3,\"109\":1,\"209\":1,\"218\":6}}],[\"findloadedclass\",{\"1\":{\"60\":1}}],[\"findloadedclass0\",{\"1\":{\"60\":1}}],[\"findclassinternal\",{\"1\":{\"60\":4}}],[\"findclass\",{\"1\":{\"60\":4}}],[\"file\",{\"1\":{\"283\":13}}],[\"file=dumpfile\",{\"1\":{\"80\":1}}],[\"filter\",{\"1\":{\"14\":2,\"60\":1,\"281\":1}}],[\"获利盘\",{\"1\":{\"398\":1}}],[\"获得共享锁的线程只能读数据\",{\"1\":{\"163\":1}}],[\"获得排它锁的线程即能读数据又能修改数据\",{\"1\":{\"163\":1}}],[\"获得字符串的第几个字符\",{\"0\":{\"96\":1}}],[\"获得元素中的所有\",{\"1\":{\"40\":1}}],[\"获取的时候先通过\",{\"1\":{\"216\":1}}],[\"获取不到才会到等待队列的队尾等待\",{\"1\":{\"161\":1}}],[\"获取新的\",{\"1\":{\"40\":1}}],[\"获取\",{\"0\":{\"80\":1},\"1\":{\"40\":2,\"229\":1}}],[\"获取所有的\",{\"1\":{\"40\":1}}],[\"获取元素的\",{\"1\":{\"40\":1}}],[\"获取对象的字符组\",{\"1\":{\"100\":1}}],[\"获取对象的\",{\"1\":{\"40\":1}}],[\"获取单列数据集合中存储数据的数量\",{\"1\":{\"14\":1}}],[\"移出\",{\"1\":{\"40\":1}}],[\"移出通过\",{\"1\":{\"14\":1}}],[\"元素数目\",{\"1\":{\"41\":1}}],[\"元素\",{\"1\":{\"40\":1}}],[\"元素个数是否是0\",{\"1\":{\"40\":1}}],[\"添加源码管理并指定分支\",{\"1\":{\"291\":1}}],[\"添加节点\",{\"1\":{\"271\":1}}],[\"添加集群\",{\"1\":{\"271\":1}}],[\"添加集合中的所有元素\",{\"1\":{\"40\":1}}],[\"添加docker源\",{\"1\":{\"266\":1}}],[\"添加\",{\"0\":{\"277\":1},\"1\":{\"40\":1,\"291\":1}}],[\"添加元素时先让modcount\",{\"1\":{\"19\":1}}],[\"kdj的j\",{\"1\":{\"463\":1,\"470\":1}}],[\"kdj的j91\",{\"1\":{\"455\":1}}],[\"kdj的j在76\",{\"1\":{\"448\":1}}],[\"kdj的j在69\",{\"1\":{\"445\":1}}],[\"kdj的j为99\",{\"1\":{\"438\":1}}],[\"k线\",{\"0\":{\"412\":1,\"417\":1,\"424\":1,\"431\":1,\"438\":1,\"445\":1,\"448\":1,\"455\":1,\"463\":1,\"470\":1}}],[\"k线不松散杂乱\",{\"1\":{\"398\":1}}],[\"k线形态简洁优美\",{\"1\":{\"398\":1}}],[\"k线形态的表现\",{\"1\":{\"398\":1}}],[\"k线形态\",{\"1\":{\"398\":1,\"406\":1}}],[\"k线形态不错\",{\"1\":{\"398\":1}}],[\"k线破位了\",{\"1\":{\"398\":1}}],[\"kind\",{\"1\":{\"289\":3,\"291\":3,\"297\":3}}],[\"kubectl\",{\"0\":{\"279\":1},\"1\":{\"279\":2,\"291\":4}}],[\"kubernetes\",{\"0\":{\"270\":1,\"289\":1,\"293\":1},\"1\":{\"261\":3,\"279\":4,\"294\":1,\"296\":1}}],[\"k8s\",{\"1\":{\"275\":3,\"281\":1}}],[\"kv\",{\"1\":{\"211\":2}}],[\"k++\",{\"1\":{\"99\":1}}],[\"k\",{\"1\":{\"40\":9,\"99\":7,\"315\":2}}],[\"keyset\",{\"1\":{\"40\":1}}],[\"key\",{\"0\":{\"236\":2},\"1\":{\"40\":27,\"42\":3,\"211\":1,\"213\":1,\"230\":1,\"281\":2,\"283\":2,\"284\":1}}],[\"查看承接情况\",{\"1\":{\"441\":1}}],[\"查看亏钱是否因为j太高导致的\",{\"1\":{\"431\":1}}],[\"查看指定的命名空间和服务名称\",{\"1\":{\"293\":1}}],[\"查看\",{\"0\":{\"293\":1}}],[\"查看打包过程\",{\"0\":{\"292\":1}}],[\"查看节点\",{\"1\":{\"279\":1}}],[\"查看当前市场环境\",{\"1\":{\"250\":1}}],[\"查看元素数目\",{\"1\":{\"40\":1}}],[\"查找\",{\"1\":{\"216\":1}}],[\"查询元素在集合的下标索引\",{\"1\":{\"20\":1}}],[\"抽象了键值对数据集合的通用方法\",{\"1\":{\"40\":1}}],[\"自己有所思考后\",{\"1\":{\"406\":1}}],[\"自己比较自己肯定\",{\"1\":{\"98\":1}}],[\"自主可控\",{\"1\":{\"398\":1}}],[\"自我提升\",{\"0\":{\"397\":1}}],[\"自然炸板率就低\",{\"1\":{\"404\":1}}],[\"自然会出现没有溢价或者低开的情况\",{\"1\":{\"404\":1}}],[\"自然市场地位就比其他个股高\",{\"1\":{\"398\":1}}],[\"自然成为万众瞩目的焦点\",{\"1\":{\"398\":1}}],[\"自然下面就有成梯队排列的板块阵列\",{\"1\":{\"398\":1}}],[\"自然就有人气\",{\"1\":{\"398\":1}}],[\"自然就领跌\",{\"1\":{\"398\":1}}],[\"自然就保证了有序性\",{\"1\":{\"116\":1}}],[\"自然是比较保险啦\",{\"1\":{\"391\":1}}],[\"自理式\",{\"1\":{\"359\":1}}],[\"自动化部署\",{\"1\":{\"359\":1}}],[\"自动化测试\",{\"1\":{\"359\":1}}],[\"自动程度\",{\"1\":{\"334\":1}}],[\"自动装箱和拆箱\",{\"0\":{\"205\":1}}],[\"自恢复\",{\"1\":{\"328\":1}}],[\"自研系统\",{\"1\":{\"328\":1}}],[\"自旋等待的时间必须要有一定的限度\",{\"1\":{\"159\":1}}],[\"自旋等待的效果就会非常好\",{\"1\":{\"159\":1}}],[\"自旋等待虽然避免了线程切换的开销\",{\"1\":{\"159\":1}}],[\"自旋锁本身是有缺点的\",{\"1\":{\"159\":1}}],[\"自旋锁\",{\"0\":{\"159\":1},\"1\":{\"159\":1}}],[\"自增的属性值设置为\",{\"1\":{\"29\":1}}],[\"自java\",{\"1\":{\"2\":1}}],[\"然后还要把相关的数据进行记录\",{\"1\":{\"406\":1}}],[\"然后填入类似下图的电子表格\",{\"1\":{\"406\":1}}],[\"然后填写创建的配置\",{\"1\":{\"271\":1}}],[\"然后多问几个为什么\",{\"1\":{\"405\":1}}],[\"然后以盘面为准\",{\"1\":{\"398\":1}}],[\"然后晋升为某个级别的龙头\",{\"1\":{\"398\":1}}],[\"然后拉升股价至涨停\",{\"1\":{\"386\":1}}],[\"然后添加新的主机为从机\",{\"1\":{\"341\":1}}],[\"然后根据状态进行确定各方是否主备情况\",{\"1\":{\"334\":1}}],[\"然后将连接交给某个线程处理\",{\"1\":{\"318\":1}}],[\"然后复制执行命令在相应的主机执行命令即可\",{\"1\":{\"272\":1,\"273\":1}}],[\"然后次日下跌\",{\"1\":{\"244\":1}}],[\"然后每次迭代都会进行比较\",{\"1\":{\"234\":1}}],[\"然后重写\",{\"1\":{\"231\":1}}],[\"然后在使用的时候一一调用则可\",{\"1\":{\"202\":1}}],[\"然后用按说把这些步骤一步一步的实现\",{\"1\":{\"202\":1}}],[\"然后赋值为10\",{\"1\":{\"106\":1}}],[\"然后再循环比较每个字符忽略大小写比较\",{\"1\":{\"98\":1}}],[\"然后再把已使用过的内存空间一次清理掉\",{\"1\":{\"77\":1}}],[\"然后判断是否为空\",{\"1\":{\"98\":1}}],[\"然后直接清理掉端边界以外的内存\",{\"1\":{\"77\":1}}],[\"然后\",{\"1\":{\"25\":1}}],[\"然后通过system\",{\"1\":{\"20\":1}}],[\"赋值\",{\"1\":{\"25\":1}}],[\"刚创建时\",{\"1\":{\"25\":1}}],[\"该主机崩溃导致的书记丢失\",{\"1\":{\"335\":1}}],[\"该弱不弱他就是强\",{\"1\":{\"244\":1}}],[\"该对象的final域全部已经初始化过\",{\"1\":{\"177\":1}}],[\"该方法只是对线程调度器的一个建议\",{\"1\":{\"146\":1}}],[\"该方法返回后\",{\"1\":{\"14\":1}}],[\"该下标的数据是否是树\",{\"1\":{\"42\":1}}],[\"该元素在\",{\"1\":{\"42\":1}}],[\"该类的构造方法并未进行特殊的处理\",{\"1\":{\"23\":1}}],[\"数字货币\",{\"1\":{\"398\":1}}],[\"数字孪生\",{\"1\":{\"398\":1}}],[\"数月之久\",{\"1\":{\"395\":1}}],[\"数据平台\",{\"1\":{\"376\":1}}],[\"数据有路由规则\",{\"1\":{\"344\":1}}],[\"数据同步\",{\"1\":{\"344\":1}}],[\"数据统一复制到总的备份中心\",{\"1\":{\"337\":1}}],[\"数据量越大分区规则越复杂\",{\"1\":{\"337\":1}}],[\"数据量\",{\"1\":{\"337\":1,\"344\":1}}],[\"数据量达到千万以上\",{\"1\":{\"314\":1}}],[\"数据分类\",{\"1\":{\"344\":1}}],[\"数据分区\",{\"0\":{\"337\":1}}],[\"数据分析\",{\"0\":{\"81\":1}}],[\"数据集群\",{\"0\":{\"336\":1}}],[\"数据冲突\",{\"1\":{\"334\":1}}],[\"数据如何复制\",{\"1\":{\"331\":1}}],[\"数据库响应\",{\"1\":{\"328\":1}}],[\"数据库支持多个并发事务同时对数据读取和修改的能力\",{\"1\":{\"324\":1}}],[\"数据库的完整性没有被破坏\",{\"1\":{\"324\":1}}],[\"数据库完整性理论\",{\"1\":{\"324\":1}}],[\"数据库认证\",{\"1\":{\"281\":1}}],[\"数据类型代替的\",{\"1\":{\"203\":1}}],[\"数据\",{\"0\":{\"80\":1}}],[\"数据长度也是通过属性进行获取的\",{\"1\":{\"22\":1}}],[\"数组不可以自动扩容\",{\"1\":{\"233\":1}}],[\"数组中是\",{\"1\":{\"203\":1}}],[\"数组则会被编译成\",{\"1\":{\"203\":1}}],[\"数组\",{\"1\":{\"15\":1,\"203\":1}}],[\"数组类型为参数类型\",{\"1\":{\"14\":1}}],[\"扩展容器\",{\"1\":{\"337\":1}}],[\"扩展麻烦\",{\"1\":{\"337\":1}}],[\"扩展能力差\",{\"1\":{\"319\":1}}],[\"扩展性差\",{\"1\":{\"319\":1}}],[\"扩展不方便\",{\"1\":{\"315\":1}}],[\"扩展方法\",{\"0\":{\"21\":1,\"27\":1,\"33\":1}}],[\"扩容时下次数量\",{\"1\":{\"41\":1}}],[\"扩容代码如下\",{\"1\":{\"19\":1}}],[\"批量删除时\",{\"1\":{\"20\":1}}],[\"单从这一点就可以看出\",{\"1\":{\"398\":1}}],[\"单点故障\",{\"1\":{\"336\":1}}],[\"单线程\",{\"1\":{\"318\":1}}],[\"单进程\",{\"1\":{\"318\":1}}],[\"单reactor\",{\"1\":{\"318\":2}}],[\"单服务器高性能\",{\"0\":{\"318\":1}}],[\"单机复杂度\",{\"1\":{\"303\":1}}],[\"单子也不断增大怼上去\",{\"1\":{\"244\":1}}],[\"单纯连板接力\",{\"1\":{\"244\":1}}],[\"单独使用时是\",{\"1\":{\"203\":1}}],[\"单次读\",{\"0\":{\"183\":1}}],[\"单位为毫秒\",{\"1\":{\"145\":1}}],[\"单一线程原则\",{\"1\":{\"113\":1,\"218\":1}}],[\"单个删除时\",{\"1\":{\"20\":1}}],[\"单列数据集合添加数据\",{\"1\":{\"14\":1}}],[\"单列数据集合转数组\",{\"1\":{\"14\":1}}],[\"单列数据结合转数组\",{\"1\":{\"14\":1}}],[\"删除数据是开销较大\",{\"1\":{\"210\":1}}],[\"删除则是查询到对应的节点后\",{\"1\":{\"26\":1}}],[\"删除\",{\"0\":{\"20\":1,\"26\":1,\"32\":1},\"1\":{\"40\":1}}],[\"删除单列数据集合中的该数据\",{\"1\":{\"14\":1}}],[\"的推演分析\",{\"1\":{\"406\":1}}],[\"的习惯\",{\"1\":{\"406\":1}}],[\"的智力游戏\",{\"1\":{\"406\":1}}],[\"的感觉\",{\"1\":{\"406\":1}}],[\"的复盘\",{\"1\":{\"406\":1}}],[\"的故事\",{\"1\":{\"406\":1}}],[\"的向下牵引力\",{\"1\":{\"403\":1}}],[\"的向上牵引力\",{\"1\":{\"403\":1}}],[\"的三层含义\",{\"1\":{\"400\":1}}],[\"的哲理探源\",{\"0\":{\"400\":1}}],[\"的心理\",{\"1\":{\"398\":3}}],[\"的一种表现\",{\"1\":{\"398\":1}}],[\"的一部分\",{\"1\":{\"154\":1}}],[\"的结果\",{\"1\":{\"398\":1}}],[\"的股林一派\",{\"1\":{\"398\":1}}],[\"的个股\",{\"1\":{\"387\":1}}],[\"的文件上下载\",{\"1\":{\"348\":1}}],[\"的最终一致性不谋而合\",{\"1\":{\"325\":1}}],[\"的最大值为\",{\"1\":{\"41\":1}}],[\"的最大值\",{\"1\":{\"19\":1}}],[\"的选择\",{\"1\":{\"323\":1}}],[\"的关键字\",{\"1\":{\"314\":1}}],[\"的能力\",{\"1\":{\"303\":1}}],[\"的内容\",{\"1\":{\"291\":2}}],[\"的位置直接执行\",{\"1\":{\"288\":1}}],[\"的可以添加环境\",{\"1\":{\"288\":1}}],[\"的异同\",{\"0\":{\"238\":1}}],[\"的长度为什么是\",{\"0\":{\"237\":1}}],[\"的安全检查来提升反射速度\",{\"1\":{\"229\":1}}],[\"的用法\",{\"0\":{\"219\":1}}],[\"的四种引用\",{\"0\":{\"213\":1}}],[\"的对象\",{\"1\":{\"204\":1}}],[\"的对象一定是线程安全的\",{\"1\":{\"118\":1}}],[\"的实现原理\",{\"0\":{\"186\":1}}],[\"的静态方法\",{\"1\":{\"155\":1}}],[\"的方法\",{\"1\":{\"155\":1}}],[\"的区别\",{\"0\":{\"155\":1,\"210\":1,\"211\":1,\"228\":1}}],[\"的中断操作\",{\"0\":{\"150\":1}}],[\"的中间桥梁\",{\"1\":{\"70\":1}}],[\"的操作\",{\"1\":{\"149\":1}}],[\"的调用声明了当前线程已经完成了生命周期中最重要的部分\",{\"1\":{\"146\":1}}],[\"的处理方式\",{\"1\":{\"131\":1}}],[\"的处理器重排序规则会要求\",{\"1\":{\"108\":1}}],[\"的正确性\",{\"1\":{\"128\":1}}],[\"的值更新为\",{\"1\":{\"126\":1}}],[\"的值等于\",{\"1\":{\"126\":1}}],[\"的值为\",{\"1\":{\"40\":2}}],[\"的存在\",{\"1\":{\"107\":1}}],[\"的高度\",{\"1\":{\"398\":1}}],[\"的高性能\",{\"1\":{\"104\":1}}],[\"的高效稳定运行\",{\"1\":{\"70\":1}}],[\"的空间\",{\"1\":{\"77\":1}}],[\"的默认加载器就是\",{\"1\":{\"60\":1}}],[\"的类\",{\"1\":{\"60\":1}}],[\"的机制\",{\"1\":{\"59\":1}}],[\"的编译器重排序规则会禁止特定类型的编译器重排序\",{\"1\":{\"108\":1}}],[\"的编译\",{\"0\":{\"55\":1}}],[\"的主要内容如下图\",{\"1\":{\"54\":1}}],[\"的缩写\",{\"1\":{\"54\":1}}],[\"的哈希值\",{\"1\":{\"42\":1}}],[\"的时候会提示不可用\",{\"1\":{\"322\":1}}],[\"的时候才可能树化\",{\"1\":{\"41\":1}}],[\"的时候\",{\"1\":{\"41\":1}}],[\"的属性\",{\"1\":{\"41\":1}}],[\"的元素\",{\"1\":{\"40\":1}}],[\"的\",{\"0\":{\"237\":1},\"1\":{\"40\":1,\"41\":2,\"143\":1,\"150\":1,\"213\":1,\"229\":1,\"348\":1}}],[\"的不重复集合\",{\"1\":{\"40\":1}}],[\"的子类\",{\"1\":{\"22\":1}}],[\"的所有功能且添加了部分自己独有的一些功能\",{\"1\":{\"16\":1}}],[\"倍之后是否超出\",{\"1\":{\"19\":1}}],[\"倍扩容\",{\"1\":{\"19\":1}}],[\"时刻了解市场的情绪变化状态\",{\"1\":{\"404\":1}}],[\"时机\",{\"0\":{\"400\":1}}],[\"时就要考虑出局了\",{\"1\":{\"398\":1}}],[\"时的准则之一\",{\"1\":{\"303\":1}}],[\"时间久了\",{\"1\":{\"406\":1}}],[\"时间一天天过去\",{\"1\":{\"405\":1}}],[\"时间是最好的多空转换器\",{\"1\":{\"398\":1}}],[\"时间\",{\"1\":{\"225\":1,\"398\":1}}],[\"时间结束\",{\"1\":{\"138\":3}}],[\"时间片\",{\"1\":{\"69\":1,\"135\":1,\"137\":1}}],[\"时\",{\"1\":{\"19\":1,\"41\":1,\"42\":1}}],[\"5次呢\",{\"1\":{\"398\":1}}],[\"5次\",{\"1\":{\"398\":1}}],[\"5g\",{\"1\":{\"398\":1}}],[\"596udi\",{\"1\":{\"243\":1}}],[\"5\",{\"0\":{\"205\":1,\"275\":1,\"317\":1,\"394\":1,\"398\":1,\"406\":1},\"1\":{\"19\":3,\"60\":1,\"92\":1,\"244\":1,\"280\":2,\"281\":1,\"286\":2,\"332\":1,\"333\":1,\"335\":1,\"398\":4,\"404\":1}}],[\"<sample\",{\"1\":{\"281\":1}}],[\"<pre>\",{\"1\":{\"99\":2,\"100\":1}}],[\"<p>if\",{\"1\":{\"96\":1}}],[\"<p>\",{\"1\":{\"90\":1,\"92\":1,\"98\":1,\"99\":1}}],[\"<blockquote>\",{\"1\":{\"99\":2}}],[\"<i>k<\",{\"1\":{\"99\":2}}],[\"<li>\",{\"1\":{\"98\":3}}],[\"<ul>\",{\"1\":{\"98\":1}}],[\"<a\",{\"1\":{\"94\":1,\"96\":1}}],[\"<<eof\",{\"1\":{\"279\":1}}],[\"<<\",{\"1\":{\"41\":2,\"268\":1}}],[\"<\",{\"1\":{\"19\":2,\"96\":1,\"98\":1,\"99\":3,\"100\":2}}],[\"<=\",{\"1\":{\"19\":2}}],[\"<t>\",{\"1\":{\"6\":1}}],[\"后者比前者的力度要大\",{\"1\":{\"403\":1}}],[\"后台系统重构\",{\"1\":{\"379\":1}}],[\"后台更新\",{\"1\":{\"316\":1}}],[\"后记\",{\"0\":{\"294\":1}}],[\"后必然会导致一些稀缺换手小盘股可能一笔就上板了\",{\"1\":{\"244\":1}}],[\"后排的高鸿和声迅此流开始掉队\",{\"1\":{\"244\":1}}],[\"后排跟随晋级上涨\",{\"1\":{\"244\":1}}],[\"后排掉队的情况\",{\"1\":{\"244\":1}}],[\"后来补涨的赛象科技\",{\"1\":{\"398\":1}}],[\"后来又被改回为\",{\"1\":{\"128\":1}}],[\"后来这项技术被用到了spring的很多地方\",{\"1\":{\"2\":1}}],[\"后续说连板不做十点之后的\",{\"1\":{\"471\":1}}],[\"后续规划\",{\"1\":{\"328\":1}}],[\"后续各位按照自己的交易系统继续补充\",{\"1\":{\"244\":1}}],[\"后续大家都炸板\",{\"1\":{\"244\":1}}],[\"后续分时双底\",{\"1\":{\"244\":1}}],[\"后续高阶补充\",{\"1\":{\"244\":1}}],[\"后续的预期会提高\",{\"1\":{\"244\":1}}],[\"后续补充一点\",{\"1\":{\"244\":1}}],[\"后续创建则直接在先缓存\",{\"1\":{\"25\":1}}],[\"后续扩容\",{\"1\":{\"19\":1}}],[\"后续移出时会使用\",{\"1\":{\"19\":1}}],[\"加速\",{\"1\":{\"268\":1,\"398\":1}}],[\"加载的类信息存放于一块称为方法区的内存空间\",{\"1\":{\"65\":1}}],[\"加载不到同样也会委托给\",{\"1\":{\"60\":1}}],[\"加载流程\",{\"0\":{\"60\":1}}],[\"加载\",{\"0\":{\"57\":1}}],[\"加一\",{\"1\":{\"19\":1}}],[\"加锁\",{\"1\":{\"15\":1}}],[\"判断一个对象是都可以被回收的最后一步就是判断是否重写了此方法\",{\"1\":{\"231\":1}}],[\"判断开始位置和结束位置是否超出\",{\"1\":{\"100\":1}}],[\"判断字符串是否从某个字符串开始的\",{\"0\":{\"100\":1}}],[\"判断是否设置了delegate属性\",{\"1\":{\"60\":1}}],[\"判断若当前链表的数量大于默认树化的数目\",{\"1\":{\"42\":1}}],[\"判断集合中是否存在该元素是通过遍历集合的属性elementdata的数据\",{\"1\":{\"18\":1}}],[\"判断\",{\"0\":{\"18\":1,\"24\":1,\"30\":1},\"1\":{\"204\":1}}],[\"则说明短线接力情绪出现了很大问题\",{\"1\":{\"404\":1}}],[\"则说明短线资金的活跃程度很高\",{\"1\":{\"404\":1}}],[\"则体现出某些资金的意图\",{\"1\":{\"403\":1}}],[\"则股\",{\"0\":{\"398\":1}}],[\"则人工把原来的从机升为主机\",{\"1\":{\"341\":1}}],[\"则人工将备机升级为主机\",{\"1\":{\"340\":1}}],[\"则返回no消息给协调者\",{\"1\":{\"336\":1}}],[\"则reactor会调用连接对象的handler\",{\"1\":{\"318\":1}}],[\"则nginx\",{\"1\":{\"281\":1}}],[\"则可能导致无法做安装节点\",{\"1\":{\"275\":1}}],[\"则叫分歧\",{\"1\":{\"244\":1}}],[\"则其他线程只能对a再加共享锁\",{\"1\":{\"163\":1}}],[\"则其他线程不能再对a加任何类型的锁\",{\"1\":{\"163\":1}}],[\"则根据不同的实现方式执行不同的操作\",{\"1\":{\"158\":1}}],[\"则相当于调用每个线程的\",{\"1\":{\"150\":1}}],[\"则默认比较内存地址\",{\"1\":{\"97\":1}}],[\"则新生代默认使用parnew\",{\"1\":{\"78\":1}}],[\"则证明此对象是不可用的\",{\"1\":{\"76\":1}}],[\"则由acceptor处理\",{\"1\":{\"318\":1}}],[\"则由\",{\"1\":{\"56\":1}}],[\"则执行\",{\"1\":{\"42\":1}}],[\"则链接在链表后\",{\"1\":{\"42\":1}}],[\"则修改集合中key\",{\"1\":{\"40\":1}}],[\"则传入\",{\"1\":{\"40\":1}}],[\"则通过链表进行链接\",{\"1\":{\"216\":1}}],[\"则通过\",{\"1\":{\"40\":1}}],[\"则重新赋值\",{\"1\":{\"40\":1}}],[\"则进行添加\",{\"1\":{\"40\":1}}],[\"则直接调用的addall\",{\"1\":{\"23\":1}}],[\"则需要直接读取主机\",{\"1\":{\"333\":1}}],[\"则需要判断扩容\",{\"1\":{\"19\":1}}],[\"则需要进行扩容\",{\"1\":{\"19\":1}}],[\"则第一次扩容容量会变更为\",{\"1\":{\"19\":1}}],[\"则会直接\",{\"1\":{\"222\":1}}],[\"则会进行默认为容量是\",{\"1\":{\"19\":1}}],[\"则会把元素赋值给this\",{\"1\":{\"17\":1}}],[\"则会给属性\",{\"1\":{\"17\":1}}],[\"则抛出异常\",{\"1\":{\"17\":1}}],[\"08\",{\"0\":{\"428\":1,\"452\":1}}],[\"09\",{\"0\":{\"409\":1,\"414\":1,\"421\":1,\"435\":1,\"442\":1,\"460\":1}}],[\"0d\",{\"1\":{\"203\":1}}],[\"0l\",{\"1\":{\"203\":1}}],[\"0f\",{\"1\":{\"203\":1}}],[\"0\",{\"0\":{\"220\":2},\"1\":{\"17\":5,\"19\":6,\"29\":1,\"41\":2,\"42\":1,\"60\":2,\"85\":2,\"87\":1,\"90\":1,\"95\":3,\"96\":4,\"97\":2,\"98\":2,\"99\":5,\"100\":3,\"176\":1,\"203\":5,\"281\":2,\"286\":2}}],[\"若封单大量减少则直接卖出\",{\"1\":{\"466\":1}}],[\"若承接可以则可等待0轴附近再去操作\",{\"1\":{\"434\":1}}],[\"若承接情况查直接卖出\",{\"1\":{\"434\":1}}],[\"若后面转强再次封板可再次买入\",{\"1\":{\"420\":1}}],[\"若出现网络问题则都不可用\",{\"1\":{\"344\":1}}],[\"若主机名重复\",{\"1\":{\"275\":1}}],[\"若类重写了\",{\"1\":{\"236\":1}}],[\"若不是树\",{\"1\":{\"42\":1}}],[\"若不为空\",{\"1\":{\"40\":1}}],[\"若不存在\",{\"1\":{\"40\":1}}],[\"若不存在在返回\",{\"1\":{\"40\":1}}],[\"若\",{\"1\":{\"40\":1,\"42\":1,\"216\":1,\"275\":1}}],[\"若存在延迟过大需要人工介入\",{\"1\":{\"332\":1}}],[\"若存在多个则通过\",{\"1\":{\"216\":1}}],[\"若存在哈希冲突则需要判断\",{\"1\":{\"42\":1}}],[\"若存在\",{\"1\":{\"40\":2}}],[\"若是均价线卖出则会导致未能获取后面收益\",{\"1\":{\"434\":1}}],[\"若是盘面赚钱效应良好\",{\"1\":{\"403\":1}}],[\"若是多种连接通道就会浪费资源\",{\"1\":{\"334\":1}}],[\"若是需要强一致性\",{\"1\":{\"333\":1}}],[\"若是无法抉择则可添加权重\",{\"1\":{\"311\":1}}],[\"若是无参的构造方法\",{\"1\":{\"19\":1}}],[\"若是返回\",{\"1\":{\"204\":1}}],[\"若是树则进行添加子节点\",{\"1\":{\"42\":1}}],[\"若是存在key\",{\"1\":{\"40\":1}}],[\"若是不能确定则看运行时\",{\"1\":{\"204\":1}}],[\"若是不存在\",{\"1\":{\"40\":1}}],[\"若是不一致则会抛出concurrentmodificationexception异常\",{\"1\":{\"20\":1}}],[\"若是会超过则取\",{\"1\":{\"19\":1}}],[\"若初始元素数量大于\",{\"1\":{\"17\":1}}],[\"若初始元素数量等于\",{\"1\":{\"17\":1}}],[\"若设置容量小于\",{\"1\":{\"17\":1}}],[\"若设置容量等于\",{\"1\":{\"17\":1}}],[\"若设置容量大于\",{\"1\":{\"17\":1}}],[\"若都存在则返回\",{\"1\":{\"14\":1}}],[\"会不会跌停的越来越多\",{\"1\":{\"404\":1}}],[\"会不会形成板块效应\",{\"1\":{\"398\":1}}],[\"会带动其同属性的股票上涨\",{\"1\":{\"403\":1}}],[\"会损失大量数据\",{\"1\":{\"332\":1}}],[\"会让用户感觉卡段\",{\"1\":{\"318\":1}}],[\"会影响性能\",{\"1\":{\"314\":1}}],[\"会引入更多的复杂度\",{\"1\":{\"314\":1}}],[\"会自增\",{\"1\":{\"234\":1}}],[\"会自动使用serial\",{\"1\":{\"78\":1}}],[\"会\",{\"1\":{\"222\":1}}],[\"会报错\",{\"1\":{\"221\":1}}],[\"会隐式自动转换\",{\"1\":{\"221\":1}}],[\"会尝试将其内联\",{\"1\":{\"218\":1}}],[\"会存在哈希冲突\",{\"1\":{\"216\":1}}],[\"会在指令序列中插入内存屏障来禁止特定类型的处理器重排序\",{\"1\":{\"190\":1}}],[\"会针对编译器制定\",{\"1\":{\"190\":1}}],[\"会允许编译器和处理器对指令序列进行重排序\",{\"1\":{\"190\":1}}],[\"会释放锁\",{\"1\":{\"155\":1}}],[\"会将当前线程挂起\",{\"1\":{\"153\":1}}],[\"会分别经历下面三种重排序\",{\"1\":{\"108\":1}}],[\"会先把i的初始值加载到cpu1的高速缓存中\",{\"1\":{\"106\":1}}],[\"会先进行判断\",{\"1\":{\"42\":1}}],[\"会先去取\",{\"1\":{\"42\":1}}],[\"会缓存modcount\",{\"1\":{\"20\":1}}],[\"会给属性\",{\"1\":{\"17\":3}}],[\"会失败\",{\"1\":{\"9\":1}}],[\"v存储\",{\"1\":{\"315\":1}}],[\"var\",{\"1\":{\"284\":1}}],[\"valid\",{\"1\":{\"90\":1,\"99\":1}}],[\"values\",{\"1\":{\"40\":1,\"99\":1}}],[\"value\",{\"0\":{\"89\":1},\"1\":{\"19\":2,\"40\":17,\"85\":3,\"87\":3,\"88\":2,\"89\":6,\"91\":1,\"92\":1,\"94\":1,\"95\":1,\"96\":9,\"97\":4,\"98\":3,\"99\":11,\"100\":4,\"230\":1}}],[\"v3\",{\"1\":{\"278\":1}}],[\"vs\",{\"0\":{\"141\":1,\"158\":1,\"159\":1,\"160\":3,\"161\":1,\"162\":1,\"163\":1}}],[\"volatile是无法保证这三个操作是具有原子性的\",{\"1\":{\"184\":1}}],[\"volatile不能保证完全的原子性\",{\"1\":{\"183\":1}}],[\"volatile关键字能有效的解决这个问题\",{\"1\":{\"182\":1}}],[\"volatile的作用详解\",{\"0\":{\"180\":1}}],[\"volatile\",{\"0\":{\"110\":1,\"179\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":3,\"190\":1},\"1\":{\"109\":1,\"113\":2,\"187\":1,\"190\":13,\"218\":2}}],[\"void\",{\"1\":{\"3\":3,\"6\":2}}],[\"v2\",{\"1\":{\"97\":2,\"99\":2,\"276\":6}}],[\"v1beta1\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"v1\",{\"1\":{\"97\":2,\"99\":2,\"280\":2,\"289\":2,\"291\":2,\"297\":2}}],[\"vi\",{\"1\":{\"285\":1}}],[\"vim\",{\"1\":{\"281\":1}}],[\"via\",{\"1\":{\"92\":1}}],[\"virtual\",{\"1\":{\"54\":1}}],[\"vmid\",{\"1\":{\"83\":3}}],[\"version\",{\"1\":{\"296\":1,\"297\":1}}],[\"verify\",{\"0\":{\"62\":1},\"1\":{\"281\":1}}],[\"vector\",{\"0\":{\"28\":1},\"1\":{\"15\":4,\"28\":1,\"121\":1}}],[\"v>>\",{\"1\":{\"41\":1}}],[\"v>\",{\"1\":{\"40\":3,\"41\":1}}],[\"v\",{\"1\":{\"40\":7,\"126\":3,\"315\":1}}],[\"索引查询慢\",{\"1\":{\"15\":1}}],[\"索引查询快\",{\"1\":{\"15\":1}}],[\"可扩展\",{\"1\":{\"363\":1}}],[\"可扩展模式\",{\"0\":{\"346\":1}}],[\"可扩展性等\",{\"1\":{\"311\":1}}],[\"可恢复性\",{\"1\":{\"344\":1}}],[\"可丢失性\",{\"1\":{\"344\":1}}],[\"可伸缩性\",{\"1\":{\"336\":1}}],[\"可从多个方面思考\",{\"1\":{\"328\":1}}],[\"可重复度\",{\"1\":{\"324\":1}}],[\"可重入锁的一个优点是可一定程度避免死锁\",{\"1\":{\"162\":1}}],[\"可重入锁又名递归锁\",{\"1\":{\"162\":1}}],[\"可重入锁\",{\"0\":{\"162\":1}}],[\"可重入代码有一些共同的特征\",{\"1\":{\"132\":1}}],[\"可通过人工从机升为主机\",{\"1\":{\"333\":1}}],[\"可通过人工备机升为主机\",{\"1\":{\"332\":1}}],[\"可通过\",{\"1\":{\"323\":1}}],[\"可通过数据库的同步\",{\"1\":{\"323\":1}}],[\"可通过设置默认值解决\",{\"1\":{\"316\":1}}],[\"可通过cookiecutter进行模板化生成\",{\"1\":{\"294\":1}}],[\"可根据业务进行定制\",{\"1\":{\"314\":1}}],[\"可用性\",{\"1\":{\"311\":1,\"321\":1}}],[\"可设置通知\",{\"1\":{\"288\":1}}],[\"可设置定时构建\",{\"1\":{\"288\":1}}],[\"可指定文件执行\",{\"1\":{\"288\":1}}],[\"可真正能把这个弱转强讲清楚的到目前还没有几个\",{\"1\":{\"242\":1}}],[\"可靠安全\",{\"1\":{\"201\":1}}],[\"可使用锁或者volatile\",{\"1\":{\"176\":1}}],[\"可运行\",{\"0\":{\"135\":1}}],[\"可见性实现\",{\"0\":{\"187\":1}}],[\"可见性\",{\"0\":{\"106\":1,\"115\":1}}],[\"可见性问题主要指一个线程修改了共享变量值\",{\"1\":{\"182\":1}}],[\"可见性问题\",{\"1\":{\"104\":1}}],[\"可见这会使得cpu的利用率尽可能的高\",{\"1\":{\"78\":1}}],[\"可看出\",{\"1\":{\"92\":1}}],[\"可能风险就来临\",{\"1\":{\"403\":1}}],[\"可能引导事物走向另外的方向\",{\"1\":{\"400\":2}}],[\"可能写入了a\",{\"1\":{\"335\":1}}],[\"可能出现偏差\",{\"1\":{\"334\":1}}],[\"可能出现某个线程异常导致整个进程的结束\",{\"1\":{\"318\":1}}],[\"可能存在数据只到主机还未复制到备机的情况\",{\"1\":{\"332\":1,\"333\":1}}],[\"可能一不小心出现死锁问题\",{\"1\":{\"318\":1}}],[\"可能第一次分歧点成功的可能性比较大\",{\"1\":{\"244\":1}}],[\"可能得\",{\"1\":{\"216\":1}}],[\"可能会一次性扫掉好几个档位\",{\"1\":{\"398\":1}}],[\"可能会较多\",{\"1\":{\"314\":1}}],[\"可能会导致无法访问\",{\"1\":{\"269\":1}}],[\"可能会抛出\",{\"1\":{\"145\":1}}],[\"可能会产生较长的停顿\",{\"1\":{\"78\":1}}],[\"可能正在运行\",{\"1\":{\"135\":1}}],[\"可能还包括字符串字而量和数字常量\",{\"1\":{\"65\":1}}],[\"可达性分析\",{\"1\":{\"76\":1}}],[\"可以了解其他股民朋友对题材的预期\",{\"1\":{\"402\":1}}],[\"可以详细了解各项政策\",{\"1\":{\"402\":1}}],[\"可以预防短线选手把旧闻当成新闻\",{\"1\":{\"402\":1}}],[\"可以把龙头想象成一个位置\",{\"1\":{\"398\":1}}],[\"可以有两个题材以上的板块\",{\"1\":{\"398\":1}}],[\"可以用level2看到涨停板上的排单\",{\"1\":{\"398\":1}}],[\"可以\",{\"1\":{\"395\":1}}],[\"可以说是算无遗策\",{\"1\":{\"391\":1}}],[\"可以说任务是通过线程驱动从而执行的\",{\"1\":{\"140\":1}}],[\"可以高效操作\",{\"1\":{\"363\":1}}],[\"可以一个人管理多个\",{\"1\":{\"359\":1}}],[\"可以一次写多个列\",{\"1\":{\"315\":1}}],[\"可以节省大量的调用\",{\"1\":{\"344\":1}}],[\"可以直接利用已有的设备\",{\"1\":{\"337\":1}}],[\"可以作为问题预演\",{\"1\":{\"328\":1}}],[\"可以同时满足\",{\"1\":{\"323\":1}}],[\"可以正常使用\",{\"1\":{\"322\":1}}],[\"可以是cpu负载来衡量\",{\"1\":{\"319\":1}}],[\"可以是线程结束任务之后自己结束\",{\"1\":{\"139\":1}}],[\"可以决定平均分配到各个服务器上\",{\"1\":{\"319\":1}}],[\"可以很容易存储复杂的数据结构\",{\"1\":{\"315\":1}}],[\"可以板上\",{\"1\":{\"244\":1}}],[\"可以半路\",{\"1\":{\"244\":1}}],[\"可以爆量但是一定不能缩量\",{\"1\":{\"244\":1}}],[\"可以抓到领涨主线\",{\"1\":{\"244\":1}}],[\"可以重复\",{\"1\":{\"230\":1}}],[\"可以重新安排语句的执行顺序\",{\"1\":{\"108\":1}}],[\"可以调用包装类的\",{\"1\":{\"229\":1}}],[\"可以抛出的异常有三种\",{\"1\":{\"223\":1}}],[\"可以设计出低耦合的系统\",{\"1\":{\"202\":1}}],[\"可以指定运行脚本等\",{\"1\":{\"288\":1}}],[\"可以指定等待的条件\",{\"1\":{\"156\":1}}],[\"可以指定gc线程数\",{\"1\":{\"78\":1}}],[\"可以在指定目录下载\",{\"1\":{\"280\":1}}],[\"可以在竞价就一笔\",{\"1\":{\"244\":1}}],[\"可以在\",{\"1\":{\"156\":1}}],[\"可以在代码执行的任何时刻中断它\",{\"1\":{\"132\":1}}],[\"可以切换给其它线程来执行\",{\"1\":{\"146\":1}}],[\"可以使用ip\",{\"1\":{\"281\":1}}],[\"可以使用任何类作为\",{\"0\":{\"236\":1}}],[\"可以使用\",{\"1\":{\"78\":1,\"131\":1,\"159\":1}}],[\"可以通过数据确定需要访问哪个去补偿\",{\"1\":{\"344\":1}}],[\"可以通过进行池化\",{\"1\":{\"318\":1}}],[\"可以通过volatile关键字来保证一定的\",{\"1\":{\"116\":1}}],[\"可以通过synchronized和lock来实现\",{\"1\":{\"114\":1}}],[\"可以通过\",{\"1\":{\"113\":1,\"218\":1}}],[\"可以通过参数来打开自适应调节策略\",{\"1\":{\"78\":1}}],[\"可以通过实现该接口定义横切逻辑\",{\"1\":{\"2\":1}}],[\"可以被\",{\"1\":{\"59\":1}}],[\"可以存在链表长度大于\",{\"1\":{\"41\":1}}],[\"可选操作\",{\"1\":{\"14\":1}}],[\"从指标上看\",{\"1\":{\"398\":1}}],[\"从一板到二板\",{\"1\":{\"398\":1}}],[\"从其他角度来分\",{\"1\":{\"398\":1}}],[\"从f10里看\",{\"1\":{\"398\":1}}],[\"从节点模拟客户端访问主节点\",{\"1\":{\"334\":1}}],[\"从节点同步主节点数据可能存在延迟\",{\"1\":{\"314\":1}}],[\"从机提供读\",{\"1\":{\"333\":1}}],[\"从零开始学架构\",{\"0\":{\"299\":1}}],[\"从原本应该弱势到意料之外的强\",{\"1\":{\"244\":1}}],[\"从弱转变到强都代表着股性的转变\",{\"1\":{\"244\":1}}],[\"从平盘震荡下杀\",{\"1\":{\"244\":1}}],[\"从\",{\"1\":{\"108\":1}}],[\"从内存读取到\",{\"1\":{\"107\":1}}],[\"从gc\",{\"1\":{\"76\":1}}],[\"从appclassloader中查找是否加载过此类\",{\"1\":{\"60\":1}}],[\"从本地缓存中查找是否加载过此类\",{\"1\":{\"60\":1}}],[\"从而对第二天的交易做出计划\",{\"1\":{\"405\":1}}],[\"从而知耻而后勇\",{\"1\":{\"398\":1}}],[\"从而形成自己独立的交易系统\",{\"1\":{\"398\":1}}],[\"从而抛出\",{\"1\":{\"234\":1}}],[\"从而导致不可预料的结果\",{\"1\":{\"181\":1}}],[\"从而保证该对象对所有线程可见时\",{\"1\":{\"177\":1}}],[\"从而保证了原子性\",{\"1\":{\"114\":1}}],[\"从而避免切换线程的开销\",{\"1\":{\"159\":1}}],[\"从而提前结束线程\",{\"1\":{\"149\":1}}],[\"从而提前结束该线程\",{\"1\":{\"148\":1}}],[\"从而实现同一应用运行在任何地方\",{\"1\":{\"261\":1}}],[\"从而实现自定义比较方法\",{\"1\":{\"97\":1}}],[\"从而实现该节点的删除\",{\"1\":{\"26\":1}}],[\"从而创建对象\",{\"1\":{\"89\":1}}],[\"从而先新元素的添加\",{\"1\":{\"25\":1}}],[\"从此集合中移除所有元素\",{\"1\":{\"14\":1}}],[\"从该集合中删除未包含在指定集合中的所有元素\",{\"1\":{\"14\":1}}],[\"筛选的数据集合\",{\"1\":{\"14\":1}}],[\"校验当前数据集合是否在该单列数据中\",{\"1\":{\"14\":1}}],[\">send的完整业务流程\",{\"1\":{\"318\":1}}],[\">surrogate<\",{\"1\":{\"96\":1}}],[\">业务处理\",{\"1\":{\"318\":1}}],[\">部署的脚本\",{\"1\":{\"291\":1}}],[\">推送镜像\",{\"1\":{\"291\":1}}],[\">地址相同\",{\"1\":{\"98\":1}}],[\">unicode\",{\"1\":{\"94\":1}}],[\">runtimeexception\",{\"1\":{\"60\":2}}],[\">classnotfoundexception\",{\"1\":{\"60\":1}}],[\">exception\",{\"1\":{\"60\":1}}],[\">=\",{\"1\":{\"60\":1,\"96\":1,\"100\":1}}],[\">>>\",{\"1\":{\"42\":1}}],[\">>\",{\"1\":{\"19\":1,\"60\":1,\"291\":1}}],[\">\",{\"1\":{\"14\":4,\"19\":1,\"60\":6,\"100\":1,\"279\":1,\"287\":1,\"291\":1}}],[\"a股一般跟着跌\",{\"1\":{\"402\":1}}],[\"a股未必跟涨\",{\"1\":{\"402\":1}}],[\"available\",{\"1\":{\"324\":1}}],[\"availability\",{\"1\":{\"321\":1}}],[\"age等属性即可\",{\"1\":{\"314\":1}}],[\"against\",{\"1\":{\"97\":1,\"98\":1}}],[\"auth\",{\"1\":{\"281\":3}}],[\"adminserver\",{\"1\":{\"283\":1}}],[\"admin\",{\"1\":{\"281\":4}}],[\"admiral\",{\"1\":{\"281\":1}}],[\"addall\",{\"1\":{\"14\":1}}],[\"add\",{\"1\":{\"14\":1,\"266\":1,\"291\":1}}],[\"amd64\",{\"1\":{\"276\":2}}],[\"always\",{\"1\":{\"291\":1}}],[\"alpine\",{\"1\":{\"291\":1}}],[\"alto\",{\"1\":{\"283\":1}}],[\"aliyuncs\",{\"1\":{\"268\":1}}],[\"aliyun\",{\"1\":{\"266\":1,\"279\":1}}],[\"allocates\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"a+b\",{\"1\":{\"221\":1}}],[\"a+=b\",{\"0\":{\"221\":1}}],[\"a=a+b\",{\"0\":{\"221\":1}}],[\"abc\",{\"1\":{\"281\":1}}],[\"abcd都在炸板分歧\",{\"1\":{\"244\":1}}],[\"abstractmap\",{\"1\":{\"211\":1}}],[\"aba\",{\"1\":{\"128\":2}}],[\"await\",{\"0\":{\"156\":1},\"1\":{\"156\":2}}],[\"ap的延伸\",{\"1\":{\"325\":1}}],[\"ap\",{\"1\":{\"322\":1,\"323\":2,\"325\":1}}],[\"apache\",{\"1\":{\"286\":2}}],[\"apiversion\",{\"1\":{\"289\":3,\"291\":3,\"297\":3}}],[\"api\",{\"1\":{\"121\":1,\"228\":1,\"359\":1}}],[\"apply\",{\"1\":{\"291\":4}}],[\"applying\",{\"1\":{\"98\":2}}],[\"apps\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"app\",{\"1\":{\"283\":1,\"289\":6,\"291\":6,\"296\":5,\"297\":25}}],[\"appclassloader\",{\"1\":{\"60\":5}}],[\"a>\",{\"1\":{\"94\":1,\"96\":1}}],[\"affect\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"as\",{\"1\":{\"88\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1}}],[\"ask\",{\"1\":{\"60\":1}}],[\"analysis\",{\"1\":{\"327\":1}}],[\"analyzer\",{\"1\":{\"81\":1}}],[\"anapsix\",{\"1\":{\"291\":1}}],[\"another\",{\"1\":{\"98\":1}}],[\"anotherstring\",{\"0\":{\"98\":1,\"99\":1},\"1\":{\"97\":3,\"98\":6,\"99\":6}}],[\"anobject\",{\"1\":{\"97\":5}}],[\"and\",{\"1\":{\"90\":1,\"92\":1,\"95\":1,\"96\":1,\"97\":2,\"98\":3,\"99\":1,\"126\":1,\"283\":1,\"327\":1}}],[\"an\",{\"1\":{\"87\":1,\"88\":1,\"96\":1,\"98\":1}}],[\"atlas\",{\"1\":{\"314\":1}}],[\"atomicity\",{\"1\":{\"324\":1}}],[\"atomicinteger\",{\"1\":{\"127\":1}}],[\"atomicstampedreference\",{\"1\":{\"128\":1}}],[\"at\",{\"1\":{\"60\":1,\"96\":5,\"98\":1,\"99\":5,\"100\":2}}],[\"acceptor通过accept接受连接\",{\"1\":{\"318\":1}}],[\"accesscontrolexception\",{\"1\":{\"60\":2}}],[\"accesscontroller\",{\"1\":{\"60\":3}}],[\"acid\",{\"0\":{\"324\":1},\"1\":{\"315\":1,\"324\":1}}],[\"ace\",{\"1\":{\"60\":8}}],[\"a\",{\"1\":{\"60\":1,\"87\":1,\"88\":3,\"89\":1,\"90\":2,\"91\":2,\"92\":4,\"96\":1,\"97\":2,\"99\":5,\"100\":1,\"113\":2,\"126\":2,\"128\":2,\"218\":2,\"221\":1,\"244\":1,\"285\":1,\"322\":3,\"335\":1}}],[\"archive\",{\"1\":{\"286\":1}}],[\"argument\",{\"1\":{\"88\":2,\"89\":1,\"91\":1,\"92\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":6,\"100\":1}}],[\"args\",{\"1\":{\"3\":3,\"6\":3}}],[\"are\",{\"1\":{\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"98\":5,\"99\":3}}],[\"arrays\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"arrayblockingqueue\",{\"0\":{\"49\":1}}],[\"arraycopy进行数组的\",{\"1\":{\"20\":1}}],[\"array\",{\"1\":{\"19\":3,\"89\":3,\"90\":2,\"96\":1}}],[\"arraylist\",{\"0\":{\"16\":1,\"210\":1,\"232\":1,\"233\":1},\"1\":{\"15\":2,\"16\":1,\"17\":1,\"28\":1,\"121\":1,\"210\":1}}],[\"ef比ab略短\",{\"1\":{\"398\":1}}],[\"effects\",{\"1\":{\"327\":1}}],[\"esb\",{\"1\":{\"355\":1}}],[\"eventual\",{\"1\":{\"324\":1}}],[\"everyone\",{\"1\":{\"281\":1}}],[\"egd=file\",{\"1\":{\"291\":1}}],[\"echo\",{\"1\":{\"291\":1}}],[\"e24=http\",{\"1\":{\"286\":1}}],[\"email\",{\"1\":{\"281\":7}}],[\"empty\",{\"1\":{\"17\":1,\"19\":1,\"87\":1,\"283\":2}}],[\"eof\",{\"1\":{\"268\":2,\"279\":1}}],[\"etc\",{\"1\":{\"268\":2,\"279\":1,\"284\":1,\"285\":1,\"291\":2}}],[\"error\",{\"0\":{\"223\":1},\"1\":{\"223\":1}}],[\"either\",{\"1\":{\"99\":1}}],[\"each\",{\"1\":{\"98\":2,\"99\":1}}],[\"ease\",{\"1\":{\"92\":1}}],[\"equivalent\",{\"1\":{\"97\":1,\"98\":1}}],[\"equal\",{\"1\":{\"90\":1,\"94\":1,\"98\":2,\"99\":2}}],[\"equalsignorecase\",{\"0\":{\"98\":1},\"1\":{\"97\":1,\"98\":1}}],[\"equals\",{\"0\":{\"97\":1,\"207\":1},\"1\":{\"14\":2,\"97\":2,\"98\":1,\"99\":1,\"207\":1,\"208\":1,\"216\":1,\"231\":1,\"236\":3}}],[\"eden\",{\"1\":{\"71\":1}}],[\"elasticsearch\",{\"1\":{\"315\":1}}],[\"el7\",{\"1\":{\"279\":1}}],[\"else\",{\"1\":{\"60\":3}}],[\"elementdata赋值为empty\",{\"1\":{\"17\":2}}],[\"elementdata赋值为new\",{\"1\":{\"17\":1}}],[\"elementdata赋值为defaultcapacity\",{\"1\":{\"17\":1}}],[\"elementdata\",{\"1\":{\"17\":4,\"19\":3}}],[\"executor\",{\"0\":{\"143\":1,\"150\":1},\"1\":{\"143\":2,\"150\":1}}],[\"execution\",{\"1\":{\"56\":1}}],[\"expose\",{\"1\":{\"291\":1}}],[\"expiration\",{\"1\":{\"281\":1}}],[\"expression\",{\"1\":{\"100\":1}}],[\"explicit\",{\"1\":{\"88\":1}}],[\"exactly\",{\"1\":{\"99\":1}}],[\"extensions\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"extends\",{\"1\":{\"40\":4}}],[\"extclassloader\",{\"1\":{\"60\":4}}],[\"exception\",{\"0\":{\"223\":1},\"1\":{\"60\":3,\"96\":1}}],[\"env\",{\"1\":{\"283\":4,\"291\":6,\"296\":1,\"297\":10}}],[\"enable\",{\"1\":{\"267\":1}}],[\"enabled=1\",{\"1\":{\"279\":1}}],[\"enabled\",{\"1\":{\"60\":1}}],[\"end\",{\"1\":{\"60\":1}}],[\"engine\",{\"1\":{\"56\":1}}],[\"entry<k\",{\"1\":{\"41\":1}}],[\"entryset\",{\"1\":{\"40\":1,\"41\":1}}],[\"enhancer\",{\"1\":{\"6\":6}}],[\"e>\",{\"1\":{\"14\":1}}],[\"e\",{\"1\":{\"14\":4,\"60\":11}}],[\"它从那么高的地方跌下来\",{\"1\":{\"398\":1}}],[\"它的意\",{\"1\":{\"301\":1}}],[\"它的值被改成了\",{\"1\":{\"128\":1}}],[\"它也应该重写\",{\"1\":{\"236\":1}}],[\"它在计算机中一个指令接着一个指令的执行着没同事\",{\"1\":{\"225\":1}}],[\"它不能代替阻塞\",{\"1\":{\"159\":1}}],[\"它们都属于\",{\"1\":{\"154\":1}}],[\"它是开放的\",{\"1\":{\"398\":1}}],[\"它是在等待获取一个排它锁\",{\"1\":{\"138\":1}}],[\"它是一个虚构出来的计算机\",{\"1\":{\"54\":1}}],[\"它可以通过控制变量值的版本来保证\",{\"1\":{\"128\":1}}],[\"它可以看作是当前线程所执行的字节码的行号指示器\",{\"1\":{\"66\":1,\"69\":1}}],[\"它都要进行加锁\",{\"1\":{\"124\":1}}],[\"它会去内存中读取新值\",{\"1\":{\"115\":1}}],[\"它会保证修改的值会立即被更新到主存\",{\"1\":{\"115\":1}}],[\"它会先去主存读取i的值并加载到cpu2的缓存当中\",{\"1\":{\"106\":1}}],[\"它会先尝试自己去加载\",{\"1\":{\"59\":1}}],[\"它将可用内存按容量划分为大小相等的两块\",{\"1\":{\"77\":1}}],[\"它为什么可以隔离每个\",{\"1\":{\"59\":1}}],[\"它包含以下方法\",{\"1\":{\"40\":1}}],[\"它包含了以下的方法\",{\"1\":{\"14\":1}}],[\"它内部的数据接口是采用链表的方式进行存储\",{\"1\":{\"22\":1}}],[\"它实现了\",{\"1\":{\"16\":1}}],[\"它抽象了单列数据集合的基本方法\",{\"1\":{\"14\":1}}],[\"它允许我们在运行时对字节码进行修改和动态生成\",{\"1\":{\"5\":1}}],[\"和公募基金一样\",{\"1\":{\"393\":1}}],[\"和社保基金一样\",{\"1\":{\"391\":1}}],[\"和b\",{\"1\":{\"335\":1}}],[\"和搭建部分常用服务\",{\"1\":{\"261\":1}}],[\"和大盘共振\",{\"1\":{\"243\":1}}],[\"和垃圾收集器有关系\",{\"1\":{\"231\":1}}],[\"和新值\",{\"1\":{\"126\":1}}],[\"和上个方法对比\",{\"1\":{\"92\":1}}],[\"和其他\",{\"1\":{\"59\":1}}],[\"和所有的\",{\"1\":{\"59\":1}}],[\"和创建以此实现数据的删除\",{\"1\":{\"20\":1}}],[\"和\",{\"0\":{\"155\":1,\"207\":1,\"210\":1,\"211\":1,\"221\":1,\"223\":1,\"228\":1,\"232\":1,\"235\":1,\"238\":1,\"325\":1},\"1\":{\"14\":2,\"15\":1,\"25\":2,\"77\":1,\"108\":1,\"109\":1,\"121\":2,\"127\":1,\"135\":1,\"138\":1,\"140\":1,\"236\":1,\"322\":1,\"323\":1,\"351\":1,\"398\":1}}],[\"是题材股还是白马股身上\",{\"1\":{\"406\":1}}],[\"是哪个题材\",{\"1\":{\"406\":1}}],[\"是处于放量状态还是处于缩量状态\",{\"1\":{\"406\":1}}],[\"是在大票上\",{\"1\":{\"406\":1}}],[\"是以市场为师\",{\"1\":{\"405\":1}}],[\"是继续持有观察还是准备卖出\",{\"1\":{\"403\":1}}],[\"是有条件的\",{\"1\":{\"398\":1}}],[\"是困难的\",{\"1\":{\"398\":1}}],[\"是无条件的\",{\"1\":{\"398\":1}}],[\"是无效的\",{\"1\":{\"398\":1}}],[\"是容易的\",{\"1\":{\"398\":1}}],[\"是卖出股票的信号\",{\"1\":{\"398\":1}}],[\"是其他题材板块的资金和本板块跟风股资金助力的结果\",{\"1\":{\"398\":1}}],[\"是第二天\",{\"1\":{\"398\":1}}],[\"是新题材吗\",{\"1\":{\"398\":1}}],[\"是鉴别潜在龙头和事实龙头的关键\",{\"1\":{\"398\":1}}],[\"是什么意思呢\",{\"1\":{\"398\":1}}],[\"是连板股票趋势的创造者和维护者\",{\"1\":{\"398\":1}}],[\"是龙头梯队中级别最高的\",{\"1\":{\"398\":1}}],[\"是市场赚钱效应的核心\",{\"1\":{\"398\":1}}],[\"是市场稳定的重要条件\",{\"1\":{\"391\":1}}],[\"是尊重和顺应自然规律的结果\",{\"1\":{\"398\":1}}],[\"是想当然\",{\"1\":{\"398\":1}}],[\"是情绪流龙头战法整个交易系统的组成部分\",{\"1\":{\"398\":1}}],[\"是聚光灯下万众瞩目的焦点\",{\"1\":{\"398\":1}}],[\"是因为公告利好涨停的独立股票\",{\"1\":{\"406\":1}}],[\"是因为情绪递减\",{\"1\":{\"398\":1}}],[\"是因为频繁交易\",{\"1\":{\"395\":1}}],[\"是因为后续的收集算法都是基于这种思路并对其缺点进行改进而得到的\",{\"1\":{\"77\":1}}],[\"是短线选手学习研究的重点对象\",{\"1\":{\"394\":1}}],[\"是股市的\",{\"1\":{\"391\":1}}],[\"是两市无可争议的市场风向标\",{\"1\":{\"391\":1}}],[\"是两个不同的架构设计理念\",{\"1\":{\"357\":1}}],[\"是主机停机\",{\"1\":{\"334\":1}}],[\"是从用户角度思考\",{\"1\":{\"328\":1}}],[\"是忽略网络延迟的\",{\"1\":{\"323\":1}}],[\"是必须得\",{\"1\":{\"322\":1}}],[\"是linux内核的4层负载均衡\",{\"1\":{\"319\":1}}],[\"是全表扫描速度较慢\",{\"1\":{\"315\":1}}],[\"是进行系统设计\",{\"1\":{\"303\":1}}],[\"是符合标准的\",{\"1\":{\"244\":1}}],[\"是不是应该更加重视起来\",{\"1\":{\"244\":1}}],[\"是不可执行的\",{\"1\":{\"167\":1}}],[\"是单元素集合且无序不可重复\",{\"1\":{\"230\":1}}],[\"是单元素集合且有序可重复\",{\"1\":{\"230\":1}}],[\"是系统运行程序的基本单位\",{\"1\":{\"225\":1}}],[\"是弱引用\",{\"1\":{\"213\":1}}],[\"是软引用\",{\"1\":{\"213\":1}}],[\"是集合的工具包\",{\"1\":{\"212\":1}}],[\"是集合的上级接口包\",{\"1\":{\"212\":1}}],[\"是吧构成问题的事务分解成对象\",{\"1\":{\"202\":1}}],[\"是分析解决问题的步骤\",{\"1\":{\"202\":1}}],[\"是指今天成功封住涨停的股票跟所有触及涨停的股票的比值\",{\"1\":{\"404\":1}}],[\"是指在受到利空情绪影响下\",{\"1\":{\"398\":1}}],[\"是指在同一个线程在外层方法获取锁的时候\",{\"1\":{\"162\":1}}],[\"是指该锁一次只能被一个线程所持有\",{\"1\":{\"163\":1}}],[\"是线程安全的\",{\"1\":{\"91\":1}}],[\"是并发gc\",{\"1\":{\"78\":1}}],[\"是硬盘和\",{\"1\":{\"70\":1}}],[\"是被所有线程共享的\",{\"1\":{\"66\":1,\"71\":1}}],[\"是否能形成板块效应\",{\"1\":{\"403\":1}}],[\"是否能够转换为右面的\",{\"1\":{\"204\":1}}],[\"是否会带动相关类型的股票\",{\"1\":{\"403\":1}}],[\"是否有可能高位开始补跌\",{\"1\":{\"403\":1}}],[\"是否开启自注册\",{\"1\":{\"281\":1}}],[\"是否是\",{\"1\":{\"204\":1}}],[\"是否为空\",{\"0\":{\"95\":1}}],[\"是否线程共享\",{\"1\":{\"66\":1}}],[\"是否加载过\",{\"1\":{\"60\":1}}],[\"是否存在数据\",{\"1\":{\"42\":1}}],[\"是否存在个\",{\"1\":{\"40\":1}}],[\"是否存在这个\",{\"1\":{\"40\":1}}],[\"是如何打破\",{\"1\":{\"59\":1}}],[\"是通过在实际的计算机上仿真模拟各种计算机功能来实现的\",{\"1\":{\"54\":1}}],[\"是一个补充说明\",{\"1\":{\"398\":1}}],[\"是一个绝对的加分项\",{\"1\":{\"244\":1}}],[\"是一个\",{\"1\":{\"187\":1}}],[\"是一个基于asm的字节码生成库\",{\"1\":{\"5\":1}}],[\"是一种用于计算设备的规范\",{\"1\":{\"54\":1}}],[\"是当前容量+1\",{\"1\":{\"19\":1}}],[\"是\",{\"1\":{\"14\":1,\"16\":1,\"19\":1,\"54\":1,\"66\":3,\"71\":1,\"155\":2,\"201\":1}}],[\"本书第三部分\",{\"1\":{\"405\":1}}],[\"本门情绪流一般指的冰点\",{\"1\":{\"400\":1}}],[\"本门情绪流把\",{\"1\":{\"400\":1}}],[\"本门情绪流\",{\"1\":{\"398\":1}}],[\"本门情绪流强调在板块效应形成的当天上车\",{\"1\":{\"398\":1}}],[\"本门情绪流认为\",{\"1\":{\"398\":1}}],[\"本来赚了钱的\",{\"1\":{\"398\":1}}],[\"本身就有筹码\",{\"1\":{\"392\":1}}],[\"本地独立系统保存日志\",{\"1\":{\"344\":1}}],[\"本地方法栈中jni引用的对象\",{\"1\":{\"76\":1}}],[\"本地方法栈\",{\"0\":{\"68\":1},\"1\":{\"66\":1}}],[\"本次存储\",{\"1\":{\"281\":1}}],[\"本人结合源码和网络上的相关文章进行了总结\",{\"1\":{\"13\":1}}],[\"本文只是为了演示\",{\"1\":{\"2\":1}}],[\"而市场情绪变坏\",{\"1\":{\"406\":1}}],[\"而情绪是会传递的\",{\"1\":{\"406\":1}}],[\"而情绪流的技术分析是有效的\",{\"1\":{\"398\":1}}],[\"而换作另外的板块强势\",{\"1\":{\"406\":1}}],[\"而股艺长进很是缓慢\",{\"1\":{\"405\":1}}],[\"而后排品种大多数低开\",{\"1\":{\"404\":1}}],[\"而涨停板比较多\",{\"1\":{\"404\":1}}],[\"而决定是否出击或者出击的仓位\",{\"1\":{\"398\":1}}],[\"而非你所想\",{\"1\":{\"398\":1}}],[\"而非技术角度\",{\"1\":{\"328\":1}}],[\"而那种极度缩量的一字板或秒板\",{\"1\":{\"398\":1}}],[\"而排板手法是可以撤单应对的\",{\"1\":{\"398\":1}}],[\"而跟风股纷纷掉队\",{\"1\":{\"398\":1}}],[\"而场内资金惜售\",{\"1\":{\"398\":1}}],[\"而难度也最大\",{\"1\":{\"395\":1}}],[\"而公募基金管理人的收益来源只是管理费用\",{\"1\":{\"393\":1}}],[\"而避免了非理性赎回所引起的非理性操作\",{\"1\":{\"393\":1}}],[\"而该中间状态不影响系统整体的可用性\",{\"1\":{\"324\":1}}],[\"而无需再轮询所有的连接\",{\"1\":{\"318\":1}}],[\"而无需程序员显式地管理线程的生命周期\",{\"1\":{\"143\":1}}],[\"而次次重新编写可能过于麻烦\",{\"1\":{\"294\":1}}],[\"而在板块指数里面\",{\"1\":{\"406\":1}}],[\"而在价格上转强\",{\"1\":{\"244\":1}}],[\"而在控制权返回后\",{\"1\":{\"132\":1}}],[\"而一致的情况则相反\",{\"1\":{\"244\":1}}],[\"而是学习游资买股的逻辑\",{\"1\":{\"406\":1}}],[\"而是强调在板块效应形成时\",{\"1\":{\"398\":1}}],[\"而是继续发送给主机\",{\"1\":{\"341\":1}}],[\"而是系统当前压力\",{\"1\":{\"319\":1}}],[\"而是要捕获炒作的时间和领涨的方向\",{\"1\":{\"243\":1}}],[\"而是一种不同维度理解的预期差\",{\"1\":{\"242\":1}}],[\"而是为了描述某个事物在解决整个问题的过程中所发生的行为\",{\"1\":{\"202\":1}}],[\"而是让所有存活的对象都向一端移动\",{\"1\":{\"77\":1}}],[\"而建立对象的目的也不完全是为了完成一个个步骤\",{\"1\":{\"202\":1}}],[\"而另一个线程却看不到\",{\"1\":{\"182\":1}}],[\"而另一个是\",{\"1\":{\"151\":1}}],[\"而写线程b对数组元素的写入可能看到可能看不到\",{\"1\":{\"176\":1}}],[\"而轻量级锁是通过用cas操作和自旋来解决加锁问题\",{\"1\":{\"160\":1}}],[\"而为了让当前线程\",{\"1\":{\"159\":1}}],[\"而\",{\"1\":{\"155\":1,\"190\":1,\"203\":1}}],[\"而等待是主动的\",{\"1\":{\"138\":1}}],[\"而阻塞和等待用来描述状态\",{\"1\":{\"138\":1}}],[\"而普通的共享变量不能保证可见性\",{\"1\":{\"115\":1}}],[\"而不属于\",{\"1\":{\"154\":1}}],[\"而不是一个激进的投资者\",{\"1\":{\"404\":1}}],[\"而不是忙等待\",{\"1\":{\"153\":1}}],[\"而不是10\",{\"1\":{\"106\":1}}],[\"而不适用于交互较多的应用程序\",{\"1\":{\"78\":1}}],[\"而不能实现接口的类就不能实现jdk的动态代理\",{\"1\":{\"11\":1}}],[\"而老年代中因为对象存活率高\",{\"1\":{\"77\":1}}],[\"而且是大跌\",{\"1\":{\"406\":1}}],[\"而且板块之间有时候会出现轮动\",{\"1\":{\"406\":1}}],[\"而且普遍竞价无量\",{\"1\":{\"404\":1}}],[\"而且成交量并非极度缩量\",{\"1\":{\"398\":1}}],[\"而且老是涨\",{\"1\":{\"398\":1}}],[\"而且当天是属于空转多的极致性一刻完成后\",{\"1\":{\"244\":1}}],[\"而且需要前一天的涨停板板上换手换筹\",{\"1\":{\"244\":1}}],[\"而且也不允许别人这么做\",{\"1\":{\"166\":1}}],[\"而且也只是建议具有相同优先级的其它线程可以运行\",{\"1\":{\"146\":1}}],[\"而且通常都是有害的\",{\"1\":{\"122\":1}}],[\"而且互不影响\",{\"1\":{\"69\":1}}],[\"而且在较长的时间内容\",{\"1\":{\"13\":1}}],[\"而本地方法栈是为虚拟机调用\",{\"1\":{\"66\":1,\"68\":1}}],[\"但我发现好多短线选手\",{\"1\":{\"406\":1}}],[\"但我们要从这表象中思考和分析问题\",{\"1\":{\"398\":1}}],[\"但也不是绝对的\",{\"1\":{\"406\":1}}],[\"但也有可能不再继续强势\",{\"1\":{\"406\":1}}],[\"但如果国家不安定\",{\"1\":{\"406\":1}}],[\"但如果此时锁刚好可用\",{\"1\":{\"161\":1}}],[\"但很容易被盘中突发的涨跌所吸引\",{\"1\":{\"405\":1}}],[\"但他们的一言一行\",{\"1\":{\"404\":1}}],[\"但毕竟在前期给人留下了深刻的印象\",{\"1\":{\"404\":1}}],[\"但毕竟不如电视生动\",{\"1\":{\"402\":1}}],[\"但同时也是相当敏感的\",{\"1\":{\"404\":1}}],[\"但这样的人气股\",{\"1\":{\"404\":1}}],[\"但这是龙头战法买入手法的基础\",{\"1\":{\"398\":1}}],[\"但第二天却强势快速涨停\",{\"1\":{\"404\":1}}],[\"但资金看到后排多只个股掉队的时候\",{\"1\":{\"404\":1}}],[\"但尽量保证了每次出手的胜率大幅提高\",{\"1\":{\"403\":1}}],[\"但若是某个题材的个股已经炒作到了高位\",{\"1\":{\"403\":1}}],[\"但若是封装对象这可以改变引用地址内的内容\",{\"1\":{\"218\":1}}],[\"但多数时候是通过盘中观察和盘后静态复盘后\",{\"1\":{\"403\":1}}],[\"但某些类型的股票产生了重大的赚钱效应的时候\",{\"1\":{\"403\":1}}],[\"但对于初学者来说\",{\"1\":{\"402\":1}}],[\"但对于许多技术派的股民\",{\"1\":{\"398\":1}}],[\"但笔者本人\",{\"1\":{\"402\":1}}],[\"但一般说来\",{\"1\":{\"403\":1}}],[\"但一般短线选手都忽略了中央人民政府网站的重要作用\",{\"1\":{\"402\":1}}],[\"但一般影响的是开盘\",{\"1\":{\"402\":1}}],[\"但美股跌\",{\"1\":{\"402\":1}}],[\"但却充分反映了央视新闻联播的重要性\",{\"1\":{\"402\":1}}],[\"但可以这样说\",{\"1\":{\"400\":1}}],[\"但指数周期的冰点\",{\"1\":{\"400\":1}}],[\"但要说明的是\",{\"1\":{\"398\":1}}],[\"但不如这个更直观\",{\"1\":{\"406\":1}}],[\"但不绝对\",{\"1\":{\"398\":1}}],[\"但不影响整个团队\",{\"1\":{\"398\":1}}],[\"但不是我所能控制的了\",{\"1\":{\"244\":1}}],[\"但所谓主力\",{\"1\":{\"398\":1}}],[\"但它同时是科创板那波行情的补涨股\",{\"1\":{\"398\":1}}],[\"但它要占用处理器时间\",{\"1\":{\"159\":1}}],[\"但之前市场没有发现\",{\"1\":{\"398\":1}}],[\"但每每此时\",{\"1\":{\"398\":1}}],[\"但市场总龙头未必就是主线题材龙头\",{\"1\":{\"398\":1}}],[\"但有时候\",{\"1\":{\"398\":1,\"404\":1}}],[\"但尾盘仍然封涨停\",{\"1\":{\"398\":1}}],[\"但即便如此\",{\"1\":{\"398\":1}}],[\"但识者寥寥\",{\"1\":{\"398\":1}}],[\"但大脑里必须能想见\",{\"1\":{\"398\":1}}],[\"但高于逻辑\",{\"1\":{\"398\":1}}],[\"但总的来说\",{\"1\":{\"398\":1}}],[\"但龙头股从日线高度上\",{\"1\":{\"398\":1}}],[\"但已经不再是热点\",{\"1\":{\"398\":1}}],[\"但在生命里最旺盛的那段时间里面\",{\"1\":{\"398\":1}}],[\"但兼顾了安全\",{\"1\":{\"395\":1}}],[\"但针对散户心理\",{\"1\":{\"395\":1}}],[\"但只要一回调\",{\"1\":{\"395\":1}}],[\"但封闭期较长\",{\"1\":{\"393\":1}}],[\"但与公募不同的是\",{\"1\":{\"393\":1}}],[\"但拉升总要借力题材\",{\"1\":{\"387\":1}}],[\"但数据并没有全部丢失\",{\"1\":{\"332\":1}}],[\"但线程间的互斥和共享又引入了新的复杂度\",{\"1\":{\"318\":1}}],[\"但实际\",{\"1\":{\"211\":1}}],[\"但后续步骤不是直接对可回收对象进行清理\",{\"1\":{\"77\":1}}],[\"但是集合竞价有大量买单\",{\"1\":{\"473\":1}}],[\"但是后面开板\",{\"1\":{\"446\":1}}],[\"但是未到0轴\",{\"1\":{\"434\":1}}],[\"但是未启动业务系统\",{\"1\":{\"340\":1}}],[\"但是上涨迅速下跌\",{\"1\":{\"427\":1}}],[\"但是在第二天涨停板的龙虎榜中没有见到他们卖出的身影\",{\"1\":{\"406\":1}}],[\"但是市场上就是有这么一大批短线客会这样看\",{\"1\":{\"404\":1}}],[\"但是接下来的承接却非常好\",{\"1\":{\"403\":1}}],[\"但是需要初学者引起注意的是\",{\"1\":{\"398\":1}}],[\"但是某一只个股在一个关键时点的走势强于原先顺位比它靠前的个股\",{\"1\":{\"398\":1}}],[\"但是某些实时性不是很高的较适合\",{\"1\":{\"323\":1}}],[\"但是由于存在网络延迟等问题\",{\"1\":{\"344\":1}}],[\"但是由于操作系统可以对指令进行重排序\",{\"1\":{\"181\":1}}],[\"但是同城天灾时出现都不可用的概率增大\",{\"1\":{\"344\":1}}],[\"但是不对外服务\",{\"1\":{\"340\":1}}],[\"但是不能爆量\",{\"1\":{\"244\":1}}],[\"但是不能中断\",{\"1\":{\"148\":1}}],[\"但是若存在大量数据未同步\",{\"1\":{\"332\":1}}],[\"但是备机不提服务\",{\"1\":{\"332\":1}}],[\"但是为了保持主备\",{\"1\":{\"332\":1}}],[\"但是现实中肯定会存在延迟\",{\"1\":{\"325\":1}}],[\"但是保证核心系统的可用性\",{\"1\":{\"324\":1}}],[\"但是会导致数据不一致\",{\"1\":{\"322\":1}}],[\"但是会唤起所有的子进程去尝试\",{\"1\":{\"318\":1}}],[\"但是解决方式并不优雅\",{\"1\":{\"318\":1}}],[\"但是一个进程连接多个连接时就不能阻塞到某个进程上\",{\"1\":{\"318\":1}}],[\"但是引入后出现了新的问题\",{\"1\":{\"318\":1}}],[\"但是也引入的新的问题\",{\"1\":{\"318\":1}}],[\"但是也会出现\",{\"1\":{\"318\":1}}],[\"但是英飞拓\",{\"1\":{\"244\":1}}],[\"但是绝非一招半式\",{\"1\":{\"242\":1}}],[\"但是实现方式不同\",{\"1\":{\"228\":1}}],[\"但是线程是一个比进程更小的执行单位\",{\"1\":{\"225\":1}}],[\"但是\",{\"0\":{\"216\":1},\"1\":{\"398\":2,\"406\":1}}],[\"但是删除的效率较高\",{\"1\":{\"210\":1}}],[\"但是性能上来说\",{\"1\":{\"202\":1}}],[\"但是有一些处理器会重排序\",{\"1\":{\"173\":1}}],[\"但是father\",{\"1\":{\"167\":1}}],[\"但是这并不是一种覆盖\",{\"1\":{\"167\":1}}],[\"但是如果爆量就意味着空多再次出现了非常不一致的行为\",{\"1\":{\"244\":1}}],[\"但是如果调用的是\",{\"1\":{\"150\":1}}],[\"但是如果有程序员通过非编译的手段生成了类文件\",{\"1\":{\"62\":1}}],[\"但是调用\",{\"1\":{\"149\":1}}],[\"但是可以实现多个接口\",{\"1\":{\"141\":1}}],[\"但是可以通过在调用端正确地使用同步手段来保证对象在并发环境中可以安全地使用\",{\"1\":{\"121\":1}}],[\"但是对于一些特定顺序的连续调用\",{\"1\":{\"120\":1}}],[\"但是封装类型\",{\"1\":{\"97\":1}}],[\"但是只能移动1\",{\"1\":{\"41\":1}}],[\"但是jdk动态代理和cglib动态代理的适用场景还是不一样的哈\",{\"1\":{\"12\":1}}],[\"但是并没有教科书上的10倍差距\",{\"1\":{\"12\":1}}],[\"但因为采用的是继承\",{\"1\":{\"11\":1}}],[\"在均价线之下的时间较少\",{\"1\":{\"471\":1}}],[\"在平常我们就应该多搜集一些相关的信息\",{\"1\":{\"406\":1}}],[\"在今天的整体表现情况呈现出来\",{\"1\":{\"406\":1}}],[\"在短线生态中\",{\"1\":{\"406\":1}}],[\"在实战中\",{\"1\":{\"405\":1}}],[\"在实践中\",{\"1\":{\"398\":1}}],[\"在收盘后或者晚上某个时间\",{\"1\":{\"405\":1}}],[\"在没有人师的情况下\",{\"1\":{\"405\":1}}],[\"在笔者多次的实战经验中\",{\"1\":{\"404\":1}}],[\"在这里我们可以看到哪些游资席位上榜了哪些股票\",{\"1\":{\"406\":1}}],[\"在这种局面下\",{\"1\":{\"404\":1}}],[\"在这情况之下\",{\"1\":{\"243\":1}}],[\"在中美贸易战不断斗法的过程中\",{\"1\":{\"404\":1}}],[\"在股市中\",{\"1\":{\"398\":4}}],[\"在前面\",{\"1\":{\"398\":1}}],[\"在龙头股的九大特性中\",{\"1\":{\"398\":1}}],[\"在涨停的个股中\",{\"1\":{\"398\":1}}],[\"在涨停板上排队成交\",{\"1\":{\"398\":1}}],[\"在涨停板上出现封单后按涨停价挂单买入\",{\"1\":{\"398\":1}}],[\"在k线图上显示有红色的柱子\",{\"1\":{\"398\":1}}],[\"在买一位置还能留下一部分单子\",{\"1\":{\"398\":1}}],[\"在寒风中飘扬\",{\"1\":{\"398\":1}}],[\"在我看来都是富人对穷人的二次掠夺\",{\"1\":{\"395\":1}}],[\"在高位配股或增发\",{\"1\":{\"392\":1}}],[\"在某种时刻\",{\"1\":{\"391\":1}}],[\"在a股\",{\"1\":{\"390\":1}}],[\"在b上读取不到刚刚写入的数据\",{\"1\":{\"335\":1}}],[\"在事务开始前和结束后\",{\"1\":{\"324\":1}}],[\"在整个系统中可以某些数据是\",{\"1\":{\"323\":1}}],[\"在当前安装目录下\",{\"1\":{\"282\":1}}],[\"在主线还是健康的首次或者第二次分歧比较容易成功\",{\"1\":{\"244\":1}}],[\"在对抗过程当中\",{\"1\":{\"244\":1}}],[\"在对象存活率较高时就要执行较多的复制操作\",{\"1\":{\"77\":1}}],[\"在信创板块分歧的时候\",{\"1\":{\"244\":1}}],[\"在竞业达继续打高度\",{\"1\":{\"244\":1}}],[\"在宋都股份逻辑切换带起房地产\",{\"1\":{\"244\":1}}],[\"在保利联合开路的情况下\",{\"1\":{\"244\":1}}],[\"在分歧点\",{\"1\":{\"244\":1}}],[\"在后续都有成为龙头的潜力\",{\"1\":{\"243\":1}}],[\"在大盘级别的弱转强之下\",{\"1\":{\"243\":1}}],[\"在他们的反抗下\",{\"1\":{\"243\":1}}],[\"在进行迭代其遍历时会缓存当前的\",{\"1\":{\"234\":1}}],[\"在\",{\"1\":{\"222\":1}}],[\"在构造函数内对一个\",{\"1\":{\"218\":1}}],[\"在构造函数内对一个final修饰的对象的成员域的写入\",{\"1\":{\"175\":1}}],[\"在编译阶段会存入常量池中\",{\"1\":{\"218\":1}}],[\"在集合中会使用到对象的\",{\"1\":{\"208\":1}}],[\"在每个\",{\"1\":{\"190\":4}}],[\"在不改变正确语义的前提下\",{\"1\":{\"190\":1}}],[\"在程序运行时\",{\"1\":{\"187\":1}}],[\"在程序前面的操作先行发生于后面的操作\",{\"1\":{\"113\":1,\"218\":1}}],[\"在son中的test\",{\"1\":{\"167\":1}}],[\"在许多场景中\",{\"1\":{\"159\":1}}],[\"在线程中调用另一个线程的\",{\"1\":{\"153\":1}}],[\"在一些关键的时间节点位置\",{\"1\":{\"404\":1}}],[\"在一轮题材炒作中\",{\"1\":{\"398\":1}}],[\"在一波大级别行情中\",{\"1\":{\"398\":1}}],[\"在一个线程中\",{\"1\":{\"173\":1}}],[\"在一个线程内\",{\"1\":{\"113\":1,\"218\":1}}],[\"在一定时间之后会被系统自动唤醒\",{\"1\":{\"138\":1}}],[\"在调用的时候不需要做额外的保障措施\",{\"1\":{\"120\":1}}],[\"在执行程序时为了提高性能\",{\"1\":{\"108\":1}}],[\"在执行字节码时\",{\"1\":{\"54\":1}}],[\"在cpu寄存器中执行\",{\"1\":{\"107\":1}}],[\"在新生代中\",{\"1\":{\"77\":1}}],[\"在标记完成后统一回收掉所有被标记的对象\",{\"1\":{\"77\":1}}],[\"在java里面\",{\"1\":{\"116\":1}}],[\"在java语言中\",{\"1\":{\"76\":1}}],[\"在jdk1\",{\"1\":{\"12\":1}}],[\"在运行过程中内存申请\",{\"1\":{\"70\":1}}],[\"在虚拟机启动时候创建\",{\"1\":{\"66\":1,\"71\":1}}],[\"在解析阶段\",{\"1\":{\"64\":1}}],[\"在准备阶段\",{\"1\":{\"63\":1}}],[\"在删除的过程中会校验缓存的modcount是否和当前的一致\",{\"1\":{\"20\":1}}],[\"在1\",{\"1\":{\"12\":1}}],[\"在子类中采用方法拦截的技术拦截所有父类方法的调用并顺势织入横切逻辑\",{\"1\":{\"5\":1}}],[\"测试平台\",{\"1\":{\"376\":1}}],[\"测试\",{\"0\":{\"289\":1},\"1\":{\"279\":1}}],[\"测试结果大致是这样的\",{\"1\":{\"12\":1}}],[\"测试类\",{\"1\":{\"3\":1,\"6\":1}}],[\"面向功能\",{\"1\":{\"349\":1}}],[\"面向功能拆分\",{\"1\":{\"348\":1}}],[\"面向服务\",{\"1\":{\"349\":1}}],[\"面向服务拆分\",{\"1\":{\"348\":1}}],[\"面向流程\",{\"1\":{\"349\":1}}],[\"面向流程拆分\",{\"1\":{\"348\":1}}],[\"面向过程\",{\"1\":{\"202\":1}}],[\"面向对象有封装\",{\"1\":{\"202\":1}}],[\"面向对象和面向过程的区别\",{\"0\":{\"202\":1}}],[\"面向对象\",{\"1\":{\"201\":1,\"202\":1}}],[\"面向\",{\"0\":{\"9\":1}}],[\"对成交额大的股票进行复盘\",{\"1\":{\"406\":1}}],[\"对指数\",{\"1\":{\"406\":1}}],[\"对人气的打击是巨大的\",{\"1\":{\"404\":1}}],[\"对话\",{\"1\":{\"402\":1}}],[\"对应量区缩量\",{\"1\":{\"398\":1}}],[\"对应的值\",{\"1\":{\"40\":2}}],[\"对应的值为\",{\"1\":{\"40\":1}}],[\"对应的值且等于\",{\"1\":{\"40\":1}}],[\"对应的\",{\"1\":{\"40\":4}}],[\"对题材的收集解读是情绪流龙头战法的重中之重\",{\"1\":{\"398\":1}}],[\"对中国股市各阶层进行了简要的分析\",{\"1\":{\"398\":1}}],[\"对市场信心的恢复有很大的正面作用\",{\"1\":{\"391\":1}}],[\"对手\",{\"0\":{\"389\":1}}],[\"对用户安抚\",{\"1\":{\"344\":1}}],[\"对异常数据进行修复\",{\"1\":{\"344\":1}}],[\"对称集群\",{\"1\":{\"342\":1}}],[\"对数据的处理是永久的\",{\"1\":{\"324\":1}}],[\"对某个指定客户端来说\",{\"1\":{\"321\":1}}],[\"对方法添加了同步锁或者调用的方法添加了同步锁\",{\"1\":{\"209\":1}}],[\"对i加1\",{\"1\":{\"184\":1}}],[\"对final域的读\",{\"1\":{\"178\":1}}],[\"对final修饰的对象的成员域读操作\",{\"0\":{\"176\":1}}],[\"对final修饰的对象的成员域写操作\",{\"0\":{\"175\":1}}],[\"对静态方法\",{\"1\":{\"146\":1}}],[\"对线程\",{\"1\":{\"113\":1,\"218\":1}}],[\"对一个\",{\"0\":{\"189\":1},\"1\":{\"113\":1,\"218\":1}}],[\"对于板块运动的总结每周一次总结回顾也是可以的\",{\"1\":{\"405\":1}}],[\"对于市场上这些活跃短线资金的心理状态的了解是我们必须要去把握的\",{\"1\":{\"404\":1}}],[\"对于经验丰富的投资者来说\",{\"1\":{\"404\":1}}],[\"对于做龙头股的人比较管用\",{\"1\":{\"403\":1}}],[\"对于多方来说\",{\"1\":{\"398\":1}}],[\"对于明显的阴区\",{\"1\":{\"398\":1}}],[\"对于股市来讲\",{\"1\":{\"398\":1}}],[\"对于初习龙头战法的情绪流爱好者\",{\"1\":{\"398\":1}}],[\"对于上市公司来讲\",{\"1\":{\"392\":1}}],[\"对于任意个对象\",{\"1\":{\"229\":1}}],[\"对于任意一个类\",{\"1\":{\"229\":1}}],[\"对于\",{\"1\":{\"218\":1}}],[\"对于处理器重排序\",{\"1\":{\"108\":1}}],[\"对于编译器来说\",{\"1\":{\"190\":1}}],[\"对于编译器\",{\"1\":{\"108\":1}}],[\"对于内存的划分方式和管理机制存在着部分差异\",{\"1\":{\"70\":1}}],[\"对\",{\"1\":{\"59\":1}}],[\"对象终结规则\",{\"1\":{\"113\":1,\"218\":1}}],[\"对象的四种方式\",{\"1\":{\"229\":1}}],[\"对象的结束先行发生于\",{\"1\":{\"113\":1,\"218\":1}}],[\"对象的\",{\"1\":{\"113\":1,\"218\":1}}],[\"对象\",{\"1\":{\"40\":1,\"229\":2}}],[\"对代理对象类的class文件加载进来\",{\"1\":{\"8\":1}}],[\"对比\",{\"0\":{\"7\":1}}],[\"t字板\",{\"1\":{\"398\":1}}],[\"tcp\",{\"1\":{\"348\":1}}],[\"tpc\",{\"1\":{\"318\":1}}],[\"tddl\",{\"1\":{\"314\":1}}],[\"tz=asia\",{\"1\":{\"291\":1}}],[\"tgz\",{\"1\":{\"280\":2}}],[\"t+1的弱转强又可以分为低位弱转强和高位弱转强\",{\"1\":{\"244\":1}}],[\"type\",{\"1\":{\"229\":1}}],[\"template\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"tee\",{\"1\":{\"268\":1}}],[\"test\",{\"1\":{\"167\":1,\"289\":5}}],[\"tests\",{\"1\":{\"100\":1}}],[\"terminated\",{\"0\":{\"139\":1}}],[\"timezone\",{\"1\":{\"291\":1}}],[\"timed\",{\"0\":{\"138\":1}}],[\"timeout\",{\"1\":{\"137\":2,\"138\":2,\"281\":1}}],[\"target\",{\"1\":{\"291\":1}}],[\"targetport\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"tar\",{\"1\":{\"276\":2,\"280\":1,\"286\":2}}],[\"ta\",{\"1\":{\"100\":2}}],[\"tab\",{\"1\":{\"42\":1}}],[\"table\",{\"1\":{\"41\":1,\"42\":3}}],[\"two\",{\"1\":{\"98\":4,\"99\":4}}],[\"tolerance\",{\"1\":{\"321\":1}}],[\"tolowercase\",{\"1\":{\"98\":1}}],[\"touch\",{\"1\":{\"297\":1}}],[\"touppercase\",{\"1\":{\"98\":1}}],[\"tool\",{\"1\":{\"287\":1}}],[\"token有效时间\",{\"1\":{\"281\":1}}],[\"token\",{\"0\":{\"277\":1},\"1\":{\"278\":1,\"281\":1}}],[\"to++\",{\"1\":{\"100\":1}}],[\"toffset\",{\"0\":{\"100\":1},\"1\":{\"100\":9}}],[\"tostring\",{\"1\":{\"60\":1,\"92\":1}}],[\"to\",{\"1\":{\"60\":4,\"71\":1,\"85\":1,\"90\":2,\"92\":3,\"94\":1,\"96\":1,\"97\":3,\"98\":4,\"99\":3,\"100\":2,\"283\":2,\"336\":1}}],[\"tomcat\",{\"0\":{\"59\":1},\"1\":{\"59\":3}}],[\"toarray\",{\"1\":{\"14\":2}}],[\"transient\",{\"1\":{\"226\":3}}],[\"transmittable\",{\"0\":{\"199\":1}}],[\"trace\",{\"1\":{\"60\":6}}],[\"tryloadingfromjavaseloader\",{\"1\":{\"60\":3}}],[\"try\",{\"0\":{\"222\":2},\"1\":{\"60\":8}}],[\"treemap\",{\"0\":{\"43\":1}}],[\"treeifybin\",{\"1\":{\"42\":1}}],[\"treeify\",{\"1\":{\"41\":3}}],[\"treeset\",{\"0\":{\"36\":1}}],[\"true\",{\"1\":{\"14\":1,\"60\":2,\"95\":2,\"97\":4,\"98\":5,\"99\":1,\"100\":2,\"149\":1,\"204\":1,\"229\":1}}],[\"t\",{\"1\":{\"6\":2,\"14\":1,\"60\":1,\"278\":1,\"291\":4}}],[\"than\",{\"1\":{\"96\":1,\"99\":4,\"100\":1}}],[\"that\",{\"1\":{\"87\":2,\"88\":1,\"89\":1,\"91\":1,\"92\":1,\"97\":1,\"99\":3}}],[\"there\",{\"1\":{\"99\":1}}],[\"their\",{\"1\":{\"99\":1}}],[\"then\",{\"1\":{\"99\":3}}],[\"they\",{\"1\":{\"98\":1,\"99\":3}}],[\"the\",{\"1\":{\"60\":1,\"78\":1,\"85\":3,\"88\":4,\"89\":8,\"90\":13,\"91\":6,\"92\":7,\"94\":6,\"96\":15,\"97\":6,\"98\":13,\"99\":34,\"100\":13}}],[\"threadlocal\",{\"0\":{\"198\":1},\"1\":{\"131\":1}}],[\"thread\",{\"0\":{\"131\":1,\"141\":1,\"199\":1},\"1\":{\"113\":2,\"131\":1,\"137\":1,\"138\":4,\"140\":2,\"141\":2,\"145\":1,\"146\":1,\"154\":1,\"155\":1,\"218\":2,\"318\":1}}],[\"threaddump\",{\"1\":{\"81\":1}}],[\"threshold\",{\"1\":{\"41\":4}}],[\"throw\",{\"1\":{\"19\":2,\"60\":8,\"96\":1}}],[\"throwable\",{\"1\":{\"3\":1,\"6\":1,\"60\":1}}],[\"throws\",{\"1\":{\"3\":1,\"6\":1,\"60\":3}}],[\"this\",{\"1\":{\"3\":1,\"6\":1,\"17\":4,\"60\":2,\"87\":2,\"88\":3,\"89\":1,\"90\":2,\"91\":1,\"92\":2,\"94\":2,\"96\":2,\"97\":5,\"98\":3,\"99\":11,\"100\":5}}],[\"lvs\",{\"1\":{\"319\":1}}],[\"lvm2\",{\"1\":{\"265\":1}}],[\"lbip\",{\"1\":{\"296\":1,\"297\":2}}],[\"ln\",{\"1\":{\"291\":1}}],[\"l=palo\",{\"1\":{\"283\":1}}],[\"l=\",{\"1\":{\"283\":1}}],[\"ldaps\",{\"1\":{\"281\":1}}],[\"ldap\",{\"1\":{\"281\":9}}],[\"ldap认证时配置项\",{\"1\":{\"281\":1}}],[\"lt\",{\"1\":{\"99\":1}}],[\"level\",{\"1\":{\"108\":1}}],[\"len2\",{\"1\":{\"99\":3}}],[\"len1\",{\"1\":{\"99\":3}}],[\"lengths\",{\"1\":{\"99\":2}}],[\"length\",{\"0\":{\"94\":1},\"1\":{\"19\":1,\"89\":1,\"90\":3,\"91\":1,\"92\":1,\"94\":5,\"95\":3,\"96\":3,\"97\":2,\"98\":4,\"99\":4,\"100\":3}}],[\"let\",{\"1\":{\"99\":1}}],[\"lexicographic\",{\"1\":{\"99\":1}}],[\"lexicographically\",{\"1\":{\"99\":8}}],[\"least\",{\"1\":{\"98\":1}}],[\"less\",{\"1\":{\"96\":1,\"99\":2}}],[\"locksupport\",{\"1\":{\"137\":1,\"138\":2}}],[\"lock\",{\"1\":{\"113\":1,\"218\":1}}],[\"localtime\",{\"1\":{\"291\":1}}],[\"local\",{\"0\":{\"131\":1,\"199\":1},\"1\":{\"60\":2,\"291\":4}}],[\"located\",{\"1\":{\"60\":1}}],[\"locate\",{\"1\":{\"60\":1}}],[\"looking\",{\"1\":{\"100\":1}}],[\"longer\",{\"1\":{\"99\":1}}],[\"long\",{\"1\":{\"85\":1,\"203\":2}}],[\"logrotate\",{\"1\":{\"283\":1}}],[\"login\",{\"1\":{\"278\":1}}],[\"log\",{\"1\":{\"60\":38,\"283\":1,\"291\":1}}],[\"loadbalancer\",{\"1\":{\"289\":2,\"291\":2,\"297\":2}}],[\"loadstore\",{\"1\":{\"190\":2}}],[\"loadload\",{\"1\":{\"190\":2,\"218\":1}}],[\"loading\",{\"1\":{\"60\":3}}],[\"loadclass\",{\"1\":{\"60\":1}}],[\"loaded\",{\"1\":{\"60\":1}}],[\"loadfactor\",{\"1\":{\"41\":1}}],[\"load\",{\"1\":{\"41\":1}}],[\"latest\",{\"1\":{\"291\":9,\"296\":1}}],[\"labels\",{\"1\":{\"289\":4,\"291\":4,\"297\":4}}],[\"lastindexof\",{\"1\":{\"60\":1}}],[\"last等于新元素\",{\"1\":{\"25\":1}}],[\"last\",{\"1\":{\"25\":3}}],[\"lang\",{\"1\":{\"2\":1,\"60\":2,\"98\":2,\"131\":1}}],[\"like\",{\"1\":{\"315\":2}}],[\"likely\",{\"1\":{\"92\":1}}],[\"linux\",{\"1\":{\"266\":1,\"268\":1,\"276\":2,\"286\":1}}],[\"link\",{\"1\":{\"90\":1,\"95\":2,\"98\":2,\"99\":1}}],[\"linking\",{\"0\":{\"61\":1}}],[\"linkedblockingdeque\",{\"0\":{\"51\":1}}],[\"linkedblockingqueue\",{\"0\":{\"50\":1}}],[\"linkedlist\",{\"0\":{\"22\":1,\"210\":1,\"232\":1},\"1\":{\"15\":1,\"22\":1,\"210\":1}}],[\"lim\",{\"1\":{\"99\":2}}],[\"lib\",{\"1\":{\"59\":2,\"284\":1}}],[\"library\",{\"1\":{\"5\":1,\"291\":9}}],[\"list\",{\"0\":{\"230\":1},\"1\":{\"14\":1,\"230\":1}}],[\"代价过高问题\",{\"1\":{\"318\":1}}],[\"代价过高\",{\"1\":{\"318\":1}}],[\"代表市场行情越好\",{\"1\":{\"404\":1}}],[\"代表系统的可用性程度\",{\"1\":{\"303\":1}}],[\"代表空方力量未衰竭\",{\"1\":{\"243\":1}}],[\"代码\",{\"1\":{\"4\":2}}],[\"代理式\",{\"1\":{\"359\":1}}],[\"代理的类\",{\"1\":{\"6\":1}}],[\"代理的对象类\",{\"1\":{\"3\":1}}],[\"代理的接口\",{\"1\":{\"3\":1}}],[\"代理对象在客户端和目标对象之间起到中介作用\",{\"1\":{\"1\":1}}],[\"代理模式\",{\"1\":{\"1\":1}}],[\"代理\",{\"0\":{\"0\":1,\"5\":1}}],[\"拿到被代理对象的引用\",{\"1\":{\"4\":1}}],[\"结合量价等综合研判后\",{\"1\":{\"398\":1}}],[\"结合业务设计\",{\"1\":{\"305\":1}}],[\"结构越复杂可用率越低\",{\"1\":{\"306\":1}}],[\"结果第二天\",{\"1\":{\"404\":1}}],[\"结果始终还是不涨\",{\"1\":{\"398\":1}}],[\"结果反而跌到成本以下\",{\"1\":{\"398\":1}}],[\"结果就是很有钱\",{\"1\":{\"390\":1}}],[\"结果\",{\"1\":{\"3\":1,\"6\":1}}],[\"结束事务\",{\"1\":{\"3\":2,\"6\":2}}],[\"hbase\",{\"1\":{\"315\":1}}],[\"hub\",{\"1\":{\"281\":1}}],[\"hugecapacity\",{\"1\":{\"19\":2}}],[\"html\",{\"1\":{\"94\":1,\"96\":1}}],[\"https\",{\"1\":{\"81\":1,\"268\":1,\"276\":3,\"278\":1,\"280\":1,\"284\":2,\"286\":1}}],[\"http\",{\"1\":{\"81\":3,\"266\":1,\"281\":1,\"286\":1,\"289\":1,\"291\":1,\"297\":1,\"348\":2}}],[\"href=\",{\"1\":{\"94\":1,\"96\":1}}],[\"header\",{\"1\":{\"286\":1}}],[\"heaphero\",{\"1\":{\"81\":1}}],[\"hence\",{\"1\":{\"90\":1}}],[\"helloproxytest\",{\"1\":{\"6\":1}}],[\"helloproxy\",{\"1\":{\"6\":5}}],[\"hello\",{\"1\":{\"3\":1,\"6\":10}}],[\"host\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"hostname\",{\"1\":{\"281\":1}}],[\"hostname设置访问地址\",{\"1\":{\"281\":1}}],[\"hostid\",{\"1\":{\"83\":1}}],[\"hotspot\",{\"1\":{\"70\":1}}],[\"home\",{\"1\":{\"59\":1}}],[\"h\",{\"1\":{\"42\":2}}],[\"harbor\",{\"0\":{\"280\":1,\"281\":1,\"282\":1},\"1\":{\"261\":1,\"280\":3,\"281\":3,\"283\":1}}],[\"happens\",{\"0\":{\"113\":1,\"189\":2},\"1\":{\"109\":1,\"218\":1}}],[\"have\",{\"1\":{\"60\":1,\"99\":2}}],[\"has\",{\"1\":{\"99\":1}}],[\"hasexternalrepositories\",{\"1\":{\"60\":1}}],[\"hash等\",{\"1\":{\"319\":1}}],[\"hash类\",{\"1\":{\"319\":1}}],[\"hashtable\",{\"0\":{\"45\":1,\"211\":1,\"235\":1},\"1\":{\"121\":1,\"211\":1}}],[\"hash\",{\"1\":{\"42\":1,\"85\":2,\"87\":1,\"88\":3,\"314\":1,\"319\":1}}],[\"hashmap的扩缩容\",{\"0\":{\"42\":1}}],[\"hashmap\",{\"0\":{\"41\":1,\"211\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1},\"1\":{\"41\":2,\"121\":1,\"211\":1,\"216\":1}}],[\"hashset\",{\"0\":{\"35\":1}}],[\"hashcode\",{\"0\":{\"208\":1,\"216\":1},\"1\":{\"14\":3,\"42\":1,\"208\":2,\"216\":2,\"231\":1,\"236\":3}}],[\"handler在处理某个连接的业务时\",{\"1\":{\"318\":1}}],[\"handler会完成read\",{\"1\":{\"318\":1}}],[\"handler\",{\"1\":{\"3\":2}}],[\"n字结构是价格运动的本质特征\",{\"1\":{\"398\":1}}],[\"n字结构\",{\"1\":{\"398\":1}}],[\"n2\",{\"1\":{\"322\":4}}],[\"n1\",{\"1\":{\"322\":2}}],[\"npm\",{\"1\":{\"291\":2}}],[\"nginx\",{\"0\":{\"289\":1},\"1\":{\"283\":2,\"289\":13,\"296\":2,\"297\":1,\"319\":1}}],[\"n\",{\"0\":{\"237\":1},\"1\":{\"97\":3}}],[\"number\",{\"1\":{\"94\":1}}],[\"null\",{\"1\":{\"3\":1,\"6\":1,\"42\":1,\"60\":13,\"95\":2,\"97\":1,\"98\":2,\"203\":1,\"211\":3}}],[\"nio\",{\"0\":{\"228\":1},\"1\":{\"90\":1,\"228\":3}}],[\"near\",{\"1\":{\"100\":1}}],[\"negative\",{\"1\":{\"96\":1,\"99\":1,\"100\":1}}],[\"next\",{\"1\":{\"96\":1}}],[\"needed\",{\"1\":{\"88\":1}}],[\"newinstance\",{\"1\":{\"215\":1}}],[\"newly\",{\"1\":{\"87\":1,\"88\":2,\"89\":1,\"91\":1,\"92\":1}}],[\"newvalue\",{\"1\":{\"40\":4}}],[\"newcapacity\",{\"1\":{\"19\":6}}],[\"newproxyinstance\",{\"1\":{\"3\":1}}],[\"new\",{\"0\":{\"134\":1},\"1\":{\"3\":3,\"6\":2,\"19\":2,\"60\":8,\"89\":1,\"90\":2,\"91\":1,\"92\":1,\"96\":1,\"213\":8,\"215\":1}}],[\"na\",{\"1\":{\"281\":1}}],[\"native\",{\"1\":{\"66\":1,\"68\":1}}],[\"namespace\",{\"1\":{\"289\":2,\"291\":2,\"296\":1,\"297\":5}}],[\"name=kubernetes\",{\"1\":{\"279\":1}}],[\"name\",{\"1\":{\"60\":25,\"269\":1,\"289\":5,\"291\":5,\"296\":1,\"297\":16,\"314\":1}}],[\"nosql\",{\"0\":{\"315\":1},\"1\":{\"370\":1}}],[\"now\",{\"1\":{\"292\":1}}],[\"nodejs\",{\"1\":{\"288\":1,\"291\":2}}],[\"nodes\",{\"1\":{\"279\":1}}],[\"node\",{\"0\":{\"273\":1},\"1\":{\"275\":1,\"288\":1}}],[\"node<k\",{\"1\":{\"41\":1}}],[\"no\",{\"1\":{\"99\":1,\"190\":1,\"286\":2}}],[\"notifyall\",{\"0\":{\"154\":1},\"1\":{\"137\":1,\"138\":1,\"154\":2,\"231\":1}}],[\"notify\",{\"0\":{\"154\":1},\"1\":{\"137\":1,\"138\":1,\"154\":2,\"231\":1}}],[\"note\",{\"1\":{\"87\":1,\"100\":1}}],[\"not\",{\"1\":{\"60\":1,\"89\":1,\"90\":2,\"91\":1,\"92\":1,\"96\":1,\"97\":1,\"98\":1,\"476\":1}}],[\"mvp\",{\"1\":{\"351\":1}}],[\"mvc\",{\"1\":{\"351\":1}}],[\"mq\",{\"1\":{\"323\":1,\"345\":1}}],[\"mydomain\",{\"1\":{\"281\":4}}],[\"mysql数据库认证\",{\"1\":{\"281\":1}}],[\"mysql数据库root用户默认密码root123\",{\"1\":{\"281\":1}}],[\"mysql\",{\"1\":{\"229\":1,\"314\":2}}],[\"mkdir\",{\"1\":{\"268\":1,\"291\":1,\"296\":1,\"297\":1}}],[\"mm可以确保线程c至少能看到写线程a对final引用的对象的成员域的写入\",{\"1\":{\"176\":1}}],[\"metadata\",{\"1\":{\"289\":4,\"291\":4,\"297\":4}}],[\"methodproxy\",{\"1\":{\"6\":1}}],[\"methodinterceptor\",{\"1\":{\"6\":1}}],[\"method\",{\"1\":{\"3\":3,\"6\":2,\"92\":1,\"98\":2,\"99\":1,\"229\":1}}],[\"memory\",{\"1\":{\"108\":2,\"187\":2}}],[\"mirror\",{\"1\":{\"268\":1}}],[\"mirrors\",{\"1\":{\"266\":1,\"268\":1,\"279\":1}}],[\"millisec\",{\"1\":{\"145\":2}}],[\"might\",{\"1\":{\"100\":1}}],[\"migration\",{\"1\":{\"92\":1}}],[\"min\",{\"1\":{\"41\":1,\"99\":1}}],[\"mincapacity\",{\"1\":{\"19\":10}}],[\"mongdb\",{\"1\":{\"334\":1}}],[\"mongodb\",{\"1\":{\"315\":1}}],[\"more\",{\"1\":{\"90\":1,\"99\":1}}],[\"mode\",{\"1\":{\"281\":1,\"327\":1}}],[\"modification\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"modcount\",{\"1\":{\"41\":1,\"234\":2}}],[\"m\",{\"1\":{\"40\":1}}],[\"matchlabels\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"math\",{\"1\":{\"19\":1,\"99\":1}}],[\"manage\",{\"1\":{\"287\":1}}],[\"manager\",{\"1\":{\"266\":1}}],[\"maven\",{\"1\":{\"286\":3,\"288\":1,\"291\":1}}],[\"macd未背离\",{\"1\":{\"455\":1,\"463\":1}}],[\"macd面积顶背离\",{\"1\":{\"445\":1}}],[\"macd属于金叉之后\",{\"1\":{\"431\":1}}],[\"macd就会在o轴上下缓缓游行较长时间\",{\"1\":{\"398\":1}}],[\"macd在情绪流龙头战法中的实际运用\",{\"1\":{\"398\":1}}],[\"macd在情绪流中的运用\",{\"1\":{\"398\":1}}],[\"macd死叉了\",{\"1\":{\"398\":1}}],[\"macd金叉后\",{\"1\":{\"438\":1}}],[\"macd金叉\",{\"1\":{\"398\":1,\"417\":1,\"424\":1,\"448\":1}}],[\"macos\",{\"1\":{\"276\":1}}],[\"machine\",{\"1\":{\"54\":1}}],[\"master\",{\"0\":{\"272\":1},\"1\":{\"272\":1,\"275\":1,\"342\":1}}],[\"may\",{\"1\":{\"90\":1}}],[\"mark\",{\"1\":{\"78\":2}}],[\"mapper\",{\"1\":{\"265\":1}}],[\"mappingfunction\",{\"1\":{\"40\":3}}],[\"map<\",{\"1\":{\"40\":1}}],[\"map\",{\"0\":{\"40\":1,\"230\":1},\"1\":{\"40\":1,\"211\":2,\"230\":1}}],[\"maxgcpausemillis=50\",{\"1\":{\"78\":1}}],[\"maximum\",{\"1\":{\"41\":1}}],[\"max\",{\"1\":{\"19\":6,\"281\":1}}],[\"maintainer\",{\"1\":{\"291\":1}}],[\"main\",{\"1\":{\"3\":1,\"6\":1,\"144\":1,\"145\":1}}],[\"=10这句时\",{\"1\":{\"106\":1}}],[\"==\",{\"0\":{\"207\":1,\"220\":1},\"1\":{\"19\":1,\"42\":1,\"60\":2,\"95\":1,\"97\":2,\"98\":3,\"207\":1}}],[\"=\",{\"1\":{\"3\":3,\"6\":3,\"19\":2,\"41\":6,\"42\":1,\"60\":31,\"85\":1,\"87\":1,\"88\":2,\"89\":1,\"91\":1,\"92\":1,\"97\":7,\"98\":1,\"99\":9,\"100\":6,\"106\":1,\"176\":1,\"213\":4,\"221\":2,\"281\":30,\"283\":2}}],[\"+=\",{\"1\":{\"107\":1,\"221\":1}}],[\"+g1younggensize=512m\",{\"1\":{\"78\":1}}],[\"+unlockexperimentalvmoptions\",{\"1\":{\"78\":1}}],[\"+useg1gc\",{\"1\":{\"78\":1}}],[\"+useconcmarksweepgc选项\",{\"1\":{\"78\":1}}],[\"+useparnewgc选项来开启\",{\"1\":{\"78\":2}}],[\"+新生代\",{\"1\":{\"71\":1}}],[\"+老年区\",{\"1\":{\"71\":1}}],[\"+\",{\"1\":{\"3\":1,\"6\":1,\"19\":2,\"60\":14,\"71\":2,\"78\":1,\"107\":1,\"398\":2}}],[\"osgi架构\",{\"0\":{\"362\":1}}],[\"o使用率\",{\"1\":{\"319\":1}}],[\"o多路复用技术的来源\",{\"1\":{\"318\":1}}],[\"o较高\",{\"1\":{\"315\":1}}],[\"omgt\",{\"1\":{\"291\":12,\"296\":1}}],[\"otn\",{\"1\":{\"286\":1}}],[\"otherwise\",{\"1\":{\"95\":1,\"97\":1,\"98\":1,\"100\":2}}],[\"other\",{\"1\":{\"88\":1,\"99\":1}}],[\"o=vmware\",{\"1\":{\"283\":1}}],[\"o=\",{\"1\":{\"283\":1}}],[\"oom\",{\"0\":{\"224\":1},\"1\":{\"224\":1}}],[\"operator\",{\"1\":{\"98\":1,\"99\":1}}],[\"option\",{\"1\":{\"83\":4}}],[\"options\",{\"1\":{\"83\":1}}],[\"order\",{\"1\":{\"314\":3}}],[\"ordering\",{\"1\":{\"99\":1}}],[\"org\",{\"1\":{\"286\":1}}],[\"oraclelicense=accept\",{\"1\":{\"286\":1}}],[\"oracle\",{\"1\":{\"286\":2}}],[\"or\",{\"1\":{\"96\":1,\"99\":3,\"100\":1}}],[\"original\",{\"0\":{\"88\":1},\"1\":{\"88\":5}}],[\"obtaining\",{\"1\":{\"92\":1}}],[\"obj\",{\"1\":{\"6\":2,\"204\":4}}],[\"objectclass=person\",{\"1\":{\"281\":1}}],[\"object\",{\"0\":{\"97\":2,\"231\":1},\"1\":{\"3\":5,\"6\":3,\"14\":2,\"17\":1,\"40\":7,\"87\":1,\"88\":1,\"94\":1,\"97\":6,\"98\":1,\"99\":4,\"100\":2,\"137\":3,\"138\":5,\"154\":1,\"155\":1}}],[\"of\",{\"1\":{\"87\":1,\"88\":4,\"89\":4,\"90\":5,\"91\":3,\"92\":3,\"94\":4,\"96\":4,\"97\":1,\"98\":2,\"99\":5,\"100\":5}}],[\"online\",{\"1\":{\"280\":2}}],[\"only\",{\"1\":{\"95\":1,\"97\":1}}],[\"one\",{\"1\":{\"98\":1,\"99\":1}}],[\"on\",{\"1\":{\"60\":1,\"96\":1,\"99\":1,\"281\":3}}],[\"ou=harbor\",{\"1\":{\"283\":1}}],[\"ou=people\",{\"1\":{\"281\":2}}],[\"our\",{\"1\":{\"60\":1}}],[\"outofmemoryerror\",{\"1\":{\"19\":2,\"66\":1,\"68\":1}}],[\"out\",{\"1\":{\"3\":3,\"6\":3}}],[\"oader\",{\"1\":{\"59\":1}}],[\"old的并行版本\",{\"1\":{\"78\":1}}],[\"old是serial\",{\"1\":{\"78\":1}}],[\"old是parallel\",{\"1\":{\"78\":1}}],[\"old策略进行gc\",{\"1\":{\"78\":1}}],[\"old都是单线程进行gc\",{\"1\":{\"78\":1}}],[\"old\",{\"1\":{\"78\":7}}],[\"oldvalue\",{\"1\":{\"40\":2}}],[\"oldcapacity\",{\"1\":{\"19\":5}}],[\"over\",{\"1\":{\"90\":1}}],[\"overflow\",{\"1\":{\"19\":3}}],[\"override\",{\"1\":{\"3\":2,\"6\":1,\"60\":2}}],[\"o\",{\"1\":{\"3\":5,\"14\":2,\"104\":2,\"148\":1,\"210\":1,\"284\":1,\"318\":1}}],[\"id\",{\"1\":{\"319\":1,\"342\":1}}],[\"identity\",{\"1\":{\"281\":1}}],[\"ip的流程就是应用层>传输层>网络层>物理>数据链路层\",{\"1\":{\"348\":1}}],[\"ip\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"illegalmonitorstateexeception\",{\"1\":{\"154\":1}}],[\"ilp\",{\"1\":{\"108\":1}}],[\"i>\",{\"1\":{\"99\":2}}],[\"ignoring\",{\"1\":{\"98\":5}}],[\"ignore\",{\"1\":{\"60\":3}}],[\"i++其实是一个复合操作\",{\"1\":{\"184\":1}}],[\"i++为什么不能保证原子性\",{\"0\":{\"184\":1}}],[\"i++\",{\"1\":{\"97\":1}}],[\"img\",{\"1\":{\"244\":6}}],[\"import\",{\"1\":{\"219\":1,\"284\":1}}],[\"implements\",{\"1\":{\"3\":2,\"6\":1}}],[\"imagepullpolicy\",{\"1\":{\"291\":1}}],[\"image\",{\"1\":{\"133\":1,\"289\":1,\"291\":1,\"296\":2,\"297\":3}}],[\"immutable\",{\"1\":{\"87\":1,\"88\":1,\"118\":1}}],[\"io\",{\"0\":{\"227\":1,\"228\":1},\"1\":{\"81\":4,\"228\":1,\"284\":3,\"289\":1,\"291\":1,\"297\":1}}],[\"item\",{\"1\":{\"288\":1}}],[\"it\",{\"1\":{\"60\":1,\"87\":1,\"88\":1,\"89\":1,\"98\":1,\"354\":1}}],[\"i\",{\"1\":{\"60\":3,\"97\":3,\"104\":2,\"106\":2,\"107\":3,\"148\":1,\"315\":1,\"318\":1,\"319\":1}}],[\"islation\",{\"1\":{\"324\":1}}],[\"is\",{\"1\":{\"60\":2,\"85\":1,\"87\":1,\"88\":3,\"90\":3,\"92\":3,\"94\":1,\"95\":2,\"96\":5,\"97\":3,\"98\":2,\"99\":13,\"100\":4}}],[\"istraceenabled\",{\"1\":{\"60\":8}}],[\"isdebugenabled\",{\"1\":{\"60\":10}}],[\"isempty\",{\"0\":{\"95\":1},\"1\":{\"14\":1,\"40\":1,\"95\":1}}],[\"if\",{\"1\":{\"19\":4,\"60\":39,\"95\":3,\"96\":2,\"97\":7,\"98\":3,\"99\":10,\"100\":5}}],[\"ingress\",{\"1\":{\"289\":2,\"291\":4,\"297\":4}}],[\"inc\",{\"1\":{\"283\":1}}],[\"installer\",{\"1\":{\"280\":2}}],[\"install\",{\"1\":{\"265\":1,\"266\":1,\"279\":1,\"282\":1,\"283\":1,\"284\":1,\"291\":1,\"295\":1}}],[\"instanceof\",{\"0\":{\"204\":1},\"1\":{\"97\":1,\"204\":1}}],[\"instruction\",{\"1\":{\"108\":1}}],[\"indexoutofboundsexception\",{\"1\":{\"96\":1}}],[\"indexing\",{\"1\":{\"96\":1}}],[\"index\",{\"0\":{\"96\":1},\"1\":{\"96\":15,\"99\":5,\"100\":2}}],[\"in\",{\"1\":{\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"94\":1,\"98\":1,\"99\":4,\"100\":1}}],[\"initialadminpassowrd\",{\"1\":{\"284\":1}}],[\"initializes\",{\"1\":{\"87\":1,\"88\":1}}],[\"initialization\",{\"0\":{\"65\":1}}],[\"initial\",{\"1\":{\"41\":1,\"89\":1}}],[\"initialcapacity\",{\"1\":{\"17\":1}}],[\"intb+=a\",{\"1\":{\"221\":1}}],[\"into\",{\"1\":{\"90\":1}}],[\"intel\",{\"1\":{\"108\":1}}],[\"integer\",{\"1\":{\"19\":2,\"99\":2,\"203\":1,\"205\":1}}],[\"interruptedexception\",{\"0\":{\"148\":1},\"1\":{\"145\":1,\"148\":1,\"149\":1}}],[\"interrupted\",{\"0\":{\"149\":1},\"1\":{\"113\":1,\"149\":2,\"218\":1}}],[\"interrupt\",{\"1\":{\"113\":1,\"148\":1,\"149\":2,\"150\":1,\"218\":1}}],[\"interoperability\",{\"1\":{\"85\":1}}],[\"interval\",{\"1\":{\"83\":1}}],[\"intercept\",{\"1\":{\"6\":1}}],[\"interface\",{\"1\":{\"3\":1}}],[\"int\",{\"0\":{\"96\":1,\"100\":1},\"1\":{\"14\":1,\"19\":7,\"40\":1,\"41\":4,\"60\":1,\"85\":1,\"94\":1,\"96\":1,\"97\":2,\"99\":5,\"100\":4,\"203\":2}}],[\"invokesuper\",{\"1\":{\"6\":1}}],[\"invoke\",{\"1\":{\"3\":2}}],[\"invocationhandler\",{\"1\":{\"3\":1}}],[\"invocationhandler是一个接口\",{\"1\":{\"2\":1}}],[\"cp\",{\"1\":{\"322\":1,\"323\":1,\"325\":1}}],[\"cpu不必唤醒所有线程\",{\"1\":{\"161\":1}}],[\"cpu唤醒阻塞线程的开销比非公平锁大\",{\"1\":{\"161\":1}}],[\"cpu寄存器\",{\"1\":{\"107\":1}}],[\"cpu缓存引起\",{\"0\":{\"106\":1}}],[\"cpu\",{\"1\":{\"69\":1,\"70\":1,\"104\":5,\"107\":2,\"135\":1,\"137\":1,\"187\":3,\"225\":1,\"318\":1}}],[\"cmd\",{\"1\":{\"291\":1}}],[\"cms+serial\",{\"1\":{\"78\":1}}],[\"cms\",{\"1\":{\"78\":3}}],[\"cms收集器\",{\"1\":{\"78\":1}}],[\"cn=notarysigner\",{\"1\":{\"283\":1}}],[\"cn=\",{\"1\":{\"283\":1}}],[\"c=us\",{\"1\":{\"283\":1}}],[\"c=\",{\"1\":{\"283\":1}}],[\"creation\",{\"1\":{\"281\":1}}],[\"created\",{\"1\":{\"87\":1,\"88\":2,\"89\":1,\"91\":1,\"92\":1}}],[\"create\",{\"1\":{\"6\":1}}],[\"crt\",{\"1\":{\"281\":2,\"283\":1}}],[\"customize\",{\"1\":{\"281\":1}}],[\"currently\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"cfg\",{\"1\":{\"281\":1}}],[\"cdn\",{\"1\":{\"373\":1}}],[\"cd\",{\"1\":{\"281\":1,\"291\":8}}],[\"certificate\",{\"1\":{\"286\":1}}],[\"cert\",{\"1\":{\"281\":5,\"283\":1}}],[\"centos\",{\"1\":{\"266\":1}}],[\"ce\",{\"1\":{\"266\":3}}],[\"c2\",{\"1\":{\"98\":1,\"99\":3}}],[\"c1\",{\"1\":{\"98\":1,\"99\":3}}],[\"charat\",{\"0\":{\"96\":1},\"1\":{\"96\":1,\"99\":2}}],[\"characters\",{\"1\":{\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"94\":1,\"97\":1,\"98\":3,\"99\":2}}],[\"character\",{\"1\":{\"85\":1,\"87\":1,\"89\":3,\"94\":1,\"96\":1,\"98\":4,\"99\":5,\"100\":1,\"203\":1}}],[\"charsetdecoder\",{\"1\":{\"90\":1}}],[\"charset\",{\"1\":{\"90\":4}}],[\"char\",{\"0\":{\"89\":1},\"1\":{\"85\":1,\"89\":1,\"96\":7,\"97\":2,\"98\":2,\"99\":4,\"100\":2,\"203\":1}}],[\"check\",{\"1\":{\"286\":1}}],[\"checkexception\",{\"1\":{\"223\":1}}],[\"checkpackagedefinition\",{\"1\":{\"60\":2}}],[\"checkstateforclassloading\",{\"1\":{\"60\":1}}],[\"childrenhello\",{\"1\":{\"3\":1}}],[\"children\",{\"1\":{\"3\":4}}],[\"ca\",{\"1\":{\"323\":2}}],[\"cap\",{\"0\":{\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"325\":1},\"1\":{\"323\":2,\"325\":1}}],[\"capacity\",{\"1\":{\"19\":1,\"41\":3}}],[\"callable\",{\"1\":{\"140\":2}}],[\"cas\",{\"1\":{\"126\":2,\"127\":1,\"128\":2}}],[\"case\",{\"1\":{\"98\":5,\"99\":2}}],[\"cachedthreadpool\",{\"1\":{\"143\":1}}],[\"cache\",{\"1\":{\"60\":2,\"85\":1}}],[\"cat\",{\"1\":{\"279\":1,\"284\":1}}],[\"catch\",{\"0\":{\"222\":1},\"1\":{\"60\":10}}],[\"catalina\",{\"1\":{\"59\":1}}],[\"cli2\",{\"1\":{\"276\":3}}],[\"cli\",{\"0\":{\"276\":1},\"1\":{\"289\":1}}],[\"clonenotsupportedexception\",{\"1\":{\"231\":1}}],[\"clone\",{\"1\":{\"215\":1,\"231\":2}}],[\"cloneable\",{\"1\":{\"211\":2,\"231\":3}}],[\"cl\",{\"1\":{\"60\":4}}],[\"clear\",{\"1\":{\"14\":1,\"40\":1}}],[\"clazz\",{\"1\":{\"6\":2,\"60\":31}}],[\"classnotfoundexception\",{\"1\":{\"60\":15}}],[\"class<\",{\"1\":{\"60\":4}}],[\"class<t>\",{\"1\":{\"6\":1}}],[\"classloader1\",{\"1\":{\"60\":1}}],[\"classloader\",{\"1\":{\"56\":1,\"60\":3}}],[\"class文件结构\",{\"1\":{\"55\":1}}],[\"class\",{\"1\":{\"3\":6,\"4\":1,\"6\":4,\"55\":2,\"56\":3,\"60\":13,\"62\":1,\"65\":1,\"90\":1,\"204\":3,\"229\":7}}],[\"c\",{\"1\":{\"14\":4,\"113\":2,\"127\":1,\"128\":1,\"218\":2,\"322\":3,\"351\":1}}],[\"cookiecutter\",{\"0\":{\"295\":1},\"1\":{\"295\":1,\"296\":2,\"297\":36}}],[\"cookie\",{\"1\":{\"286\":2}}],[\"cookies\",{\"1\":{\"286\":1}}],[\"corresponding\",{\"1\":{\"98\":1}}],[\"copied\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"copyof\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"copyonwritearrayset\",{\"0\":{\"38\":1}}],[\"copyonwritearraylist\",{\"0\":{\"37\":1}}],[\"copy\",{\"1\":{\"20\":1,\"88\":2}}],[\"count\",{\"1\":{\"83\":1,\"314\":2}}],[\"commit\",{\"1\":{\"336\":1}}],[\"committed\",{\"1\":{\"324\":1}}],[\"common\",{\"1\":{\"283\":12}}],[\"commonclassloader\",{\"1\":{\"59\":1}}],[\"com>\",{\"1\":{\"281\":1}}],[\"com\",{\"1\":{\"229\":1,\"266\":1,\"268\":1,\"276\":3,\"279\":1,\"280\":1,\"281\":4,\"286\":2,\"291\":1}}],[\"comparison\",{\"1\":{\"99\":1}}],[\"compareandset\",{\"1\":{\"127\":1}}],[\"compared\",{\"1\":{\"98\":1,\"99\":2}}],[\"compareto\",{\"0\":{\"99\":1},\"1\":{\"97\":1,\"99\":4}}],[\"compare\",{\"1\":{\"97\":1,\"98\":1,\"126\":1}}],[\"compares\",{\"1\":{\"97\":1,\"98\":1,\"99\":1}}],[\"computeifpresent\",{\"1\":{\"40\":1}}],[\"computeifabsent\",{\"1\":{\"40\":1}}],[\"connection\",{\"1\":{\"318\":2}}],[\"conf\",{\"1\":{\"283\":3}}],[\"configure\",{\"1\":{\"287\":1}}],[\"configuration\",{\"1\":{\"283\":10}}],[\"config\",{\"1\":{\"266\":1,\"283\":15}}],[\"condition\",{\"1\":{\"156\":2}}],[\"contract\",{\"1\":{\"291\":4}}],[\"control\",{\"1\":{\"90\":1,\"272\":1}}],[\"contents\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"containerport\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"containers\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"contained\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"containsvalue\",{\"1\":{\"40\":1}}],[\"containskey\",{\"1\":{\"40\":1}}],[\"containsall\",{\"1\":{\"14\":1}}],[\"contains\",{\"1\":{\"14\":1,\"91\":1,\"92\":1}}],[\"consistency\",{\"1\":{\"321\":1,\"324\":2}}],[\"considered\",{\"1\":{\"98\":2}}],[\"considerations\",{\"1\":{\"98\":1}}],[\"constructs\",{\"1\":{\"90\":1}}],[\"constructor\",{\"1\":{\"87\":1,\"88\":1,\"90\":1,\"92\":1,\"229\":1}}],[\"conscious\",{\"1\":{\"19\":1}}],[\"concurrentmodificationexception\",{\"1\":{\"234\":1}}],[\"concurrent\",{\"1\":{\"78\":2,\"156\":1}}],[\"concurrentlinkeddeque\",{\"0\":{\"53\":1}}],[\"concurrentlinkedqueue\",{\"0\":{\"52\":1}}],[\"concurrentskiplistmap\",{\"0\":{\"47\":1}}],[\"concurrentskiplistset\",{\"0\":{\"39\":1}}],[\"concurrenthashmap\",{\"0\":{\"46\":1,\"238\":1}}],[\"collections\",{\"0\":{\"212\":1},\"1\":{\"212\":1}}],[\"collection<\",{\"1\":{\"14\":4}}],[\"collection\",{\"0\":{\"14\":1,\"212\":1},\"1\":{\"14\":1,\"16\":2,\"212\":1}}],[\"code\",{\"1\":{\"5\":1,\"19\":1,\"85\":1,\"87\":1,\"88\":3,\"89\":1,\"90\":2,\"91\":1,\"92\":3,\"94\":1,\"95\":5,\"96\":12,\"97\":7,\"98\":11,\"99\":13,\"100\":6,\"132\":1}}],[\"cglib是针对类来实现代理的\",{\"1\":{\"11\":1}}],[\"cglib动态代理是通过字节码底层继承要代理类来实现\",{\"1\":{\"9\":1}}],[\"cglib动态代理\",{\"1\":{\"8\":1}}],[\"cglib通过继承方式实现代理\",{\"1\":{\"5\":1}}],[\"cglib\",{\"0\":{\"0\":1,\"5\":1},\"1\":{\"5\":1}}],[\"s和\",{\"1\":{\"351\":1}}],[\"slave\",{\"1\":{\"342\":1}}],[\"sleep\",{\"0\":{\"145\":1,\"155\":1},\"1\":{\"138\":3,\"145\":2,\"149\":1,\"155\":2,\"184\":1,\"291\":1}}],[\"sql\",{\"1\":{\"314\":2,\"370\":1}}],[\"sf\",{\"1\":{\"291\":1}}],[\"schema\",{\"1\":{\"315\":1}}],[\"scope\",{\"1\":{\"281\":1}}],[\"scavenge策略主要是关注一个可控的吞吐量\",{\"1\":{\"78\":1}}],[\"scavenge\",{\"1\":{\"78\":2}}],[\"scavenge收集器的老年代版本\",{\"1\":{\"78\":1}}],[\"scavenge收集器类似parnew收集器\",{\"1\":{\"78\":1}}],[\"smtp\",{\"1\":{\"281\":1}}],[\"smaller\",{\"1\":{\"99\":1}}],[\"smallest\",{\"1\":{\"99\":1}}],[\"ssl\",{\"1\":{\"281\":3}}],[\"ssl需要设置on\",{\"1\":{\"281\":1}}],[\"shardingsphere\",{\"1\":{\"314\":1}}],[\"share\",{\"1\":{\"291\":1}}],[\"shanghai\",{\"1\":{\"291\":1}}],[\"sh\",{\"1\":{\"282\":1,\"283\":1}}],[\"shutdownnow\",{\"1\":{\"150\":1}}],[\"shutdown\",{\"1\":{\"150\":1}}],[\"short\",{\"1\":{\"203\":2}}],[\"shorter\",{\"1\":{\"99\":1}}],[\"should\",{\"1\":{\"90\":1}}],[\"swap\",{\"1\":{\"126\":1}}],[\"sweep\",{\"1\":{\"78\":2}}],[\"saved\",{\"1\":{\"283\":1}}],[\"sample\",{\"1\":{\"281\":1}}],[\"same\",{\"1\":{\"88\":1,\"97\":1,\"98\":5,\"100\":1}}],[\"sayhell\",{\"1\":{\"3\":3,\"6\":2}}],[\"signalall\",{\"0\":{\"156\":1},\"1\":{\"156\":1}}],[\"signal\",{\"0\":{\"156\":1},\"1\":{\"156\":1}}],[\"singlethreadexecutor\",{\"1\":{\"143\":1}}],[\"since\",{\"1\":{\"87\":1,\"88\":1,\"90\":1,\"92\":1,\"95\":1}}],[\"size\",{\"1\":{\"14\":1,\"16\":1,\"19\":3,\"40\":1,\"41\":1}}],[\"soa\",{\"0\":{\"353\":1},\"1\":{\"357\":2}}],[\"soa架构\",{\"1\":{\"349\":1}}],[\"soft\",{\"1\":{\"324\":1}}],[\"softreference\",{\"1\":{\"213\":2}}],[\"sof\",{\"0\":{\"224\":1},\"1\":{\"224\":1}}],[\"son进行向上转型得到father\",{\"1\":{\"167\":1}}],[\"some\",{\"1\":{\"99\":1}}],[\"so\",{\"1\":{\"87\":1,\"88\":1,\"89\":1,\"96\":1}}],[\"s|ms\",{\"1\":{\"83\":1}}],[\"s系统的服务端上\",{\"1\":{\"78\":1}}],[\"sysconfig\",{\"1\":{\"285\":1}}],[\"systemctl\",{\"1\":{\"263\":2,\"266\":1,\"267\":1,\"268\":2,\"284\":1}}],[\"system\",{\"1\":{\"3\":3,\"6\":3}}],[\"synchronized关键字和lock的实现类都是悲观锁\",{\"1\":{\"158\":1}}],[\"synchronized和lock保证每个时刻是有一个线程执行同步代码\",{\"1\":{\"116\":1}}],[\"synchronized和lock能保证同一时刻只有一个线程获取锁然后执行同步代码\",{\"1\":{\"115\":1}}],[\"synchronized\",{\"0\":{\"111\":1,\"191\":1},\"1\":{\"60\":1,\"91\":2,\"109\":1,\"148\":1,\"151\":1}}],[\"subj\",{\"1\":{\"283\":2}}],[\"subsequent\",{\"1\":{\"89\":1,\"91\":1,\"92\":1}}],[\"substring\",{\"1\":{\"60\":1,\"100\":3}}],[\"sudo\",{\"1\":{\"268\":4,\"269\":2,\"284\":2}}],[\"such\",{\"1\":{\"99\":1}}],[\"surrogate\",{\"1\":{\"96\":1}}],[\"survivorratio=6\",{\"1\":{\"78\":1}}],[\"superclass\",{\"1\":{\"60\":1}}],[\"super\",{\"1\":{\"14\":1,\"40\":3,\"60\":1}}],[\"session\",{\"1\":{\"319\":1}}],[\"selector\",{\"1\":{\"289\":2,\"291\":2,\"297\":2}}],[\"self\",{\"1\":{\"281\":1}}],[\"search\",{\"1\":{\"281\":1}}],[\"searchdn\",{\"1\":{\"281\":1}}],[\"searching\",{\"1\":{\"60\":1}}],[\"securebackup\",{\"1\":{\"286\":1}}],[\"security\",{\"1\":{\"60\":3,\"291\":1}}],[\"securitymanager\",{\"1\":{\"60\":6}}],[\"secrets\",{\"1\":{\"284\":1}}],[\"secret\",{\"1\":{\"283\":1}}],[\"secretkey\",{\"1\":{\"281\":1,\"283\":1}}],[\"server\",{\"1\":{\"281\":4,\"291\":6}}],[\"serviceport\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"servicename\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"service\",{\"1\":{\"263\":2,\"285\":1,\"289\":1,\"291\":3,\"297\":3}}],[\"serializable\",{\"1\":{\"211\":2,\"324\":1}}],[\"serialversionuid\",{\"1\":{\"85\":2}}],[\"serial和serial\",{\"1\":{\"78\":1}}],[\"serial\",{\"1\":{\"78\":5}}],[\"serial收集器\",{\"1\":{\"78\":1}}],[\"see\",{\"1\":{\"97\":2,\"98\":1}}],[\"sequence\",{\"1\":{\"87\":1,\"88\":1,\"89\":1,\"91\":1,\"92\":1,\"94\":1,\"96\":1,\"97\":1,\"99\":2,\"100\":1}}],[\"se\",{\"1\":{\"59\":1,\"60\":3}}],[\"set\",{\"0\":{\"230\":1},\"1\":{\"230\":1}}],[\"setaccessible\",{\"1\":{\"229\":1}}],[\"setdaemon\",{\"1\":{\"144\":1}}],[\"set<map\",{\"1\":{\"41\":1}}],[\"set的父类\",{\"1\":{\"14\":1}}],[\"setcallback\",{\"1\":{\"6\":1}}],[\"setsuperclass\",{\"1\":{\"6\":1}}],[\"spec\",{\"1\":{\"289\":4,\"291\":4,\"297\":4}}],[\"specified\",{\"1\":{\"90\":1,\"96\":3,\"97\":1,\"100\":2}}],[\"springboot\",{\"0\":{\"290\":1}}],[\"spring\",{\"0\":{\"241\":1}}],[\"spring会强制使用cglib来实现动态代理\",{\"1\":{\"10\":1}}],[\"spotify\",{\"1\":{\"81\":1}}],[\"spliterator\",{\"1\":{\"14\":1}}],[\"spirng默认采用jdk动态代理实现机制\",{\"1\":{\"10\":1}}],[\"steps\",{\"1\":{\"288\":1}}],[\"st=california\",{\"1\":{\"283\":1}}],[\"st=\",{\"1\":{\"283\":1}}],[\"stopped\",{\"1\":{\"269\":1}}],[\"stop\",{\"1\":{\"263\":1}}],[\"storeload\",{\"1\":{\"190\":2}}],[\"storestore\",{\"1\":{\"190\":2,\"218\":1}}],[\"storage\",{\"0\":{\"131\":1},\"1\":{\"85\":1,\"280\":1}}],[\"state\",{\"1\":{\"324\":1}}],[\"status\",{\"1\":{\"289\":2,\"291\":2,\"297\":2}}],[\"static\",{\"0\":{\"219\":1},\"1\":{\"3\":1,\"6\":1,\"19\":1,\"85\":1}}],[\"stable\",{\"1\":{\"284\":2}}],[\"staic\",{\"1\":{\"219\":1}}],[\"start\",{\"1\":{\"113\":1,\"218\":1,\"266\":1,\"291\":1}}],[\"starting\",{\"1\":{\"100\":1}}],[\"starts\",{\"1\":{\"100\":1}}],[\"startswith\",{\"0\":{\"100\":1},\"1\":{\"100\":2}}],[\"stackoverflowerror\",{\"1\":{\"66\":1,\"68\":1}}],[\"stack\",{\"0\":{\"34\":1},\"1\":{\"15\":1}}],[\"str\",{\"1\":{\"213\":1}}],[\"stream\",{\"1\":{\"14\":1}}],[\"stringindexoutofboundsexception\",{\"1\":{\"96\":1}}],[\"stringbuilder\",{\"0\":{\"92\":1,\"209\":1},\"1\":{\"92\":4,\"209\":2}}],[\"stringbufer\",{\"1\":{\"91\":1}}],[\"stringbuffer\",{\"0\":{\"91\":1,\"209\":1},\"1\":{\"91\":5,\"209\":2}}],[\"strings\",{\"1\":{\"87\":1,\"88\":1,\"98\":2,\"99\":6}}],[\"string源码\",{\"0\":{\"84\":1}}],[\"string\",{\"0\":{\"87\":1,\"88\":2,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"98\":1,\"99\":1,\"100\":1,\"209\":1},\"1\":{\"3\":3,\"6\":2,\"60\":5,\"85\":1,\"87\":2,\"88\":6,\"89\":4,\"90\":3,\"91\":6,\"92\":8,\"94\":2,\"96\":2,\"97\":10,\"98\":6,\"99\":19,\"100\":4,\"209\":2,\"213\":5}}],[\"s\",{\"1\":{\"3\":3,\"6\":2,\"90\":1,\"213\":1,\"351\":1}}],[\"实体板中\",{\"1\":{\"398\":1}}],[\"实体板\",{\"1\":{\"398\":1}}],[\"实时性\",{\"1\":{\"344\":1}}],[\"实战\",{\"0\":{\"329\":1}}],[\"实际收益并不弱于主线题材龙头\",{\"1\":{\"398\":1}}],[\"实际使用时修改下\",{\"1\":{\"281\":1}}],[\"实际上\",{\"1\":{\"173\":1,\"398\":1}}],[\"实际上虚拟机会优化掉很大一部分不必要的加锁\",{\"1\":{\"124\":1}}],[\"实际上最终还是把字节码解释成具体平台上的机器指令执行\",{\"1\":{\"54\":1}}],[\"实际的应用一般不会只是简单的打印日志的\",{\"1\":{\"2\":1}}],[\"实现盈利\",{\"1\":{\"398\":1}}],[\"实现业务功能\",{\"1\":{\"363\":1}}],[\"实现更简单省去连接通道和状态管理\",{\"1\":{\"334\":1}}],[\"实现最终数据一致性\",{\"1\":{\"323\":1}}],[\"实现方案\",{\"1\":{\"318\":1}}],[\"实现方法\",{\"1\":{\"314\":1}}],[\"实现资源的节约\",{\"1\":{\"318\":1}}],[\"实现复杂度\",{\"1\":{\"314\":1}}],[\"实现对象的浅复制\",{\"1\":{\"231\":1}}],[\"实现了\",{\"1\":{\"211\":2}}],[\"实现可见性\",{\"0\":{\"182\":1}}],[\"实现的\",{\"1\":{\"151\":2}}],[\"实现接口会更好一些\",{\"1\":{\"141\":1}}],[\"实现接口\",{\"0\":{\"141\":1}}],[\"实现\",{\"1\":{\"140\":3,\"187\":1}}],[\"实现创建对象\",{\"1\":{\"87\":1}}],[\"实现gc线程和应用线程并发工作\",{\"1\":{\"78\":1}}],[\"实现简单\",{\"1\":{\"77\":1,\"314\":1,\"334\":1}}],[\"实现子类\",{\"1\":{\"16\":1}}],[\"实现类名称\",{\"1\":{\"15\":1}}],[\"实现类比较\",{\"0\":{\"15\":1}}],[\"实现原理\",{\"0\":{\"8\":1},\"1\":{\"15\":1}}],[\"实例化一个对象其实可以分为三个步骤\",{\"1\":{\"181\":1}}],[\"实例\",{\"0\":{\"3\":1,\"6\":1}}],[\"动态调整这些参数以提供最合适的停顿时间或最大的吞吐量\",{\"1\":{\"78\":1}}],[\"动态链接\",{\"1\":{\"66\":1,\"67\":1}}],[\"动态生成\",{\"1\":{\"4\":1}}],[\"动态地将横切逻辑和业务逻辑编织在一起\",{\"1\":{\"2\":1}}],[\"动态代理\",{\"0\":{\"2\":1}}],[\"动态代理和\",{\"0\":{\"0\":1}}],[\"并做出相应的决策了\",{\"1\":{\"406\":1}}],[\"并进行特别的记忆\",{\"1\":{\"406\":1}}],[\"并提炼规律\",{\"1\":{\"405\":1}}],[\"并指导今后的行动\",{\"1\":{\"405\":2}}],[\"并结合题材进行综合分析\",{\"1\":{\"398\":1}}],[\"并不是说除了板块效应形成的当天和第二天\",{\"1\":{\"398\":1}}],[\"并不是一定就要进行同步\",{\"1\":{\"129\":1}}],[\"并根据\",{\"1\":{\"398\":1}}],[\"并日益完善\",{\"1\":{\"385\":1}}],[\"并释放在整个事务期间占用的资源\",{\"1\":{\"336\":2}}],[\"并将undo信息和redo信息写入日志\",{\"1\":{\"336\":1}}],[\"并开始等待各参与者的响应\",{\"1\":{\"336\":1}}],[\"并创建一个handler来处理连接后续的各种事件\",{\"1\":{\"318\":1}}],[\"并记录存入\",{\"1\":{\"216\":1}}],[\"并发\",{\"0\":{\"103\":1}}],[\"并且整个题材内分歧的个股同时跟着拉升\",{\"1\":{\"244\":1}}],[\"并且竞价发现核心标的都开得不高\",{\"1\":{\"244\":1}}],[\"并且没有执行\",{\"1\":{\"149\":1}}],[\"并且在释放锁之前会将对变量的修改刷新到主存当中\",{\"1\":{\"115\":1}}],[\"并且设置对应的\",{\"1\":{\"88\":1}}],[\"并且通过反射获取到它的所有的接口\",{\"1\":{\"4\":1}}],[\"并设置默认的初始值\",{\"1\":{\"63\":1}}],[\"并覆盖其中方法实现增强\",{\"1\":{\"11\":1}}],[\"并通过反射机制调用目标类的代码\",{\"1\":{\"2\":1}}],[\"并由代理对象控制原对象的引用\",{\"1\":{\"1\":1}}],[\"如论坛\",{\"1\":{\"402\":1}}],[\"如释重负\",{\"1\":{\"398\":1}}],[\"如贵州燃气主升中每一个涨停都是实体阳线板\",{\"1\":{\"398\":1}}],[\"如指数情绪的助推\",{\"1\":{\"398\":1}}],[\"如双十一秒杀\",{\"1\":{\"345\":1}}],[\"如使用同一个网络\",{\"1\":{\"344\":1}}],[\"如检测告警\",{\"1\":{\"328\":1}}],[\"如硬件\",{\"1\":{\"328\":1}}],[\"如ladp\",{\"1\":{\"281\":1}}],[\"如与前面的\",{\"1\":{\"121\":1}}],[\"如何设计的\",{\"1\":{\"363\":1}}],[\"如何决定新的主机\",{\"1\":{\"336\":1}}],[\"如何应对复制中断\",{\"1\":{\"331\":1}}],[\"如何应对复制延迟\",{\"1\":{\"331\":1}}],[\"如何提供按需禁用缓存和编译优化的方法\",{\"1\":{\"109\":1}}],[\"如何判断一个对象是否还存活\",{\"0\":{\"76\":1}}],[\"如果您是一位有短线基础的读者\",{\"1\":{\"406\":1}}],[\"如果几个席位在第一天的涨停中进场\",{\"1\":{\"406\":1}}],[\"如果位置偏高或破位\",{\"1\":{\"406\":1}}],[\"如果体现在权重股身上\",{\"1\":{\"406\":1}}],[\"如果时间倒流回去\",{\"1\":{\"405\":1}}],[\"如果封板率低\",{\"1\":{\"404\":1}}],[\"如果人气股第二天表现不好\",{\"1\":{\"404\":1}}],[\"如果第二天走得不太好\",{\"1\":{\"404\":1}}],[\"如果第二段提交的时候参与者未接收到消息就会出现超时回滚的情况\",{\"1\":{\"336\":1}}],[\"如果昨晚上做的操盘计划里面准备今天要接力相关股票的\",{\"1\":{\"404\":1}}],[\"如果昨日涨停今日普遍溢价不高\",{\"1\":{\"403\":1}}],[\"如果昨日涨停的票今天能够有不错的溢价\",{\"1\":{\"403\":1}}],[\"如果涨停的家数不断增多\",{\"1\":{\"404\":1}}],[\"如果这时候不谨慎\",{\"1\":{\"404\":1}}],[\"如果这个数据没有被更新\",{\"1\":{\"158\":1}}],[\"如果市场环境不妙\",{\"1\":{\"406\":1}}],[\"如果市场上出现了超过5家以上的跌停板\",{\"1\":{\"404\":1}}],[\"如果市场的个股大多是绿色的\",{\"1\":{\"404\":1}}],[\"如果某只票前面两天还炸板\",{\"1\":{\"403\":1}}],[\"如果某只个股承接出现很大问题\",{\"1\":{\"403\":1}}],[\"如果某些部分必须在其它部分之前完成\",{\"1\":{\"152\":1}}],[\"如果出现比较极端状况\",{\"1\":{\"403\":1}}],[\"如果出现5只以上涨停\",{\"1\":{\"398\":1}}],[\"如果符合预期\",{\"1\":{\"403\":1}}],[\"如果手里持有的是跟风股\",{\"1\":{\"403\":1}}],[\"如果手里持有龙头\",{\"1\":{\"403\":1}}],[\"如果跟预期相差太大\",{\"1\":{\"403\":1}}],[\"如果前一天上涨家数少\",{\"1\":{\"403\":1}}],[\"如果前一天出现分时的明显弱转强打出加分识别度\",{\"1\":{\"244\":1}}],[\"如果主流题材进入到高位分歧阶段或者临近炒作结束阶段\",{\"1\":{\"403\":1}}],[\"如果主流题材一开盘\",{\"1\":{\"403\":1}}],[\"如果主机不能恢复\",{\"1\":{\"340\":1,\"341\":1}}],[\"如果主机不可修复\",{\"1\":{\"332\":1,\"333\":1}}],[\"如果主机能够恢复\",{\"1\":{\"340\":1,\"341\":1}}],[\"如果主机无法恢复则需要人工参与\",{\"1\":{\"334\":1}}],[\"如果主机恢复后\",{\"1\":{\"333\":1}}],[\"如果大跌的票增多\",{\"1\":{\"404\":1}}],[\"如果大盘表现良好\",{\"1\":{\"398\":1}}],[\"如果大量拼接\",{\"1\":{\"85\":1}}],[\"如果你选择了情绪流\",{\"1\":{\"398\":1}}],[\"如果你手上的标的再一致点的时候断板\",{\"1\":{\"244\":1}}],[\"如果你手上的标的\",{\"1\":{\"244\":1}}],[\"如果有很多的游资席位都上了很大仓位\",{\"1\":{\"406\":1}}],[\"如果有很多个股都顶一字板的形式走强\",{\"1\":{\"398\":1}}],[\"如果有分化\",{\"1\":{\"406\":1}}],[\"如果有不相等的则返回插值\",{\"1\":{\"99\":1}}],[\"如果参与者未接收到提交数据\",{\"1\":{\"336\":1}}],[\"如果参与者执行失败\",{\"1\":{\"336\":1}}],[\"如果故障主机不能恢复则需要人工添加一台新的主机\",{\"1\":{\"335\":1}}],[\"如果故障主机恢复\",{\"1\":{\"335\":1}}],[\"如果是这样\",{\"1\":{\"406\":1}}],[\"如果是这个流程\",{\"1\":{\"181\":1}}],[\"如果是响应题材的\",{\"1\":{\"406\":1}}],[\"如果是\",{\"1\":{\"403\":1}}],[\"如果是第二天上车\",{\"1\":{\"398\":1}}],[\"如果是连接建立的事件\",{\"1\":{\"318\":1}}],[\"如果通过索引满足则会添加大量的索引\",{\"1\":{\"315\":1}}],[\"如果设置https\",{\"1\":{\"281\":1}}],[\"如果设置为true那么就按照双亲委派机制加载类\",{\"1\":{\"60\":1}}],[\"如果映射端口为\",{\"1\":{\"269\":1}}],[\"如果叠加后排卡前排更佳\",{\"1\":{\"244\":1}}],[\"如果转强应该是空转多一致性的表现\",{\"1\":{\"244\":1}}],[\"如果开盘转强之后往下砸\",{\"1\":{\"244\":1}}],[\"如果开盘向上\",{\"1\":{\"244\":1}}],[\"如果竞价没有上\",{\"1\":{\"244\":1}}],[\"如果情绪良好\",{\"1\":{\"244\":1}}],[\"如果从买卖逻辑上来说\",{\"1\":{\"244\":1}}],[\"如果以x86处理为例\",{\"1\":{\"178\":1}}],[\"如果可见的\",{\"1\":{\"176\":1}}],[\"如果线程t对数据a加上共享锁后\",{\"1\":{\"163\":1}}],[\"如果线程t对数据a加上排它锁后\",{\"1\":{\"163\":1}}],[\"如果自旋超过了限定次数\",{\"1\":{\"159\":1}}],[\"如果锁被占用的时间很长\",{\"1\":{\"159\":1}}],[\"如果锁被占用的时间很短\",{\"1\":{\"159\":1}}],[\"如果物理机器有多个处理器\",{\"1\":{\"159\":1}}],[\"如果数据已经被其他线程更新\",{\"1\":{\"158\":1}}],[\"如果该线程处于阻塞\",{\"1\":{\"148\":1}}],[\"如果其线程释放了锁就会结束此状态\",{\"1\":{\"136\":1}}],[\"如果能保证\",{\"1\":{\"131\":1}}],[\"如果一段代码中所需要的数据必须与其他代码共享\",{\"1\":{\"131\":1}}],[\"如果一个进程的连接数过多\",{\"1\":{\"318\":1}}],[\"如果一个类没有使用\",{\"1\":{\"236\":1}}],[\"如果一个线程的\",{\"1\":{\"149\":1}}],[\"如果一个方法本来就不涉及共享数据\",{\"1\":{\"129\":1}}],[\"如果一个变量初次读取的时候是\",{\"1\":{\"128\":1}}],[\"如果需要解决\",{\"1\":{\"128\":1}}],[\"如果需要对自定义对象进行判断是否相等\",{\"1\":{\"97\":1}}],[\"如果要实现更大范围操作的原子性\",{\"1\":{\"114\":1}}],[\"如果要被代理的对象不是个实现类那么\",{\"1\":{\"10\":1}}],[\"如果要被代理的对象是个实现类\",{\"1\":{\"10\":1}}],[\"如果操作\",{\"1\":{\"113\":1,\"218\":1}}],[\"如果不是连接建立事件\",{\"1\":{\"318\":1}}],[\"如果不能尽快修复\",{\"1\":{\"244\":1}}],[\"如果不能引发大盘的回暖\",{\"1\":{\"243\":1}}],[\"如果不存在数据依赖性\",{\"1\":{\"108\":1}}],[\"如果不重写\",{\"1\":{\"97\":1}}],[\"如果不在返回内会抛出stringindexoutofboundsexception异常\",{\"1\":{\"96\":1}}],[\"如果不想浪费50\",{\"1\":{\"77\":1}}],[\"如果指定了选项\",{\"1\":{\"78\":1}}],[\"如果扩展到无法申请到足够的内存就会抛出\",{\"1\":{\"66\":1,\"68\":1}}],[\"如果上述都没有找到\",{\"1\":{\"60\":1}}],[\"如果本地应用目录下还有没有这个类\",{\"1\":{\"60\":1}}],[\"如果先加载这个类\",{\"1\":{\"60\":1}}],[\"如果\",{\"1\":{\"60\":2,\"222\":1}}],[\"如果加载过就返回\",{\"1\":{\"60\":1}}],[\"如果加载过就返回缓存中的\",{\"1\":{\"60\":1}}],[\"如果没有太大把握\",{\"1\":{\"398\":1}}],[\"如果没有太大的把握\",{\"1\":{\"398\":1}}],[\"如果没有释放锁\",{\"1\":{\"154\":1}}],[\"如果没有其它线程争用共享数据\",{\"1\":{\"126\":1}}],[\"如果没有加载过\",{\"1\":{\"60\":1}}],[\"如果没有则调用\",{\"1\":{\"42\":1}}],[\"如果在退潮期\",{\"1\":{\"398\":1}}],[\"如果在自旋完成后前面锁定同步资源的线程已经释放了锁\",{\"1\":{\"159\":1}}],[\"如果在运行过程中发生异常也会提前结束\",{\"1\":{\"147\":1}}],[\"如果在webappclassloader没找到类\",{\"1\":{\"60\":1}}],[\"如果在本地目录没有找到\",{\"1\":{\"60\":1}}],[\"如果父加载器也没找到\",{\"1\":{\"60\":1}}],[\"如果找不到在交给父加载器去加载\",{\"1\":{\"59\":1}}],[\"如果收到类加载的请求\",{\"1\":{\"59\":1}}],[\"如果当前插入的位置等于元素数量即当前集合数据已满\",{\"1\":{\"19\":1}}],[\"如\",{\"1\":{\"2\":1,\"131\":1,\"402\":1,\"404\":1}}],[\"jre\",{\"1\":{\"291\":1}}],[\"jobservice\",{\"1\":{\"283\":3}}],[\"job\",{\"1\":{\"281\":1}}],[\"join\",{\"0\":{\"153\":1},\"1\":{\"113\":1,\"137\":1,\"138\":1,\"153\":1,\"218\":1,\"314\":3}}],[\"jh2wgcjjnmvq7m9l9rbr8qdw5fr7nrd2bjssjfngmcjrsxncdphf7d\",{\"1\":{\"278\":1}}],[\"jhat\",{\"1\":{\"83\":1}}],[\"jenkins\",{\"0\":{\"284\":1,\"287\":1,\"290\":1,\"291\":1},\"1\":{\"261\":1,\"284\":8,\"285\":5,\"287\":1}}],[\"jdbc\",{\"1\":{\"229\":2}}],[\"jdk中的synchronized和juc中lock的实现类就是互斥锁\",{\"1\":{\"163\":1}}],[\"jdk1\",{\"1\":{\"90\":1}}],[\"jdk的动态代理机制只能代理实现了接口的类\",{\"1\":{\"11\":1}}],[\"jdk动态代理的速度已经比cglib动态代理的速度快很多了\",{\"1\":{\"12\":1}}],[\"jdk动态代理的速度要比cglib动态代理的速度要慢\",{\"1\":{\"12\":1}}],[\"jdk动态代理是面向接口的\",{\"1\":{\"9\":1}}],[\"jdk动态代理具体实现原理\",{\"1\":{\"8\":1}}],[\"jdk动态代理步骤\",{\"0\":{\"4\":1}}],[\"jdk动态代理主要涉及java\",{\"1\":{\"2\":1}}],[\"jdk\",{\"0\":{\"0\":1,\"2\":1},\"1\":{\"85\":1,\"151\":1,\"229\":1,\"286\":2}}],[\"juc\",{\"0\":{\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1}}],[\"jmm不保证线程b的写入对线程c可见\",{\"1\":{\"176\":1}}],[\"jmm会禁止这两个操作的重排序\",{\"1\":{\"173\":1}}],[\"jmm禁止编译器把final域的写重排序到构造函数之外\",{\"1\":{\"172\":1}}],[\"jmm\",{\"1\":{\"108\":2,\"187\":1,\"190\":4}}],[\"jmap\",{\"1\":{\"80\":1,\"83\":2}}],[\"j\",{\"1\":{\"106\":1,\"127\":1,\"128\":1}}],[\"jinfo\",{\"1\":{\"83\":2}}],[\"jit\",{\"0\":{\"74\":1},\"1\":{\"66\":1,\"71\":1,\"74\":1}}],[\"json\",{\"1\":{\"268\":1,\"296\":1}}],[\"jstack\",{\"1\":{\"83\":2}}],[\"jstat\",{\"1\":{\"83\":2}}],[\"jsp\",{\"1\":{\"83\":1}}],[\"jps\",{\"1\":{\"83\":1}}],[\"jar\",{\"1\":{\"59\":2,\"291\":3}}],[\"java原子类中的递增操作就通过cas自旋实现的\",{\"1\":{\"158\":1}}],[\"java中reentrantlock和synchronized都是可重入锁\",{\"1\":{\"162\":1}}],[\"java中\",{\"1\":{\"158\":1}}],[\"java提供了volatile关键字来保证可见性\",{\"1\":{\"115\":1}}],[\"java提供了动态代理技术\",{\"1\":{\"2\":1}}],[\"java内存模型只保证了基本读取和赋值是原子性操作\",{\"1\":{\"114\":1}}],[\"java是怎么解决并发问题的\",{\"0\":{\"109\":1}}],[\"java8及之后堆内存分为\",{\"1\":{\"71\":1}}],[\"javaseloader\",{\"1\":{\"60\":2}}],[\"javac\",{\"1\":{\"55\":1}}],[\"java集合\",{\"0\":{\"13\":1}}],[\"java\",{\"0\":{\"157\":1,\"200\":1,\"201\":1,\"213\":1,\"215\":1,\"227\":1,\"229\":1},\"1\":{\"4\":2,\"13\":1,\"54\":6,\"55\":1,\"60\":2,\"62\":3,\"63\":1,\"64\":1,\"66\":4,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":2,\"74\":1,\"83\":3,\"90\":1,\"98\":2,\"108\":2,\"109\":1,\"121\":1,\"122\":1,\"131\":1,\"141\":1,\"151\":1,\"156\":1,\"190\":1,\"201\":2,\"228\":1,\"286\":1,\"291\":2}}],[\"jvm\",{\"0\":{\"54\":1,\"55\":1,\"80\":1,\"81\":1},\"1\":{\"4\":1,\"54\":7,\"61\":1,\"66\":1,\"70\":3,\"72\":1,\"82\":1,\"83\":1,\"109\":1,\"151\":1,\"201\":1,\"203\":1,\"218\":1}}],[\"1或localhost\",{\"1\":{\"281\":1}}],[\"192\",{\"1\":{\"296\":1}}],[\"190\",{\"1\":{\"278\":1,\"289\":2,\"291\":11}}],[\"19\",{\"0\":{\"219\":1,\"377\":1,\"409\":1}}],[\"18\",{\"0\":{\"218\":1,\"368\":1}}],[\"17世纪后\",{\"1\":{\"385\":1}}],[\"172\",{\"1\":{\"278\":1,\"289\":2,\"291\":11}}],[\"17\",{\"0\":{\"217\":1,\"365\":1}}],[\"15\",{\"0\":{\"215\":1,\"249\":1,\"360\":1}}],[\"14\",{\"0\":{\"214\":1,\"356\":1}}],[\"13\",{\"0\":{\"213\":1,\"353\":1}}],[\"11\",{\"0\":{\"211\":1,\"346\":1}}],[\"1234\",{\"1\":{\"281\":2}}],[\"12\",{\"0\":{\"212\":1,\"350\":1},\"1\":{\"289\":1}}],[\"127\",{\"1\":{\"205\":1,\"221\":2}}],[\"128\",{\"1\":{\"205\":1}}],[\"1需要三条\",{\"1\":{\"107\":1}}],[\"1>>>1\",{\"1\":{\"100\":1}}],[\"16世纪\",{\"1\":{\"385\":1}}],[\"168\",{\"1\":{\"296\":1}}],[\"16\",{\"0\":{\"216\":1,\"364\":1},\"1\":{\"41\":1,\"42\":1}}],[\"10月21日\",{\"1\":{\"244\":1}}],[\"10月18日\",{\"1\":{\"244\":1}}],[\"10月14日信创为例\",{\"1\":{\"244\":1}}],[\"10月13日信创为例\",{\"1\":{\"244\":1}}],[\"10\",{\"0\":{\"210\":1,\"343\":1,\"452\":1,\"460\":1,\"467\":2},\"1\":{\"19\":1,\"29\":1,\"71\":3,\"291\":1,\"398\":1}}],[\"1\",{\"0\":{\"85\":1,\"201\":1,\"220\":1,\"243\":1,\"263\":1,\"267\":1,\"271\":1,\"295\":1,\"300\":1,\"384\":1,\"390\":1,\"400\":1,\"402\":1},\"1\":{\"2\":1,\"19\":4,\"41\":3,\"60\":3,\"62\":1,\"71\":3,\"78\":1,\"85\":1,\"90\":1,\"92\":1,\"95\":1,\"96\":2,\"107\":1,\"108\":1,\"143\":1,\"176\":1,\"203\":2,\"210\":1,\"213\":3,\"244\":4,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"289\":1,\"296\":2,\"315\":2,\"318\":5,\"332\":1,\"333\":1,\"335\":2,\"336\":4,\"342\":2,\"344\":2,\"380\":1,\"381\":1,\"395\":1,\"398\":11,\"400\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":1}}],[\"ppc\",{\"1\":{\"318\":1}}],[\"pip\",{\"1\":{\"295\":1}}],[\"pid\",{\"1\":{\"80\":1,\"83\":1}}],[\"pem\",{\"1\":{\"283\":1}}],[\"persistent\",{\"1\":{\"265\":1}}],[\"per\",{\"1\":{\"131\":1,\"318\":2}}],[\"permission\",{\"1\":{\"60\":1}}],[\"pwd\",{\"1\":{\"281\":1}}],[\"p\",{\"1\":{\"268\":1,\"269\":2,\"291\":1,\"322\":1}}],[\"pkg\",{\"1\":{\"284\":2}}],[\"pk\",{\"1\":{\"244\":1}}],[\"phantomreference\",{\"1\":{\"213\":2}}],[\"phrof\",{\"1\":{\"80\":1}}],[\"png\",{\"1\":{\"133\":1}}],[\"pc\",{\"1\":{\"100\":3}}],[\"ports\",{\"1\":{\"289\":2,\"291\":2,\"297\":2}}],[\"port\",{\"1\":{\"281\":1,\"289\":1,\"291\":1,\"296\":1,\"297\":6}}],[\"po++\",{\"1\":{\"100\":1}}],[\"po\",{\"1\":{\"100\":1}}],[\"post\",{\"1\":{\"288\":1}}],[\"position\",{\"1\":{\"99\":3}}],[\"positions\",{\"1\":{\"99\":1}}],[\"positive\",{\"1\":{\"99\":1}}],[\"possible\",{\"1\":{\"60\":1}}],[\"platform\",{\"1\":{\"90\":1}}],[\"push\",{\"1\":{\"291\":4}}],[\"pub\",{\"1\":{\"286\":1}}],[\"public\",{\"0\":{\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1},\"1\":{\"3\":8,\"6\":7,\"60\":2,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"291\":19}}],[\"pull\",{\"1\":{\"269\":1}}],[\"pure\",{\"1\":{\"132\":1}}],[\"putifabsent\",{\"1\":{\"40\":1}}],[\"putall\",{\"1\":{\"40\":1}}],[\"put\",{\"1\":{\"40\":1,\"42\":1}}],[\"prf\",{\"1\":{\"213\":1}}],[\"proactor\",{\"1\":{\"318\":1}}],[\"project\",{\"1\":{\"281\":1,\"291\":4,\"296\":1,\"297\":1}}],[\"protocol\",{\"1\":{\"281\":1}}],[\"produces\",{\"1\":{\"98\":2}}],[\"provided\",{\"1\":{\"92\":1}}],[\"process\",{\"1\":{\"90\":1,\"318\":1}}],[\"proxy类重新生成一个新的类\",{\"1\":{\"4\":1}}],[\"proxytest\",{\"1\":{\"3\":1}}],[\"proxyhandler\",{\"1\":{\"3\":4}}],[\"proxy和invocationhandler\",{\"1\":{\"2\":1}}],[\"proxy\",{\"1\":{\"1\":1,\"3\":2,\"6\":2,\"314\":1}}],[\"prethread\",{\"1\":{\"318\":1}}],[\"preblockspin来更改\",{\"1\":{\"159\":1}}],[\"pre>\",{\"1\":{\"100\":1}}],[\"pre><\",{\"1\":{\"99\":2}}],[\"prefork\",{\"1\":{\"318\":1}}],[\"prefix\",{\"0\":{\"100\":1},\"1\":{\"100\":8}}],[\"preferred\",{\"1\":{\"92\":1}}],[\"precedes\",{\"1\":{\"99\":3}}],[\"prepare\",{\"0\":{\"63\":1},\"1\":{\"283\":2}}],[\"predicate<\",{\"1\":{\"14\":1}}],[\"privilegedjavasegetresource\",{\"1\":{\"60\":1}}],[\"privilegedaction<url>\",{\"1\":{\"60\":1}}],[\"privilegedaction<class<\",{\"1\":{\"60\":1}}],[\"privilegedgetclassloader\",{\"1\":{\"60\":1}}],[\"privilegedfindclassbyname\",{\"1\":{\"60\":1}}],[\"private\",{\"1\":{\"3\":1,\"6\":1,\"19\":2,\"85\":3,\"167\":1,\"283\":1}}],[\"println\",{\"1\":{\"3\":3,\"6\":3}}],[\"paxos\",{\"1\":{\"342\":1}}],[\"paxos算法\",{\"1\":{\"336\":1}}],[\"paths\",{\"1\":{\"289\":1,\"291\":1,\"297\":1}}],[\"path\",{\"1\":{\"281\":1,\"289\":1,\"291\":1,\"297\":1}}],[\"pattern\",{\"1\":{\"1\":1}}],[\"password\",{\"1\":{\"281\":4}}],[\"passing\",{\"1\":{\"60\":1}}],[\"pa\",{\"1\":{\"100\":2}}],[\"parkuntil\",{\"1\":{\"138\":1}}],[\"parknanos\",{\"1\":{\"138\":1}}],[\"park\",{\"1\":{\"137\":1}}],[\"param\",{\"1\":{\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":2}}],[\"parallelism\",{\"1\":{\"108\":1}}],[\"parallelgcthreads选项指定gc的线程数\",{\"1\":{\"78\":1}}],[\"parallel\",{\"1\":{\"78\":8}}],[\"parallel收集器更关注系统的吞吐量\",{\"1\":{\"78\":1}}],[\"parallel收集器\",{\"1\":{\"78\":1}}],[\"parallelstream\",{\"1\":{\"14\":1}}],[\"parnew是serial的并行版本\",{\"1\":{\"78\":1}}],[\"parnew\",{\"1\":{\"78\":2}}],[\"parnew收集器其实就是serial收集器的多线程版本\",{\"1\":{\"78\":1}}],[\"parnew收集器\",{\"1\":{\"78\":1}}],[\"parent\",{\"1\":{\"3\":7,\"60\":8,\"291\":3}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
